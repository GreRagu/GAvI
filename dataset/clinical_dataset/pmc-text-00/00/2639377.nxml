<!DOCTYPE article PUBLIC "-//NLM//DTD Journal Archiving and Interchange DTD v2.3 20070202//EN" "archivearticle.dtd"><article xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article"><?properties open_access?><front><journal-meta><journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id><journal-title>BMC Bioinformatics</journal-title><issn pub-type="epub">1471-2105</issn><publisher><publisher-name>BioMed Central</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="pmid">19159484</article-id><article-id pub-id-type="pmc">2639377</article-id><article-id pub-id-type="publisher-id">1471-2105-10-29</article-id><article-id pub-id-type="doi">10.1186/1471-2105-10-29</article-id><article-categories><subj-group subj-group-type="heading"><subject>Methodology Article</subject></subj-group></article-categories><title-group><article-title>Using least median of squares for structural superposition of flexible proteins</article-title></title-group><contrib-group><contrib id="A1" corresp="yes" contrib-type="author"><name><surname>Liu</surname><given-names>Yu-Shen</given-names></name><xref ref-type="aff" rid="I1">1</xref><email>liuyushen00@gmail.com</email></contrib><contrib id="A2" contrib-type="author"><name><surname>Fang</surname><given-names>Yi</given-names></name><xref ref-type="aff" rid="I1">1</xref><email>fang4@purdue.edu</email></contrib><contrib id="A3" contrib-type="author"><name><surname>Ramani</surname><given-names>Karthik</given-names></name><xref ref-type="aff" rid="I1">1</xref><xref ref-type="aff" rid="I2">2</xref><email>ramani@purdue.edu</email></contrib></contrib-group><aff id="I1"><label>1</label>School of Mechanical Engineering, Purdue University, West Lafayette, IN 47907, USA</aff><aff id="I2"><label>2</label>School of Electrical Computer Engineering (by courtesy), Purdue University, West Lafayette, IN 47907, USA</aff><pub-date pub-type="collection"><year>2009</year></pub-date><pub-date pub-type="epub"><day>22</day><month>1</month><year>2009</year></pub-date><volume>10</volume><fpage>29</fpage><lpage>29</lpage><ext-link ext-link-type="uri" xlink:href="http://www.biomedcentral.com/1471-2105/10/29"/><history><date date-type="received"><day>30</day><month>6</month><year>2008</year></date><date date-type="accepted"><day>22</day><month>1</month><year>2009</year></date></history><permissions><copyright-statement>Copyright &#x000a9; 2009 Liu et al; licensee BioMed Central Ltd.</copyright-statement><copyright-year>2009</copyright-year><copyright-holder>Liu et al; licensee BioMed Central Ltd.</copyright-holder><license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/2.0"><p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/2.0"/>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</p><!--<rdf xmlns="http://web.resource.org/cc/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1" xmlns:dcterms="http://purl.org/dc/terms"><Work xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" rdf:about=""><license rdf:resource="http://creativecommons.org/licenses/by/2.0"/><dc:type rdf:resource="http://purl.org/dc/dcmitype/Text"/><dc:author>               Liu               Yu-Shen                              liuyushen00@gmail.com            </dc:author><dc:title>            Using least median of squares for structural superposition of flexible proteins         </dc:title><dc:date>2009</dc:date><dcterms:bibliographicCitation>BMC Bioinformatics 10(1): 29-. (2009)</dcterms:bibliographicCitation><dc:identifier type="sici">1471-2105(2009)10:1&#x0003c;29&#x0003e;</dc:identifier><dcterms:isPartOf>urn:ISSN:1471-2105</dcterms:isPartOf><License rdf:about="http://creativecommons.org/licenses/by/2.0"><permits rdf:resource="http://web.resource.org/cc/Reproduction" xmlns=""/><permits rdf:resource="http://web.resource.org/cc/Distribution" xmlns=""/><requires rdf:resource="http://web.resource.org/cc/Notice" xmlns=""/><requires rdf:resource="http://web.resource.org/cc/Attribution" xmlns=""/><permits rdf:resource="http://web.resource.org/cc/DerivativeWorks" xmlns=""/></License></Work></rdf>--></license></permissions><abstract><sec><title>Background</title><p>The conventional superposition methods use an ordinary least squares (LS) fit for structural comparison of two different conformations of the same protein. The main problem of the LS fit that it is sensitive to outliers, i.e. large displacements of the original structures superimposed.</p></sec><sec><title>Results</title><p>To overcome this problem, we present a new algorithm to overlap two protein conformations by their atomic coordinates using a robust statistics technique: least median of squares (LMS). In order to effectively approximate the LMS optimization, the forward search technique is utilized. Our algorithm can automatically detect and superimpose the rigid core regions of two conformations with small or large displacements. In contrast, most existing superposition techniques strongly depend on the initial LS estimating for the entire atom sets of proteins. They may fail on structural superposition of two conformations with large displacements. The presented LMS fit can be considered as an alternative and complementary tool for structural superposition.</p></sec><sec><title>Conclusion</title><p>The proposed algorithm is robust and does not require any prior knowledge of the flexible regions. Furthermore, we show that the LMS fit can be extended to multiple level superposition between two conformations with several rigid domains. Our fit tool has produced successful superpositions when applied to proteins for which two conformations are known. The binary executable program for Windows platform, tested examples, and database are available from <ext-link ext-link-type="uri" xlink:href="https://engineering.purdue.edu/PRECISE/LMSfit"/>.</p></sec></abstract></article-meta></front><body><sec><title>Background</title><p>Protein flexibility is of great interest due to its essential role in various biological processes. The flexibility of dynamic regions allows a protein to assume multiple conformational states. Protein conformational changes play a critical role in biological functions such as ligand-protein and protein-protein interactions [<xref ref-type="bibr" rid="B1">1</xref>-<xref ref-type="bibr" rid="B5">5</xref>]. The rigid regions of the protein with highly structural stability will remain relatively unchanged between the multiple conformations in spite of any movement of the flexible regions [<xref ref-type="bibr" rid="B2">2</xref>-<xref ref-type="bibr" rid="B4">4</xref>]. In order to understand this kind of biological process, it is the first step to find out which regions keep the same and which change between two or multiple conformations. Structural superposition, defined as laying one molecule over the other by appropriate rotation and translation, is a common way to achieve that goal [<xref ref-type="bibr" rid="B2">2</xref>,<xref ref-type="bibr" rid="B6">6</xref>-<xref ref-type="bibr" rid="B8">8</xref>].</p><p>Superposition of molecular structures is an essential tool in structural bioinformatics and is used routinely in the fields of NMR, X-ray crystallography, protein folding, molecular dynamics, rational drug design and structural evolution [<xref ref-type="bibr" rid="B2">2</xref>,<xref ref-type="bibr" rid="B6">6</xref>-<xref ref-type="bibr" rid="B8">8</xref>]. The conventional superposition methods treat proteins as rigid bodies and use an ordinary <italic>least squares </italic>(LS) fit, in which the optimal rotations and translations are found by minimizing the root mean square deviation (RMSD) [<xref ref-type="bibr" rid="B9">9</xref>-<xref ref-type="bibr" rid="B13">13</xref>] between equivalent atom pairs. The LS fit for structural superposition of proteins is also called the RMSD fit. However, proteins are flexible molecules that undergo significant structural changes as a part of their normal function. When flexible molecules in different conformations are fitted to each other as rigid bodies, even strong structural similarity can be missed [<xref ref-type="bibr" rid="B14">14</xref>]. One main problem of the conventional LS fit is sensitive to local displacements [<xref ref-type="bibr" rid="B2">2</xref>,<xref ref-type="bibr" rid="B8">8</xref>,<xref ref-type="bibr" rid="B15">15</xref>,<xref ref-type="bibr" rid="B16">16</xref>]. In addition, most existing improvements of superposition, which strongly depend on the initial LS estimating for the entire atom sets of proteins [<xref ref-type="bibr" rid="B2">2</xref>,<xref ref-type="bibr" rid="B7">7</xref>,<xref ref-type="bibr" rid="B8">8</xref>,<xref ref-type="bibr" rid="B16">16</xref>-<xref ref-type="bibr" rid="B20">20</xref>], may fail on structural superposition of two conformations with large displacements. To correct these shortcomings of the conventional LS fit, we introduce a new fit algorithm based on the robust statistics techniques that will be explained later. Our method deals with the superposition of two conformations with small or large displacements without any prior knowledge of the flexible regions.</p><p>The heart of comparing two conformations of a protein is an appropriate overlay of the structures for visual inspection, where one protein is typically represented by its virtual <italic>C</italic><sub><italic>&#x003b1; </italic></sub>atom chain of residues [<xref ref-type="bibr" rid="B2">2</xref>,<xref ref-type="bibr" rid="B13">13</xref>,<xref ref-type="bibr" rid="B21">21</xref>]. A relatively large number of protein structural comparison algorithms have been presented. They can be roughly categorized into two classes [<xref ref-type="bibr" rid="B22">22</xref>]: <italic>structural superposition </italic>and <italic>structural alignment</italic>.</p><p>In the structural superposition problems, protein structures are compared with a prior specified equivalence between pairs of residues (such an equivalence can be provided by sequence or threading algorithms, for example) [<xref ref-type="bibr" rid="B2">2</xref>,<xref ref-type="bibr" rid="B8">8</xref>,<xref ref-type="bibr" rid="B22">22</xref>]. The most commonly used superposition algorithm is the LS fit. The RMSD fit is a widely used algorithm to calculate the LS solution for evaluating the fit and quality of superposition [<xref ref-type="bibr" rid="B8">8</xref>]. The widely used algorithm to calculate the RMSD fit in matrix form was previously described by Kabsch [<xref ref-type="bibr" rid="B9">9</xref>-<xref ref-type="bibr" rid="B12">12</xref>]. This algorithm is the basis of most structural comparison methods that overlay molecules. Like most RMSD fitting procedures, the paper only superimposes the <italic>C</italic><sub><italic>&#x003b1; </italic></sub>atoms, i.e. residues. Given two proteins composed of <italic>N </italic>atoms each, whose Cartesian coordinates are represented by an ordered set of points {<bold>x</bold><sub>1</sub>, ..., <bold>x</bold><sub><italic>N</italic></sub>} and a second set {<bold>y</bold><sub>1</sub>, ..., <bold>y</bold><sub><italic>N</italic></sub>}, respectively. The center of mass of both proteins are at the origin (it is trivial to translate any set of protein coordinates to accomplish this). The RMSD fit problem is then to find an orthogonal 3 &#x000d7; 3 matrix <bold>U </bold>by minimizing the following residual function:</p><p><disp-formula id="bmcM1"><label>(1)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M1" name="1471-2105-10-29-i1" overflow="scroll"><mml:semantics><mml:mrow><mml:msubsup><mml:mi>D</mml:mi><mml:mrow><mml:mi>r</mml:mi><mml:mi>m</mml:mi><mml:mi>s</mml:mi><mml:mi>d</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mi>N</mml:mi></mml:mfrac><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>&#x02211;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>N</mml:mi></mml:munderover><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mo>&#x02016;</mml:mo><mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>U</mml:mi></mml:mstyle><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>x</mml:mi></mml:mstyle><mml:mi>i</mml:mi></mml:msub><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>y</mml:mi></mml:mstyle><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mo>&#x02016;</mml:mo></mml:mrow></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:mstyle><mml:mo>.</mml:mo></mml:mrow></mml:semantics></mml:math></disp-formula></p><p>When <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M2" name="1471-2105-10-29-i2" overflow="scroll"><mml:semantics><mml:mrow><mml:msubsup><mml:mi>D</mml:mi><mml:mrow><mml:mi>r</mml:mi><mml:mi>m</mml:mi><mml:mi>s</mml:mi><mml:mi>d</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:semantics></mml:math></inline-formula> is a minimum, the square root of its value (i.e. <italic>D</italic><sub><italic>rmsd</italic></sub>) becomes the minimal RMSD distance between two point sets. An alternative way to represent the two point sets uses two 3 &#x000d7; <italic>N </italic>matrices <bold>X </bold>and <bold>Y</bold>, where the <italic>i</italic>th column of <bold>X </bold>is the vector <bold>x</bold><sub><italic>i</italic></sub>, and similarly for <bold>Y</bold>. The RMSD optimization consists of four steps [<xref ref-type="bibr" rid="B2">2</xref>,<xref ref-type="bibr" rid="B21">21</xref>,<xref ref-type="bibr" rid="B23">23</xref>]:</p><p>1. Compute a covariance matrix <bold>R </bold>= <bold>XY</bold><sup><italic>T</italic></sup>.</p><p>2. Calculate the SVD (Singular Value Decomposition) of <bold>R </bold>= <bold>VSW</bold><sup><italic>T</italic></sup>, where <bold>V </bold>and <bold>W </bold>are the matrices of left and right singular vectors, respectively, and <bold>S </bold>is the positive semidefinite diagonal matrix singular values of <bold>R</bold>.</p><p>3. Compute <italic>&#x003c7; </italic>= sign(det(<bold>R</bold>)) = &#x000b1; 1.</p><p>4. Calculate the rotation matrix <bold>U </bold>as</p><p><disp-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M3" name="1471-2105-10-29-i3" overflow="scroll"><mml:semantics><mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>U</mml:mi></mml:mstyle><mml:mo>=</mml:mo><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>W</mml:mi></mml:mstyle><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mi>&#x003c7;</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:msup><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>V</mml:mi></mml:mstyle><mml:mi>T</mml:mi></mml:msup><mml:mo>.</mml:mo></mml:mrow></mml:semantics></mml:math></disp-formula></p><p>An alternative RMSD fit approach uses a compact representation of rotational transformations called quaternions [<xref ref-type="bibr" rid="B9">9</xref>,<xref ref-type="bibr" rid="B10">10</xref>]. To make the RMSD effectively independent of the number of atoms, Maiorov et al. [<xref ref-type="bibr" rid="B13">13</xref>] have proposed a normalization mean. In addition, Wallin et al. [<xref ref-type="bibr" rid="B24">24</xref>] investigated and compared the properties of multiple distance measurements related to RMSD. More recently, Theobald et al. [<xref ref-type="bibr" rid="B8">8</xref>,<xref ref-type="bibr" rid="B16">16</xref>] applied the principle of maximum likelihood to the superposition problem by assuming a Gaussian distribution of the whole structures in the analysis. Additionally, algorithms based on multidimensional rotations and modified quaternions have been developed for structural superposition [<xref ref-type="bibr" rid="B25">25</xref>]. However, most existing improvements of superposition are based on the standard LS optimization. To overcome the disadvantages of the standard RMSD fit, some improvement algorithms, such as sieve-fit [<xref ref-type="bibr" rid="B19">19</xref>], fit-all [<xref ref-type="bibr" rid="B18">18</xref>], and HingeFind [<xref ref-type="bibr" rid="B20">20</xref>], are presented based on the iterative least-squares superposition by eliminations of atoms that lie far apart in the superposition. However, these algorithms depend on the initial RMSD fit for the entire atom sets of proteins, which may fail on structural superposition of two conformations with large displacements. Damm and Carlson [<xref ref-type="bibr" rid="B2">2</xref>] recently developed a Gaussian-weighted RMSD (wRMSD) fit, which makes use of a weight function for bounding the influence of atoms through an iterative LS fit. In order to overcome the effect of the initial RMSD fit, Damm and Carlson suggested large scaling factors for a global wRMSD fit code and they also recommended the local wRMSD fit on proteins with extreme structural changes. The wRMSD fit can achieve good results. In addition, several authors have reported some techniques for multiple structural superposition [<xref ref-type="bibr" rid="B8">8</xref>,<xref ref-type="bibr" rid="B16">16</xref>,<xref ref-type="bibr" rid="B26">26</xref>-<xref ref-type="bibr" rid="B29">29</xref>], where a simultaneous superposition could be employed to avoid biasing the superposition towards a specific (pivot) structure. We limit the study presented in this paper to pairwise structural superposition in term of fitting atomic coordinates of two conformations of the same protein.</p><p>Unlike structural superposition, structural alignment aims to compare a pair of structures, where the alignment between equivalent residues is not given prior. Therefore, an optimal sequence alignment needs to be identified, which has been shown to be NP-complete [<xref ref-type="bibr" rid="B30">30</xref>]. Many structural alignment methods, such as DALI [<xref ref-type="bibr" rid="B31">31</xref>] and CE [<xref ref-type="bibr" rid="B32">32</xref>], have been proposed to identify the defined best alignment. The general outputs of structural alignment are a superposition of equivalent atomic pairs and a minimal RMSD distance fitted between two structures. Recently, some methods consider the hinge regions for aligning the rigid subparts of the molecules [<xref ref-type="bibr" rid="B14">14</xref>,<xref ref-type="bibr" rid="B33">33</xref>]. Structural alignment is often composed of three steps: finding atom pair correspondence (alignment), superposition, and the RMSD calculation. Many structural alignment programs achieve both the correspondence and the superposition, simultaneously. Several papers [<xref ref-type="bibr" rid="B8">8</xref>,<xref ref-type="bibr" rid="B22">22</xref>] have clearly distinguished the difference between structural superposition and alignment. Although several recent works [<xref ref-type="bibr" rid="B25">25</xref>,<xref ref-type="bibr" rid="B34">34</xref>] are also named "<italic>superposition</italic>", they are actually related to structural alignment. These publications deal with different topics from our work. A review of many available methods for structural alignment is beyond the scope of this paper. The reader may consult Refs. [<xref ref-type="bibr" rid="B14">14</xref>,<xref ref-type="bibr" rid="B22">22</xref>,<xref ref-type="bibr" rid="B27">27</xref>,<xref ref-type="bibr" rid="B32">32</xref>,<xref ref-type="bibr" rid="B33">33</xref>] for detailed expositions.</p><p>The RMSD fit can be regarded as a LS fit [<xref ref-type="bibr" rid="B2">2</xref>,<xref ref-type="bibr" rid="B8">8</xref>], that finds a best rotation to fit a given atomic arrangement to approximately measured coordinates. The fit belonging to a statistical method is considered to be <italic>robust </italic>if it has a large <italic>breakdown </italic>point. A breakdown point might be loosely defined as the smallest percentage of outliers that can cause the estimator to take arbitrarily large aberrant values [<xref ref-type="bibr" rid="B35">35</xref>,<xref ref-type="bibr" rid="B36">36</xref>]. For instance, the breakdown point of the median of a set of values is 50% [<xref ref-type="bibr" rid="B36">36</xref>], whereas LS has a breakdown point of 0%. In this paper, we treat the displacements of two conformations of the same protein as <italic>outlier</italic>, i.e. location errors, during the fit process.</p><p>Several robust statistics methods have been applied to structural superposition of proteins [<xref ref-type="bibr" rid="B2">2</xref>,<xref ref-type="bibr" rid="B8">8</xref>]. For instance, Lesk presented the sieve-fit procedure [<xref ref-type="bibr" rid="B19">19</xref>] by eliminations of atoms that lie far apart in the initial fit. The algorithm is achieved through an iterative LS procedure as follows [<xref ref-type="bibr" rid="B37">37</xref>]. If the calculated RMSD between two point sets is larger than a threshold, the distances between the corresponding atoms in the sets are calculated. The atoms furthest apart are then removed from the original sets and the remaining atoms are superimposed again. This procedure is iterated with one pair of atoms being eliminated in each iteration, until the calculated RMSD is less than the threshold. The Lesk's sieve-fit procedure [<xref ref-type="bibr" rid="B19">19</xref>] is unsuitable for superposition between two conformations with multiple rigid domains. HingeFind, presented by Wriggers et al. [<xref ref-type="bibr" rid="B20">20</xref>,<xref ref-type="bibr" rid="B38">38</xref>], modified the sieve-fit routine so that the new atoms that are within tolerance distance are included in addition to the elimination of far apart atoms. Gerstein et al. [<xref ref-type="bibr" rid="B18">18</xref>] proposed the fit-all algorithm to classify the mechanism of domain rotation as hinge-like or shear-like. MolMovDB [<xref ref-type="bibr" rid="B17">17</xref>] used a modification of sieve-fit by stopping the procedure according to the domain size. These above algorithms can be regarded as the <italic>backward methods </italic>in statistical methods. The strategy of backward methods for fitting two point sets first fits to the entire points and then tries to remove bad points or weaken their effectiveness [<xref ref-type="bibr" rid="B35">35</xref>]. Unfortunately, as well-known in the statistics literature [<xref ref-type="bibr" rid="B35">35</xref>,<xref ref-type="bibr" rid="B39">39</xref>], some errors and outliers can influence the fitted model in the backward methods. The backward algorithms depend on the initial fit for the entire atom sets of proteins, which may fail upon structural superposition of two conformations with large displacements.</p><p>Damm and Carlson [<xref ref-type="bibr" rid="B2">2</xref>] used the wRMSD fit for superimposing two protein conformations in order to overcome the disadvantages of the LS fit. They also recognized that their method may yield poor results when the procedure starts with all the residue pairs for two significantly different structures (such as shifting the relative positions of two domains). Therefore, they presented the local wRMSD fit using an alternative starting procedure in a way similar to the forward regression spirit. The main difference between our work and wRMSD is the fitting optimization equations.</p><p>Recently, Fleishman et al. [<xref ref-type="bibr" rid="B35">35</xref>] introduced a robust moving least squares technique for fitting a piecewise smooth surface from a point set. The main tool that they use is a new robust statistics method for outlier detection: the <italic>forward search </italic>algorithm, which has a significant advantage in detecting outliers over commonly used backward methods. Unlike most existing backward methods, which depend on the initial estimating for the entire point set, the forward search starts from a small set of robustly chosen samples of the data that excludes outliers. Then the forward method moves forward through the data for adding observations to the subset while monitoring certain statistical estimates. Our work presented in this paper is in the same spirit and applies the forward search to structural superposition of flexible proteins. The main difference between our algorithm and the existing superposition methods is to replace "least squares" by "least median of squares" by combining the forward search such that the improved superposition algorithm is more robust for large displacements. Our method can be considered an alternative tool for structural superposition as a complement of other tools like sieve-fit, fit-all [<xref ref-type="bibr" rid="B18">18</xref>-<xref ref-type="bibr" rid="B20">20</xref>], and the wRMSD fit [<xref ref-type="bibr" rid="B2">2</xref>].</p></sec><sec><title>Results</title><p>We have implemented the technique presented in the previous section and tested it on a number of proteins with known conformational changes. The algorithm described above is implemented in C++. In this paper, the execution time is given in seconds on a Pentium IV 1.70 GHz processor with 512M RAM excluding the time of loading proteins. For simplicity, our code and our examples in this article use only two conformations of each protein, but this algorithm could be applied into any program that iteratively superposition ensembles of structures.</p><p>Fig. <xref ref-type="fig" rid="F1">1</xref> shows the procedure of the LMS fit between two conformations based on the forward search algorithm. First, an initial subset (two point pairs in Fig. <xref ref-type="fig" rid="F1">1(a)</xref>) is selected using the LMS algorithm. Next, we iteratively add one pair of points with the smallest residual and refit two conformations to the updated subset using the standard RMSD fit. The subset at 10th iteration is shown in Fig. <xref ref-type="fig" rid="F1">1(b)</xref>. If the error is larger than a predefined threshold, the iteration procedure is terminated. The final subset is shown in Fig. <xref ref-type="fig" rid="F1">1(c)</xref>. The remaining points are regarded as outliers that are not used for computation of the final fit. The superposition results using the LMS and RMSD fit are given in Fig. <xref ref-type="fig" rid="F1">1(d)</xref> and Fig. <xref ref-type="fig" rid="F1">1(e)</xref>, respectively. Arrows denote regions with improved fit.</p><fig position="float" id="F1"><label>Figure 1</label><caption><p><bold>The illustration of the LMS fit between two conformations (RAN): 1byu (light gray) and 1rrp (dark gray)</bold>. First, an initial subset is selected using the LMS algorithm, as shown in (a). Next, we iteratively add one pair of points with the smallest residual and refit two conformations to the updated subset using the standard RMSD fit. The subset at 10th iteration is shown in (b). The final subset using the forward search is shown in (c). The remaining points are regarded as outliers that are not used for computation of the final superposition. The superposition results using the LMS and RMSD fit are given in (d) and (e), respectively. Arrows denote regions with improved fit.</p></caption><graphic xlink:href="1471-2105-10-29-1"/></fig><sec><title>Protein data set</title><p>We have chosen to test our method on protein systems found in the Database of Macromolecular Movements (MolMovDB) [<xref ref-type="bibr" rid="B40">40</xref>]. MolMovDB presents a diverse set of proteins that display large conformational changes in protein and other macromolecules, which can be found at: <ext-link ext-link-type="uri" xlink:href="http://www.molmovdb.org/"/>. The corresponding experimental structures are downloaded from the Protein Data Bank (PDB) [<xref ref-type="bibr" rid="B41">41</xref>], and the first chain of each structure is used as the reference structure for superposition. PyMOL is used for various visualization purposes and the creation of figures for this article [<xref ref-type="bibr" rid="B42">42</xref>].</p><p>Our code currently implements our method using <italic>C</italic><sub><italic>&#x003b1; </italic></sub>coordinates of two protein conformations (it is straightforward to use all backbone atoms). Our preprocessing removes any inappropriate residues including duplicate residues, disordered residues, or heterogroups from the respective PDB file. We first apply the LMS fit to several protein systems in MolMovDB. Table <xref ref-type="table" rid="T1">1</xref> lists the names of test systems and gives the superposition results for each protein system in the final LMS fit, where "Protein system" is the name of the test system, "PDB1" and "PDB2" are PDB codes of two conformations fitted, "RMSD" is the standard RMSD distance for the entire atom sets using the RMSD fit, "#Res" is the number of atom pairs after removing the inappropriate residues, "#Subset" is the number of atom pairs in the final subset, "Core%" is the proportion of the core region (i.e. the final subset) that belongs to the original point set (see Eq. (4)), and "Time(s)" is the time of computing the LMS fit. The proteins are chosen based on their interest to the community, variation in size, and range of conformational changes. When the structures between two conformations are very similar (e.g. RAN and ER<italic>&#x003b1;</italic>), there is usually a high "Core%". In contrast, the lower the similarity, the smaller the value of "Core%" (e.g. Calmodulin and Myosin). The presented algorithm is also fast. For instance, it performs a structural superposition for a pair of conformations with 700 amino acids in about half a second.</p><table-wrap position="float" id="T1"><label>Table 1</label><caption><p>Superposition results of protein systems with conformational changes using the LMS fit</p></caption><table frame="hsides" rules="groups"><thead><tr><td align="left">Protein system</td><td align="left">PDB1</td><td align="left">PDB2</td><td align="center">RMSD</td><td align="center">#Res<sup>1</sup></td><td align="center">#Subset</td><td align="center">Core%<sup>2</sup></td><td align="center">Time(s)</td></tr></thead><tbody><tr><td align="left">ER<italic>&#x003b1;</italic></td><td align="left"><ext-link ext-link-type="pdb" xlink:href="3erd">3erd</ext-link></td><td align="left"><ext-link ext-link-type="pdb" xlink:href="3ert">3ert</ext-link></td><td align="center">4.9</td><td align="center">244</td><td align="center">203</td><td align="center">83.2%</td><td align="center">0.28</td></tr><tr><td align="left">RAN</td><td align="left"><ext-link ext-link-type="pdb" xlink:href="1byu">1byu</ext-link></td><td align="left"><ext-link ext-link-type="pdb" xlink:href="1rrp">1rrp</ext-link></td><td align="center">14.4</td><td align="center">200</td><td align="center">141</td><td align="center">70.5%</td><td align="center">0.19</td></tr><tr><td align="left">Myosin</td><td align="left"><ext-link ext-link-type="pdb" xlink:href="1b7t">1b7t</ext-link></td><td align="left"><ext-link ext-link-type="pdb" xlink:href="1dfk">1dfk</ext-link></td><td align="center">13.0</td><td align="center">720</td><td align="center">403</td><td align="center">56.0%</td><td align="center">0.58</td></tr><tr><td align="left">Calmodulin</td><td align="left"><ext-link ext-link-type="pdb" xlink:href="1cll">1cll</ext-link></td><td align="left"><ext-link ext-link-type="pdb" xlink:href="1ctr">1ctr</ext-link></td><td align="center">14.7</td><td align="center">138</td><td align="center">72</td><td align="center">52.2%</td><td align="center">0.09</td></tr><tr><td align="left">Topo II</td><td align="left"><ext-link ext-link-type="pdb" xlink:href="1bgw">1bgw</ext-link></td><td align="left"><ext-link ext-link-type="pdb" xlink:href="1bjt">1bjt</ext-link></td><td align="center">18.4</td><td align="center">665</td><td align="center">389</td><td align="center">58.5%</td><td align="center">0.55</td></tr><tr><td align="left">Pneumolysin</td><td align="left"><ext-link ext-link-type="pdb" xlink:href="2bk1">2bk1</ext-link></td><td align="left"><ext-link ext-link-type="pdb" xlink:href="2bk2">2bk2</ext-link></td><td align="center">21.8</td><td align="center">435</td><td align="center">139</td><td align="center">32.0%</td><td align="center">0.39</td></tr></tbody></table><table-wrap-foot><p><sup>1 </sup>"#Res" is the number of atom pairs used for superposition by removing any inappropriate residues.</p><p><sup>2 </sup>"Core%" is the proportion of the core region that belongs to the original point set.</p></table-wrap-foot></table-wrap><p>The superposition procedure first requires one to create a list of corresponding atom pairs; and then performs a LMS fit to bring the two proteins into proximity. Note that the LMS fit is not a tool for structure-based sequence alignment, which is a separate bioinformatics challenge [<xref ref-type="bibr" rid="B8">8</xref>,<xref ref-type="bibr" rid="B43">43</xref>]. Thus, like other structural superposition methods [<xref ref-type="bibr" rid="B2">2</xref>,<xref ref-type="bibr" rid="B8">8</xref>], the LMS fit requires a prior one-to-one mapping among the atoms/residues in the structures under consideration. Our method can be applied to align two homologous structures with different residues by incorporating some initial sequence or structural comparison to create the corresponding atom pairs.</p></sec><sec><title>Parameters</title><p>The LMS fit algorithm presented in this paper involves two parameters: the maximal residual <italic>r</italic><sub>max </sub>(default is 2&#x000c5;) and the minimal iteration number MIN_ITERS (default is [<italic>N</italic>/2.0]). Here, MIN_ITERS is usually chosen as a predefined integer to ensure that the number of atoms on core regions is more than 50% of entire atoms. In this section, we start by investigating the effect to the maximal residual <italic>r</italic><sub>max</sub>. The threshold <italic>r</italic><sub>max </sub>controls the final subsets fitted. In order to investigate only the effect of <italic>r</italic><sub>max</sub>, we first ignore the another termination condition that the iteration number should be larger than the minimal iteration number MIN_ITERS.</p><sec><title>The maximal residual</title><p>Fig. <xref ref-type="fig" rid="F2">2</xref> shows the value of Core% with respect to the various <italic>r</italic><sub>max </sub>for four protein systems: ER<italic>&#x003b1;</italic>, RAN, Myosin and Calmodulin, which are referred to in Table <xref ref-type="table" rid="T1">1</xref>. We vary the threshold of the maximal residual, using <italic>r</italic><sub>max </sub>from 0 to 14&#x000c5;, to determine its effect on the LMS fit. The value of Core% increases with <italic>r</italic><sub>max </sub>until to 100% reached for the entire atom pairs. This reason is that the LMS fit adds the atom pair with the minimal residual into the current subset at each iteration until all atom pairs are exhausted. When the structures are very similar, a small <italic>r</italic><sub>max </sub>can obtain a "tighter fit" of the rigid core with a high value of Core%. For instance, <italic>r</italic><sub>max </sub>= 1.0&#x000c5; can get a value of Core% close to 80% for the ER<italic>&#x003b1; </italic>structure. In contrast, when the structures are dissimilar on large regions, a large <italic>r</italic><sub>max </sub>is required. Note that <italic>r</italic><sub>max </sub>more than 4.0&#x000c5; can only get about Core% = 50% for the Calmodulin structure. Therefore, we found that it is not sufficient to superimpose all protein systems with high and low similarity if we only use a fixed <italic>r</italic><sub>max</sub>. To overcome this problem, we suggest that the maximal residual <italic>r</italic><sub>max </sub>and the minimal iteration number MIN_ITERS are combined for controlling the termination conditions. For protein systems with high similarity, <italic>r</italic><sub>max </sub>= 2.0&#x000c5; usually is enough for obtain an appropriate subset. If when <italic>r</italic><sub>max </sub>= 2.0&#x000c5; is not sufficient for protein systems with low similarity, MIN_ITERS can assure the number of the fitted subset is more than 50% of entire atoms. We found that the combination of <italic>r</italic><sub>max </sub>and MIN_ITERS with defaults can lead to fast convergence and little computation time for most protein systems in MolMovDB. In all results shown in this paper, we use <italic>r</italic><sub>max </sub>= 2&#x000c5; and MIN_ITERS = [<italic>N</italic>/2.0] for obtaining both small errors and little computation time.</p><fig position="float" id="F2"><label>Figure 2</label><caption><p><bold>The behavior of the core region Core% with different maximal residuals <italic>r</italic><sub>max </sub>for four protein systems, where the horizontal line indicates where Core% = 0.5 is reached</bold>.</p></caption><graphic xlink:href="1471-2105-10-29-2"/></fig></sec></sec><sec><title>Comparison of results</title><p>In this section, we first compare the visualization results of structural superposition for some conformations. Then we present a strategy, called <italic>residual histogram</italic>, for quantifying the superpositions.</p><sec><title>Visualization comparison of superposition</title><p>In this section, we compare the performance of our algorithm with three superposition techniques: the RMSD fit, sieve-fit, and the wRMSD fit [<xref ref-type="bibr" rid="B2">2</xref>]. The sieve-fit source code can be found on the Gerstein Lab website <ext-link ext-link-type="uri" xlink:href="http://faqs.gersteinlab.org/search?q=sieve"/>, where we use the default parameters (the maximal iteration number is 500 and the distance threshold is 0.5). The wRMSD source code is available on the Carlson Lab website <ext-link ext-link-type="uri" xlink:href="http://sitemaker.umich.edu/carlsonlab/resources.html"/>. The Gaussian weight of wRMSD is computed by <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M4" name="1471-2105-10-29-i4" overflow="scroll"><mml:semantics><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo>/</mml:mo><mml:mi>c</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:semantics></mml:math></inline-formula>, where <italic>c </italic>is a scaling factor and <italic>d</italic><sub><italic>n </italic></sub>is the distance between atom <italic>n </italic>in each protein conformation. In the old version of wRMSD fit, <italic>c </italic>is set to 2&#x000c5; for similar structures; <italic>c </italic>is set to 5&#x000c5; for non-similar structures. In structures with radical changes, the scaling factor may be as high as the initial RMSD between the structures. There are two programs (the global and local wRMSD fit) available. The local wRMSD is the recommended algorithm on proteins with extreme structural changes. Recently, Damm and Carlson updated the global wRMSD code that set the scaling factor to the standard RMSD value. The wRMSD fit can produce good structural superposition of two conformations with small and large displacements. The LMS and wRMSD fit achieves the similar results.</p><p><bold>Example 1</bold>. The ER<italic>&#x003b1; </italic>structures (3erd and 3ert) are tested using the RMSD, LMS and wRMSD fit, where there are some small structural changes between 3erd and 3ert. Fig. <xref ref-type="fig" rid="F3">3</xref> shows the results of superposition for ER<italic>&#x003b1; </italic>using three methods. In the final RMSD fit (Fig. <xref ref-type="fig" rid="F3">3(a)</xref>), only 39 of 244 atom pairs common to both structures are within 1&#x000c5;. Contrastively, the final LMS fit (Fig. <xref ref-type="fig" rid="F3">3(b)</xref>) has 188 atom pairs within 1&#x000c5;, and the RMSD distance between two core regions (203 atom pairs) is 0.49&#x000c5;. In addition, the final wRMSD fit (Fig. <xref ref-type="fig" rid="F3">3(c)</xref>) has also 188 atom pairs within 1&#x000c5;. In Figs. <xref ref-type="fig" rid="F3">3(b)</xref> and <xref ref-type="fig" rid="F3">3(c)</xref>, we observe that the fit results of LMS and wRMSD are very similar. When the change between two conformations is slight, the result of superposition using the LMS fit is approximately equal to one using the wRMSD fit [<xref ref-type="bibr" rid="B2">2</xref>]. Both LMS and wRMSD are able to highlight the similarity of the rigid core regions better than RMSD.</p><fig position="float" id="F3"><label>Figure 3</label><caption><p><bold>Superposition comparison for the ER<italic>&#x003b1; </italic>structures: 3erd (light gray) and 3ert (dark gray)</bold>. (a) The RMSD superposition. (b) The LMS superposition, where the maximal residual <italic>r</italic><sub>max </sub>of 2&#x000c5; is used in our method. (c) The wRMSD superposition. For small displacements, our method can get the almost consistent result with wRMSD.</p></caption><graphic xlink:href="1471-2105-10-29-3"/></fig><p><bold>Example 2</bold>. The Topo II structures (1bgw and 1bjt) are tested using four methods, where there are some large structural changes between 1bgw and 1bjt. Fig. <xref ref-type="fig" rid="F4">4</xref> shows the results of superposition for Topo II. Different crystal forms exhibit significant changes in overall architecture of Topo II, including an extremely large (170 degrees) domain rotation [<xref ref-type="bibr" rid="B44">44</xref>]. The changes between two conformations are too large such that the standard RMSD fit misses the structural similarity, as shown in Fig. <xref ref-type="fig" rid="F4">4(a)</xref>. The final superpositions using the standard RMSD and the sieve-fit have 26 and 18 atom pairs within 2&#x000c5;, respectively. The final LMS fit has 381 atom pairs within 2&#x000c5;, and the RMSD distance between two core regions (389 atom pairs) is 0.85&#x000c5;. Arrows in Fig. <xref ref-type="fig" rid="F4">4(d)</xref> highlight the improvement in fitting the rigid core of Topo II. The LMS fit can catch the structural similarity and our result is similar to one using the wRMSD fit with the default <italic>c</italic>, as shown Fig. <xref ref-type="fig" rid="F4">4(c)</xref>.</p><fig position="float" id="F4"><label>Figure 4</label><caption><p><bold>Superposition comparison for the Topo II structures: 1bgw (gray) and 1bjt (red)</bold>. (a) The RMSD superposition. (b) The sieve-fit superposition. (c) The global wRMSD superposition (<italic>c </italic>= 18&#x000c5;). (d) The LMS superposition, where the maximal residual <italic>r</italic><sub>max </sub>of 2&#x000c5; is used in our method. For large displacements, both RMSD and sieve-fit can not catch the similarity of two conformational structures. In contrast, the LMS fit can catch the similarity, where the LMS result is similar to one using wRMSD with the default scaling factor. Arrows denote the improved regions with the LMS fit.</p></caption><graphic xlink:href="1471-2105-10-29-4"/></fig><p><bold>Example 3</bold>. Figs. <xref ref-type="fig" rid="F1">1</xref>, <xref ref-type="fig" rid="F5">5</xref> and <xref ref-type="fig" rid="F6">6</xref> demonstrate the superposition results for three protein systems: RAN, Myosin and Calmodulin, which have large conformational displacements. In these figures, arrows highlight regions with improved fit using our method. The LMS fit takes about 0.19s, 0.58s and 0.09s, respectively. In the first protein system, the RAN structures (1byu and 1rrp) have large conformational changes, and the movement occurs in two switch regions. For the RAN structure, the final RMSD fit only captures 2 of the 200 atom pairs within 1&#x000c5;; the final LMS fit keeps 116 atom pairs within 1&#x000c5;. In the second protein system, the Myosin structures (1b7t and 1dfk) have much larger conformational changes, where the largest movements produced are more than 50&#x000c5;. For the Myosin structures, the LMS fit contains 402 of the 720 atom pairs within 2&#x000c5;, but there are only 30 atom pairs within this range when using the RMSD fit. In the third protein system, Calmodulin is a ubiquitous, calcium-binding protein that can bind to and regulate a multitude of different protein targets. We superimpose two conformational structures (1cll and 1ctr) of Calmodulin, where this hinge motion involves a long helix splitting into two helices and the angle between the axes of the two helical segments is about 100 degrees. Furthermore, as there is an additional twist around the helix axes, the total rotation of one domain relative to the other is upwards of 150 degrees. The final RMSD fit can not detect any atom pairs within 2&#x000c5;; contrastively, the final LMS fit has 69 of the 138 atom pairs within 2&#x000c5;.</p><fig position="float" id="F5"><label>Figure 5</label><caption><p><bold>Superposition comparison for the Myosin structures: 1b7t (light gray) and 1dfk (dark gray)</bold>. (a) The RMSD superposition. (b) The LMS superposition. (c) and (d) show the secondary structures corresponding to (a) and (b). (e) and (f) are the magnified views of (c) and (d), respectively. Arrows denote regions with improved fit.</p></caption><graphic xlink:href="1471-2105-10-29-5"/></fig><fig position="float" id="F6"><label>Figure 6</label><caption><p><bold>Superposition comparison for the Calmodulin structures: 1cll (light gray) and 1ctr (dark gray)</bold>. (a) The RMSD superposition. (b) The LMS superposition. Arrows denote regions with improved fit.</p></caption><graphic xlink:href="1471-2105-10-29-6"/></fig><p><bold>Example 4</bold>. Finally, we compare a conventional LS superposition and the LMS superposition for 30 NMR models of the second Kunitz domain of Tissue Factor Pathway Inhibitor (PDB ID: <ext-link ext-link-type="pdb" xlink:href="1adz">1adz</ext-link>), as shown in Fig. <xref ref-type="fig" rid="F7">7</xref>. Here all conformations are superimposed with a reference structure (the first model) using the RMSD and LMS fit. In Fig. <xref ref-type="fig" rid="F7">7(a)</xref>, the RMSD superposition provides misleading and inaccurate results; the LMS superposition in Fig. <xref ref-type="fig" rid="F7">7(b)</xref> can catch the similarity of multiple conformational structures, contrastively. This example in Fig. <xref ref-type="fig" rid="F7">7(a)</xref> is also used for demonstrating advantages of maximum likelihood superposition when assuming a Gaussian distribution of the whole structures in the analysis by Theobald et al. [<xref ref-type="bibr" rid="B8">8</xref>,<xref ref-type="bibr" rid="B16">16</xref>]. Our LMS superposition obtains the almost consistent result with maximum likelihood superposition for multiple structures.</p><fig position="float" id="F7"><label>Figure 7</label><caption><p><bold>Superposition comparison for 30 NMR models of the second Kunitz domain of Tissue Factor Pathway Inhibitor </bold>(PDB ID: <ext-link ext-link-type="pdb" xlink:href="1adz">1adz</ext-link>). Here all conformations are superimposed with a reference structure (the first model) using the RMSD and LMS fit. (a) The RMSD superposition. (b) The LMS superposition.</p></caption><graphic xlink:href="1471-2105-10-29-7"/></fig></sec><sec><title>Residual histogram</title><p>In this section, we use a residual histogram for demonstrating the residual distribution of atom pairs for the final LMS and RMSD fit. Fig. <xref ref-type="fig" rid="F8">8</xref> shows the residual histograms of five protein systems (ER<italic>&#x003b1;</italic>, RAN, Myosin, Calmodulin and Topo II) described above for the final RMSD, sieve-fit, the global wRMSD, and LMS superposition. Here a residual histogram is constructed by segmenting the length 0 &#x02013; 10&#x000c5; into equal sized ranges (1&#x000c5;) and counting the number of atom pairs whose residuals are within each range. The horizontal axis of the histogram denotes the ranges segmented and the vertical axis is the number of counts. For example, in ER<italic>&#x003b1; </italic>Histogram in Fig. <xref ref-type="fig" rid="F8">8</xref>, the first "LMS fit" bar on left denotes that there are 188 atom pairs whose residuals are within the range of 0 &#x02013; 1&#x000c5; for the ER<italic>&#x003b1; </italic>structures in the final LMS fit; and the second "LMS fit" bar on left means there are 15 atom pairs whose residuals are within the range of 1 &#x02013; 2&#x000c5;. In contrast, the first "RMSD fit" bar on left denotes that there are 39 atom pairs within the range of 0 &#x02013; 1&#x000c5; in the final RMSD fit.</p><fig position="float" id="F8"><label>Figure 8</label><caption><p><bold>Residual histograms of five protein systems (ER<italic>&#x003b1;</italic>, RAN, Myosin, Calmodulin, and Topo II) in the final superpositions</bold>. Here a histogram is constructed by segmenting the distance from 0&#x000c5; to 10&#x000c5; into 10 equal sized ranges (each range is 1&#x000c5;) and counting the number of atom pairs whose distance is within each ranges. The horizontal axis of the histogram is labeled with the range (&#x000c5;) of residual of atom pairs, and the vertical axis of the histogram is the number of atom pairs whose residuals are within the corresponding range. Note that the number of counts for the LMS and wRMSD superpositions within the range of 0 &#x02013; 1&#x000c5; is far larger than one for the RMSD and sieve-fit superpositions.</p></caption><graphic xlink:href="1471-2105-10-29-8"/></fig><p>The LMS fit tends to fit the rigid core of two conformations and ignore the effect of the flexible regions. Therefore, the atom pairs with little movement between two conformations will have a small residual (usually within 0 &#x02013; 1&#x000c5;) in the LMS fit. In contrast, these atom pairs are effected by the flexible regions in the RMSD fit. Although the RMSD fit minimizes the sum of distance of entire atom pairs, it can not guarantee the small residuals to the majority of atom pairs. In fact, the RMSD fit is only the minimization in the sense of average. In the final RMSD fit, each atom pair shares both little movement on the core regions and large movement on the flexible between two conformations. In the examples in Fig. <xref ref-type="fig" rid="F8">8</xref>, we observe that the number of counts for the LMS fit within the range of 0 &#x02013; 1&#x000c5; is far larger than one for the RMSD fit. In special, Calmodulin Histogram in Fig. <xref ref-type="fig" rid="F8">8</xref> shows that no atom pair is within two ranges of 0 &#x02013; 1&#x000c5; and 1 &#x02013; 2&#x000c5; in the final RMSD fit for two conformations of Calmodulin, whereas 69 of the 138 atom pairs are within the two ranges in the final LMS fit. In contrast, the wRMSD fit achieves similar results with the LMS fit (especially within 0 &#x02013; 2&#x000c5;), while there are few atom pairs within the range of 0 &#x02013; 2&#x000c5; in the final sieve-fit.</p><p>Finally, to obtain a broader overview we apply the LMS fit to a collection of known protein systems with conformational changes in MolMovDB (as of October 2007). The conformational database is classified by the size of the mobile regions as three groups: 1) motions of fragments smaller than domains, 2) domain motions, and 3) larger movements than domain movements involving the motion of subunits. We simply call the three groups: SM (small movement), MM (medium movement) and LM (large movement). There are 56, 123 and 22 protein systems that are available in the three groups, respectively. For these examples shown in Table <xref ref-type="table" rid="T1">1</xref>, ER<italic>&#x003b1; </italic>is selected from the SM group, Topo II is selected from the LM group, and the other protein systems are selected from the MM group except Pneumolysin. Especially, the motions of RAN and Calmodulin is predominantly hinge type and Topo II has complex protein motion. All protein systems have at least one pair of conformations, and animations of the conformational transition are available for most protein systems. To avoid bias from large families with multiple conformations, we retained only one pair of conformations per protein system, leading to 201 pairs of conformational structures. The same parameters (<italic>r</italic><sub>max </sub>= 2&#x000c5; and MIN_ITERS = [<italic>N</italic>/2.0]) are used in all the calculations. Fig. <xref ref-type="fig" rid="F9">9</xref> shows the average residual histograms for protein systems in SM, MM, LM, and three groups in the final superpositions using the RMSD and LMS fit. The final LMS fit has the average of 163, 177, and 234 atom pairs within 0 &#x02013; 1&#x000c5; for the SM group, the MM group, and the LM group, respectively; whereas the final RMSD fit only has the average of 141, 111 and 177 atom pairs within the this range. The average of 192 atom pairs for three groups is within 0 &#x02013; 1&#x000c5; in the final LMS fit; the average of 143 atom pairs is within this range in the final RMSD fit. In the final LMS fit for three groups, the average value of Core% is 79.7%, and the average RMSD distance in the core regions is 1.1&#x000c5;.</p><fig position="float" id="F9"><label>Figure 9</label><caption><p><bold>The average residual histograms for a collection of known protein systems with conformational changes in MolMovDB</bold>.</p></caption><graphic xlink:href="1471-2105-10-29-9"/></fig></sec></sec><sec><title>Multiple level superposition</title><p>It was previously shown that there is generally not a unique solution for the structural fit between two prteins [<xref ref-type="bibr" rid="B2">2</xref>,<xref ref-type="bibr" rid="B15">15</xref>]. If two different conformations each consists of multiple rigid domains, our LMS fit algorithm will get the subset in the biggest rigid domain for computing the superposition. An extension version of our algorithm can also be extended to multiple level superposition between two protein conformations with several rigid domains. Given two conformations <bold>X </bold>and <bold>Y </bold>with multiple several rigid domains, we present an iterative algorithm for determining multiple level superposition of <bold>X </bold>and <bold>Y </bold>as follows.</p><p>1. First, we compute the core regions <italic>Q</italic><sub>x </sub>and <italic>Q</italic><sub>y </sub>of two conformations <bold>X </bold>and <bold>Y </bold>using the LMS fit algorithm and identify the rest of the data as outliers.</p><p>2. Next, we remove the core regions <italic>Q</italic><sub>x </sub>and <italic>Q</italic><sub>y </sub>from <bold>X </bold>and <bold>Y</bold>, and update two conformations as <bold>X </bold>= <bold>X </bold>- <italic>Q</italic><sub>x </sub>and <bold>Y </bold>= <bold>X </bold>- <italic>Q</italic><sub>y</sub>, respectively. Then we recompute the LMS fit between the updated <bold>X </bold>and <bold>Y</bold>.</p><p>3. The above Steps 1 and 2 are repeated until the superposition level defined by users is reached, where the superposition level denotes which level rigid domain is finally superimposed. The final centers and rotation matrix are computed by the final level rigid domain.</p><p>Several examples are shown in Figs. <xref ref-type="fig" rid="F10">10</xref>, <xref ref-type="fig" rid="F11">11</xref>, <xref ref-type="fig" rid="F12">12</xref> for demonstrating the multiple level superposition algorithm. Fig. <xref ref-type="fig" rid="F10">10</xref> illustrates two level superposition for the Calmodulin structures: 1cll (light gray) and 1ctr (dark gray). The first level superposition has one common big rigid domain with Core% = 51.4% in Fig. <xref ref-type="fig" rid="F10">10(a)</xref>, and the second level superposition has one common small rigid domain with Core% = 46.4% in Fig. <xref ref-type="fig" rid="F10">10(b)</xref>. Fig. <xref ref-type="fig" rid="F11">11</xref> gives four level superposition for Topo II: 1bgw (red) and 1bjt (green). Fig. <xref ref-type="fig" rid="F12">12</xref> gives three level superposition for GroEL: 1aon (red) and 1kp8 (green). Note that our method can capture several different rigid domains with multiple levels, where the superimposed rigid domains are highlighted in the selected regions with the solid line boundary.</p><fig position="float" id="F10"><label>Figure 10</label><caption><p><bold>Multiple level superposition for the Calmodulin structures: 1cll (light gray) and 1ctr (dark gray)</bold>. (a) The first level superposition (Core% = 51.4%). (b) The second level superposition (Core% = 46.4%). Note that our method can capture two rigid domains in two level superposition, respectively.</p></caption><graphic xlink:href="1471-2105-10-29-10"/></fig><fig position="float" id="F11"><label>Figure 11</label><caption><p><bold>Multiple level superposition for Topo II: 1bgw (red) and 1bjt (green)</bold>. (a) Level 1 (Core% = 56.4%). (b) Level 2 (Core% = 22.1%). (c) Level 3 (Core% = 11.7%). (d) Level 4 (Core% = 5.1%). Note that our method can capture different rigid domains in multiple level superposition, where the superimposed rigid domains are highlighted in the selected regions with the solid line boundary.</p></caption><graphic xlink:href="1471-2105-10-29-11"/></fig><fig position="float" id="F12"><label>Figure 12</label><caption><p><bold>Multiple level superposition for GroEL: 1aon (red) and 1kp8 (green)</bold>. (a) Level 1 (Core% = 47.5%). (b) Level 2 (Core% = 30.5%). (c) Level 3 (Core% = 11.6%). Note that our method can capture three different rigid domains with three levels, where the superimposed rigid domains are highlighted in the selected regions with the solid line boundary.</p></caption><graphic xlink:href="1471-2105-10-29-12"/></fig><p>The multiple level superposition algorithm is actually the extension of the LMS fit. This algorithm can be performed through a parameter 'level' without specifying and choosing any residues. The local wRMSD fit can finish a similar function as multiple level superposition by sampling some subsets of the protein for changing the initial RMSD fit in advance [<xref ref-type="bibr" rid="B2">2</xref>].</p></sec></sec><sec><title>Discussion</title><p>In this section, we will discuss median measurement changing and comparison of similarity scores.</p><sec><title>Changing median measurement</title><p>If the flexible regions between two conformations are too large such that the rigid core region contains less 50% atoms of the entire atom sets of protein, we do not see good superposition using the LMS fit based on the minimal median assumption. Fig. <xref ref-type="fig" rid="F13">13</xref> demonstrates this issue using the Pneumolysin structures (2bk1 and 2bk2 from CryoEM) [<xref ref-type="bibr" rid="B45">45</xref>]. In Fig. <xref ref-type="fig" rid="F13">13(a)</xref>, when the LMS fit based on the minimal median measurement is applied for two conformations, we do not see the good superposition. The main reason is that the rigid core region only contains about 30% atoms of the entire atom sets of protein. The special case is not usual, and there are few protein systems like Pneumolysin in MolMovDB.</p><fig position="float" id="F13"><label>Figure 13</label><caption><p><bold>If the number of atom pairs on the flexible regions is larger than one on the core region, the LMS fit based on the minimal median measurement can not get good superposition</bold>. (a) The LMS fit for the Pneumolysin system: 2bk1 (light gray) and 2bk2 (dark gray), using the minimal median measurement. (b) The improved superposition through changing the parameter of the LMS fit, i.e. replacing the median (50%) by the first quartile (25%). The superposition differences are highlighted in the ellipse regions with the dashed boundary.</p></caption><graphic xlink:href="1471-2105-10-29-13"/></fig><p>For this case that the flexible regions contain more atoms than the core region, we can simply change the "median" parameter in the LMS fit for improving the superposition. At the phase of initial subset selection, the original LMS fit uses the random sampling algorithm for selecting <italic>k </italic>initial point pairs with a small value of <italic>k</italic>. At each iteration, 1) <italic>k </italic>point pairs are first selected between two point sets at random; 2) then the median of the residuals of the remaining point pairs is computed; 3) finally, <italic>k </italic>point pairs with the minimal median are selected as the initial subset for the forward search. Instead of the minimal median measurement, we may use the <italic>m</italic>th smallest value from the residuals of the remaining point pairs for improving the initial point pairs. In Fig. <xref ref-type="fig" rid="F13">13(b)</xref>, we use the first quartile (25%) instead of the median (50%) for cutting largest 75% outliers. The first quartile actually assumes that the flexible regions contain up to 75% atoms of the entire atom sets of protein. The superposition difference is highlighted in the ellipse regions with the dashed boundary.</p></sec><sec><title>Comparison of similarity scores</title><p>One application of comparing two conformations of the same protein sequence is to evaluate a predicted protein structure against its experimentally determined target. We examine one system Target 179 (PDB ID: <ext-link ext-link-type="pdb" xlink:href="1IY9">1IY9</ext-link>) in the CASP5 competition [<xref ref-type="bibr" rid="B46">46</xref>] for comparing our similarity score with three ones (GDT_TS, TM-score and wRMSD's scores). The GDT_TS values can be obtained from the CASP5 website <ext-link ext-link-type="uri" xlink:href="http://predictioncenter.org/casp5/Casp5.html"/>, and the TM-score [<xref ref-type="bibr" rid="B47">47</xref>] can be computed from TM-score online <ext-link ext-link-type="uri" xlink:href="http://zhang.bioinformatics.ku.edu/TM-score/"/>. The specific target has been discussed in Damm and Carlson's work [<xref ref-type="bibr" rid="B2">2</xref>], and the wRMSD's scores (%wSUM and %wSUM_ALL) discussed here are directly cited from their paper. Similar to their strategy, we provide a Core% score based on the fit of the coordinates in the prediction (<italic>N </italic>in Eq. (4) equals the number of atoms in the prediction) and a Core_All%, which corrects for any omitted coordinates (<italic>N </italic>in Eq. (4) equals the number of atoms in the target). If a prediction provides all <italic>C</italic><sub><italic>&#x003b1; </italic></sub>coordinates, Core% and Core_All% are equal. GDT_TS (Global Distance Test_Total Score) evaluates two structures based on the RMSD fit of a subset of atoms in an iterative weighted evaluation, and TM-score is an extension of GDT. %wSUM and %wSUM_ALL scores are the average of weight values in the final wRMSD superposition.</p><p>Damm and Carlson randomly selected some good, exceptional and poor submissions from Target 179's groups. We use the same data. Since some poor submissions are included in the groups, we choose the first quartile (25%) as the measurement parameter instead of the median (50%). Table <xref ref-type="table" rid="T2">2</xref> shows that the rankings provided by Core_All%. Core_All% scores match %wSUM_ALL and GDT_TS with the exception of groups 32 and 270. Damm and Carlson have analyzed that the cause for 32's poor GDT_TS rank may be a simple typographical or data processing error. In contrast, TM-score gives a top ranking for 32 group liking Core_All% (the top one in %wSUM_ALL and second one in %wSUM). Group 270 has also the different ranking among %wSUM_ALL and TM-score. By superposition, we found that group 270 is a good predictions and it looks very similar to the target. The small ranking difference between three methods may be reason of the weight values. The LMS scores (Core% and Core_All%) can be considered an alternative and complementary similarity score for assessing the quality of protein conformations.</p><table-wrap position="float" id="T2"><label>Table 2</label><caption><p>Target 179 (PDB ID: <ext-link ext-link-type="pdb" xlink:href="1IY9">1IY9</ext-link>) LMS rankings compared to %wSUM, GDT_TS and TM-score values</p></caption><table frame="hsides" rules="groups"><thead><tr><td align="left">Group</td><td align="center">Core_All%</td><td align="center">Core%</td><td align="center">%wSUM_ALL</td><td align="center">%wSUM</td><td align="center">GDT_TS</td><td align="center">TM-score</td></tr></thead><tbody><tr><td align="left">032</td><td align="center">88.7</td><td align="center">89.7</td><td align="center">76.5</td><td align="center">77.0</td><td align="center">28.65</td><td align="center">93.1</td></tr><tr><td align="left">427</td><td align="center">88.3</td><td align="center">88.3</td><td align="center">76.6</td><td align="center">76.6</td><td align="center">86.95</td><td align="center">92.6</td></tr><tr><td align="left">270</td><td align="center">88.2</td><td align="center">88.2</td><td align="center">74.6</td><td align="center">74.6</td><td align="center">84.40</td><td align="center">91.9</td></tr><tr><td align="left">246</td><td align="center">88.0</td><td align="center">88.0</td><td align="center">76.3</td><td align="center">76.3</td><td align="center">86.68</td><td align="center">92.5</td></tr><tr><td align="left">471</td><td align="center">86.1</td><td align="center">86.1</td><td align="center">75.8</td><td align="center">75.8</td><td align="center">85.77</td><td align="center">91.8</td></tr><tr><td align="left">016</td><td align="center">82.5</td><td align="center">62.5</td><td align="center">64.0</td><td align="center">64.0</td><td align="center">77.47</td><td align="center">90.0</td></tr><tr><td align="left">529</td><td align="center">72.6</td><td align="center">85.4</td><td align="center">63.8</td><td align="center">75.1</td><td align="center">72.08</td><td align="center">90.3</td></tr><tr><td align="left">291</td><td align="center">27.4</td><td align="center">42.6</td><td align="center">24.0</td><td align="center">37.4</td><td align="center">34.12</td><td align="center">63.8</td></tr><tr><td align="left">400</td><td align="center">20.4</td><td align="center">35.2</td><td align="center">18.9</td><td align="center">32.6</td><td align="center">29.11</td><td align="center">60.2</td></tr></tbody></table></table-wrap></sec></sec><sec><title>Conclusion</title><p>We have presented a novel technique of structural superposition for flexible proteins. The method is based on least median of squares (LMS) for guiding the classical RMSD fit. The forward search technique is used for approximating the LMS optimization. Using the method, we can automatically identify portions of proteins as the rigid core regions and flexible regions. The method does not require a prior knowledge of the flexible regions. Our fit tool has produced successful superposition when applied to proteins in MolMovDB for which two conformations are known. We also show that the LMS fit can be extended to multiple level superposition between two conformations with several rigid domains. This method can easily be incorporated into many RMSD overlay calculations. Note that LMS can not be a substitute for LS in some cases, such as the applications of LS to molecular dynamics (MD).</p></sec><sec sec-type="methods"><title>Methods</title><sec><title>Least median of squares (LMS) fit</title><p>To overcome the lack of robustness using least squares fit in Eq. (1), some robust methods might be used for improving the RMSD fit, such as making use of some weight functions for bounding the influence of outliers [<xref ref-type="bibr" rid="B2">2</xref>]. Most existing robust methods are <italic>least sum of squares </italic>(also named <italic>least squares </italic>or LS), which can not raise a high breakdown point [<xref ref-type="bibr" rid="B36">36</xref>].</p><p>In our case, we assume that two different conformations of the same protein consists of two parts: the rigid <italic>core </italic>regions with high structural stability and the remaining <italic>flexible </italic>regions, and there is no overlap between them. Atoms in the core regions barely move between the two conformations. Indeed, the goal of the above assumption is to distinguish two different conformations as the "good" and "bad" parts. The core regions are assumed to contain at least 50% points of the entire point set, so the remaining flexible regions have up to 50% points. In our work, we treat the flexible regions as outliers. Our motivation is to improve the least sum of squares in the RMSD fit using a fit method with a high breakdown point (up to 50%). The <italic>least median of squares </italic>(LMS) is a robust statistics method that estimates the parameters of the model by minimizing the median of the absolute <italic>residuals</italic>. In other words, LMS replaces the sum of least squares by a <italic>median</italic>. The breakdown point of LMS is as high as 50% [<xref ref-type="bibr" rid="B36">36</xref>]. The resulting estimator using LMS can resist the effect of nearly 50% of contamination in the input data, which is applicable to our case. Given a rotation matrix <bold>U</bold>, the absolute residual is defined as the distance between the rotation point <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M5" name="1471-2105-10-29-i5" overflow="scroll"><mml:semantics><mml:mrow><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:msup><mml:mi>x</mml:mi><mml:mo>&#x02032;</mml:mo></mml:msup></mml:mstyle><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:semantics></mml:math></inline-formula> = <bold>Ux</bold><sub><italic>i </italic></sub>and the target point <bold>y</bold><sub><italic>i</italic></sub>; for the <italic>i</italic>th point pair the residual is <italic>r</italic><sub><italic>i </italic></sub>= ||<inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M6" name="1471-2105-10-29-i5" overflow="scroll"><mml:semantics><mml:mrow><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:msup><mml:mi>x</mml:mi><mml:mo>&#x02032;</mml:mo></mml:msup></mml:mstyle><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:semantics></mml:math></inline-formula> - <bold>y</bold><sub><italic>i</italic></sub>||. Based on the given <bold>U</bold>, the median of absolute residuals between two point sets is defined as:</p><p><disp-formula id="bmcM2"><label>(2)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M7" name="1471-2105-10-29-i6" overflow="scroll"><mml:semantics><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>e</mml:mi><mml:mi>d</mml:mi><mml:mi>i</mml:mi><mml:mi>a</mml:mi><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mtext>median</mml:mtext></mml:mrow><mml:mi>i</mml:mi></mml:munder><mml:mrow><mml:mo>&#x02016;</mml:mo><mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>U</mml:mi></mml:mstyle><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>x</mml:mi></mml:mstyle><mml:mi>i</mml:mi></mml:msub><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>y</mml:mi></mml:mstyle><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mo>&#x02016;</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mn>1</mml:mn><mml:mo>&#x02264;</mml:mo><mml:mi>i</mml:mi><mml:mo>&#x02264;</mml:mo><mml:mi>N</mml:mi><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:semantics></mml:math></disp-formula></p><p>In this paper, our goal is to search a best rotation matrix <bold>U </bold>that minimizes the median <italic>D</italic><sub><italic>median </italic></sub>of the residuals as follows:</p><p><disp-formula id="bmcM3"><label>(3)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M8" name="1471-2105-10-29-i7" overflow="scroll"><mml:semantics><mml:mrow><mml:munder><mml:mrow><mml:mi>min</mml:mi><mml:mo>&#x02061;</mml:mo></mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>U</mml:mi></mml:mstyle></mml:munder><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:munder><mml:mrow><mml:mtext>median</mml:mtext></mml:mrow><mml:mi>i</mml:mi></mml:munder><mml:mrow><mml:mo>&#x02016;</mml:mo><mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>U</mml:mi></mml:mstyle><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>x</mml:mi></mml:mstyle><mml:mi>i</mml:mi></mml:msub><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>y</mml:mi></mml:mstyle><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mo>&#x02016;</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mn>1</mml:mn><mml:mo>&#x02264;</mml:mo><mml:mi>i</mml:mi><mml:mo>&#x02264;</mml:mo><mml:mi>N</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:semantics></mml:math></disp-formula></p><p>where <bold>U </bold>is the optimal rotation matrix that will be computed. Rousseeuw [<xref ref-type="bibr" rid="B36">36</xref>] has also pointed out there always exists a solution for LMS.</p><sec><title>Random sampling algorithm for computing the LMS optimaztion</title><p>Eq. (3) can be solved using the following <italic>random sampling </italic>algorithm (i.e. RANSAC) [<xref ref-type="bibr" rid="B35">35</xref>,<xref ref-type="bibr" rid="B48">48</xref>]. First, <italic>k </italic>point pairs are randomly selected between two point sets, and the first rotation matrix is computed using the RMSD algorithm to the <italic>k </italic>point pairs. Next the median of the residuals of the remaining <italic>N </italic>- <italic>k </italic>point pairs is computed. The process is repeated <italic>T </italic>times to generate <italic>T </italic>candidate rotation matrices. The matrix with the minimal median is selected as the final rotation matrix <bold>U</bold>. A small value of <italic>k </italic>does not use all of the available points to the fit computation, while a larger value of <italic>k </italic>requires more iterations. If <italic>k </italic>is too large, the algorithm becomes sensitive to outliers, i.e. local displacements.</p></sec></sec><sec><title>The forward search</title><p>The forward search algorithm [<xref ref-type="bibr" rid="B39">39</xref>] is a new robust method that avoids the need to fix <italic>k</italic>. Recently, Fleishman et al. [<xref ref-type="bibr" rid="B35">35</xref>] have applied this technique to fit surfaces from point clouds in computer graphics. The forward algorithm first searches a small outlier-free subset and then iteratively refines the subset by adding one sample at a time. This is in contrast to the backward algorithms, which first deal with the entire data points and then delete bad samples. Fleishman et al. [<xref ref-type="bibr" rid="B35">35</xref>] showed that some outliers with large error may fail on fit based on the backward algorithms, whereas the forward algorithm gives satisfactory results. For our purpose, the initial subset is computed using the LMS algorithm using a small <italic>k </italic>value, where <italic>k </italic>is typically close to <italic>p </italic>for a model with <italic>p </italic>parameters (specially <italic>p </italic>= 3 in the 3D case) [<xref ref-type="bibr" rid="B35">35</xref>,<xref ref-type="bibr" rid="B39">39</xref>]. During the forward search, a number of parameters can be monitored to detect the influential points. Atkinson et al. [<xref ref-type="bibr" rid="B39">39</xref>] suggested several statistics, including the residual-plot, Cook's distance and others, to be monitored. For their purposes, these are plotted on a graph and inspected visually. In [<xref ref-type="bibr" rid="B35">35</xref>], Fleishman et al. suggested to monitor the maximal residual <italic>r</italic><sub>max</sub>. The above monitoring techniques are essentially to determine the termination conditions for the forward search iteration. In our technique, we also monitor the maximal residual similar to Fleishman et al.'s strategy [<xref ref-type="bibr" rid="B35">35</xref>].</p></sec><sec><title>The LMS fit algorithm</title><p>Using the forward search technique for solving Eq. (3), we present a new LMS fit algorithm for structural superposition of two point sets {<bold>x</bold><sub><italic>i</italic></sub>} and {<bold>y</bold><sub><italic>i</italic></sub>} with <italic>N </italic>points each in order to compute the centers and the rotation matrix <bold>U</bold>.</p><p>1. Compute the small outlier-free subset <italic>Q</italic><sub>x </sub>&#x02286; {<bold>x</bold><sub><italic>i</italic></sub>} and <italic>Q</italic><sub>y </sub>&#x02286; {<bold>y</bold><sub><italic>i</italic></sub>} using the LMS algorithm, which is described as <italic>random sampling </italic>above.</p><p>2. The centers and rotation matrix <bold>U </bold>are computed for <italic>Q</italic><sub>x </sub>and <italic>Q</italic><sub>y </sub>using the RMSD fit.</p><p>3. One pair of points with the minimal residual <italic>r</italic><sub>min </sub>in the remaining point pairs are added into <italic>Q</italic><sub>x </sub>and <italic>Q</italic><sub>y</sub>, respectively.</p><p>4. Repeat steps 2 and 3 until <italic>r</italic><sub>min </sub>is larger than a predefined threshold <italic>r</italic><sub>max </sub>and the iteration number <italic>iter </italic>is larger than the minimal iteration number MIN_ITERS. Finally, identify points in <italic>Q</italic><sub>x </sub>and <italic>Q</italic><sub>y </sub>as the rigid core regions and points in ({<bold>x</bold><sub><italic>i</italic></sub>} - <italic>Q</italic><sub>x</sub>) and ({<bold>y</bold><sub><italic>i</italic></sub>} - <italic>Q</italic><sub>y</sub>) as outliers or flexible regions.</p><p>Implementation details of the LMS fit are described in <bold>Appendix</bold>.</p><sec><title>Initial robust estimator</title><p>In the first step of the forward search algorithm, the initial subset is computed using the LMS algorithm with a small <italic>k </italic>value (we typically choose <italic>k </italic>= 3). If the atom number <italic>N </italic>of protein is small, the choice of the initial subset can be performed by exhaustive enumeration of all (<inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M9" name="1471-2105-10-29-i8" overflow="scroll"><mml:semantics><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mi>N</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>k</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:semantics></mml:math></inline-formula>); otherwise, LMS uses the random sampling algorithm that requires a large iteration number <italic>T </italic>to achieve a high probability of finding a good estimator. The LMS algorithm, as a statistical method, assumes that the samples (points) are independent. If <italic>g </italic>is the probability of selecting a single good sample at random from two original point sets {<bold>x</bold><sub><italic>i</italic></sub>} and {<bold>y</bold><sub><italic>i</italic></sub>}, then the probability <italic>P </italic>of successfully finding <italic>k </italic>good samples after <italic>T </italic>iterations can be computed by <italic>P </italic>= 1 - (1 - <italic>g</italic><sup><italic>k</italic></sup>)<sup><italic>T </italic></sup>[<xref ref-type="bibr" rid="B35">35</xref>]. In our implementation, we use <italic>T </italic>= 500 for the small proteins (e.g. <italic>N </italic>&#x0003c; 900) and <italic>T </italic>= 1000 for the large proteins (e.g. <italic>N </italic>&#x02265; 900) in order to obtain both small errors and little computation time.</p></sec><sec><title>Termination conditions</title><p>In the fourth step, there are two termination conditions (i.e. <italic>r</italic><sub>min </sub>&#x0003e; <italic>r</italic><sub>max </sub>and <italic>iter </italic>&#x0003e; MIN_ITERS). <italic>r</italic><sub>max </sub>is the threshold of maximal residual. The threshold <italic>r</italic><sub>max </sub>controls the fitted subsets. Smaller values of <italic>r</italic><sub>max </sub>does not use all of the available atom pairs to fit, while a larger value for <italic>r</italic><sub>max </sub>requires more iterations and the algorithm becomes sensitive to outliers. If <italic>r</italic><sub>max </sub>is too large such that the final subset is equal to the input point set, i.e. no outlier detected, the LMS fit is same to the RMSD fit algorithm. In some sense, the RMSD fit is only one special case of our algorithm. In our experiments, the errors would have to be on the order of Angstroms. We have found that <italic>r</italic><sub>max </sub>in the range of 1&#x000c5; to 4&#x000c5; is able to highlight the similarity of the rigid core regions.</p><p>In addition, another termination condition, in which the iteration number <italic>iter </italic>should be larger than the minimal iteration number MIN_ITERS, is also very important. MIN_ITERS is usually chosen as a predefined integer to ensure that the number of atoms on core regions is more than 50% of atoms (generally [<italic>N</italic>/2.0] &#x02264; MIN_ITERS &#x02264; <italic>N</italic>). This constraint condition satisfies the LMS assumption in which the core regions contain at least 50% points of the entire point set. We typically choose MIN_ITERS as the half of the number of atoms, i.e. MIN_ITERS &#x021d0; [<italic>N</italic>/2.0].</p></sec><sec><title>A new similarity measurement</title><p>A standard RMSD fit minimizes the sum of residuals for entire atom pairs, whereas the LMS fit minimizes the median of residuals for entire atom pairs. When finishing the LMS fit using the forward search technique, we can obtain two similarity measurements. One is the median distance <italic>D</italic><sub><italic>median </italic></sub>by computing Eq. (2) for two entire point sets. Another is the RMSD distance <italic>D</italic><sub><italic>rmsd </italic></sub>by computing the the square root of Eq. (1) for the final subset <italic>Q</italic><sub>x </sub>and <italic>Q</italic><sub>y</sub>. Being different with <italic>D</italic><sub><italic>median</italic></sub>and <italic>D</italic><sub><italic>rmsd </italic></sub>defined by absolute distances, we present a new similarity measurement:</p><p><disp-formula id="bmcM4"><label>(4)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M10" name="1471-2105-10-29-i9" overflow="scroll"><mml:semantics><mml:mrow><mml:mtext>Core</mml:mtext><mml:mi>%</mml:mi><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:mtext>core</mml:mtext></mml:mrow></mml:msub></mml:mrow><mml:mi>N</mml:mi></mml:mfrac><mml:mo>,</mml:mo></mml:mrow></mml:semantics></mml:math></disp-formula></p><p>where <italic>N</italic><sub>core </sub>is the number of atoms of the core region, and <italic>N </italic>is the number of entire atoms of protein. The value of Core% denotes the proportion of the core region (i.e. the final subset) that belongs to the entire point set. It is more intuitive to measure the similarity between two conformations than the absolute distances <italic>D</italic><sub><italic>median </italic></sub>and <italic>D</italic><sub><italic>rmsd</italic></sub>. The maximum value of Core% occurs when <italic>N</italic><sub>core </sub>is equal to <italic>N </italic>(i.e. the distances between all atom pairs are less than <italic>r</italic><sub>max</sub>). The lower the similarity, the smaller the value of Core%. The value of Core% can be directly used for the similarity score between two protein structures.</p><p>We will investigate the effect of Core% with respect to <italic>r</italic><sub>max </sub>in the next section.</p></sec></sec></sec><sec><title>Authors' contributions</title><p>YL generated the original idea, executed the research, and wrote the manuscript. YF participated in the research. KR supervised the project and edited the paper. All authors read and approved the final manuscript.</p></sec><sec><title>Appendix: LMS implementation details</title><p>The outline of an algorithm for the LMS fit, called <bold>LMSfit</bold>, is given in Algorithm 1. The algorithm takes as input two point sets <bold>X </bold>and <bold>Y </bold>with <italic>N </italic>points each in order to compute the centers <bold>c</bold><sub>x </sub>and <bold>c</bold><sub>y </sub>and the rotation matrix <bold>U</bold>. This is achieved through an iterative procedure with the aid of two variables <italic>Q</italic><sub>x </sub>and <italic>Q</italic><sub>y </sub>which are the working subset of superposition between <bold>X </bold>and <bold>Y</bold>, respectively. Initially, <italic>Q</italic><sub>x </sub>and <italic>Q</italic><sub>y </sub>are computed using the LMS algorithm through selecting <italic>k </italic>point pairs at random with <italic>T </italic>iterations, as illustrated in Algorithm 2.</p><p>Algorithm 2 is passed into three point sets (<bold>X </bold>and <bold>Y</bold>) in order to produce <italic>k </italic>point pairs as the initial subset for the forward search (typically <italic>k </italic>= 3). First, a loop with <italic>T </italic>iterations begins. At each iteration, two subsets (<italic>S</italic><sub>x </sub>and <italic>S</italic><sub>y</sub>) with <italic>k </italic>points each are selected at random, and then two centers of the two subsets and a rotation matrix are computed using the standard RMSD fit. Next, residuals of all point pairs in the remaining subsets are calculated as the distance between each rotation point and the corresponding target point. Finally, the median <italic>r</italic><sub>median </sub>of residuals of the remaining subset is obtained. The subsets (<italic>S</italic><sub>x </sub>and <italic>S</italic><sub>y</sub>) with the minimal median <italic>r</italic><sub>median </sub>are returned as the final initial subsets (<italic>Q</italic><sub>x </sub>and <italic>Q</italic><sub>y</sub>), respectively. During the iterative procedure in Algorithm 1, the cardinality of <italic>Q</italic><sub>x </sub>and <italic>Q</italic><sub>y </sub>is gradually increased by adding one pair of points (<bold>x* </bold>and <bold>y*</bold>) with the minimal residual every time. In this way, one is able to increase <italic>Q</italic><sub>x </sub>and <italic>Q</italic><sub>y </sub>regarded as the core region in the forward search. If the residuals of the remaining point pairs are more than a threshold <italic>r</italic><sub>max</sub>, the procedure is terminated. Finally, the final subset <italic>Q</italic><sub>x </sub>and <italic>Q</italic><sub>y </sub>are regarded as the core regions and the points in <italic>Q</italic><sub>x </sub>and <italic>Q</italic><sub>y </sub>are used to compute the final centers <bold>c</bold><sub>x </sub>and <bold>c</bold><sub>y </sub>and the rotation matrix <bold>U</bold>, and the remaining points are identified as outliers or flexible regions.</p><p><bold>Algorithm 1</bold>: <bold>LMSfit</bold>(<bold>X</bold>, <bold>Y</bold>, <bold>c</bold><sub>x</sub>, <bold>c</bold><sub>y</sub>, <bold>U</bold>)</p><p>Input: <bold>X</bold>: the first point set with <italic>N </italic>points</p><p><bold>Y</bold>: the second point set with <italic>N </italic>points</p><p>Output:</p><p><bold>c</bold><sub>x </sub>and <bold>c</bold><sub>y</sub>: the final centers of <bold>X </bold>and <bold>Y</bold></p><p><bold>U</bold>: the rotation matrix</p><p>Local variables:</p><p><italic>k</italic>: the number of random samples</p><p><italic>Q</italic><sub>x </sub>and <italic>Q</italic><sub>y</sub>: the subsets of <bold>X </bold>and <bold>Y</bold></p><p><italic>R</italic><sub>x </sub>and <italic>R</italic><sub>y</sub>: the sets of the remaining points, i.e. <italic>R</italic><sub>x </sub>&#x021d0; <bold>X </bold>- <italic>Q</italic><sub>x </sub>and <italic>R</italic><sub>x </sub><bold>Y </bold>- <italic>Q</italic><sub>y</sub></p><p><inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M11" name="1471-2105-10-29-i10" overflow="scroll"><mml:semantics><mml:mrow><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mover accent="true"><mml:mi>c</mml:mi><mml:mo>&#x002dc;</mml:mo></mml:mover></mml:mstyle><mml:mtext>x</mml:mtext></mml:msub></mml:mrow></mml:semantics></mml:math></inline-formula> and <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M12" name="1471-2105-10-29-i11" overflow="scroll"><mml:semantics><mml:mrow><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mover accent="true"><mml:mi>c</mml:mi><mml:mo>&#x002dc;</mml:mo></mml:mover></mml:mstyle><mml:mtext>y</mml:mtext></mml:msub></mml:mrow></mml:semantics></mml:math></inline-formula>: the temporary centers</p><p><inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M13" name="1471-2105-10-29-i12" overflow="scroll"><mml:semantics><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mover accent="true"><mml:mi>U</mml:mi><mml:mo>&#x002dc;</mml:mo></mml:mover></mml:mstyle></mml:semantics></mml:math></inline-formula>: the temporary rotation matrix</p><p><italic>r</italic><sub>min</sub>: the minimal residual</p><p><italic>r</italic><sub>max</sub>: the maximal residual</p><p>begin</p><p>1: <italic>Q</italic><sub>x </sub>&#x021d0; &#x02205;; <italic>Q</italic><sub>y </sub>&#x021d0; &#x02205;;</p><p>2: <bold>LMS</bold>(<bold>X</bold>, <bold>Y</bold>, <italic>k</italic>, <italic>Q</italic><sub>x</sub>, <italic>Q</italic><sub>y</sub>);</p><p>3: <italic>I </italic>&#x021d0; 0;</p><p>4: <italic>R</italic><sub>x </sub>&#x021d0; <bold>X </bold>- <italic>Q</italic><sub>x</sub>; <italic>R</italic><sub>y </sub>&#x021d0; <bold>Y </bold>- <italic>Q</italic><sub>y</sub>;</p><p>5: MIN_ITERS &#x021d0; [<italic>N</italic>/2.0];</p><p>6: <bold>while </bold>(|<italic>R</italic><sub>x</sub>| &#x0003e; 0) <bold>do</bold></p><p>7: &#x000a0;&#x000a0;&#x000a0;Compute two centers <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M14" name="1471-2105-10-29-i10" overflow="scroll"><mml:semantics><mml:mrow><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mover accent="true"><mml:mi>c</mml:mi><mml:mo>&#x002dc;</mml:mo></mml:mover></mml:mstyle><mml:mtext>x</mml:mtext></mml:msub></mml:mrow></mml:semantics></mml:math></inline-formula> and <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M15" name="1471-2105-10-29-i11" overflow="scroll"><mml:semantics><mml:mrow><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mover accent="true"><mml:mi>c</mml:mi><mml:mo>&#x002dc;</mml:mo></mml:mover></mml:mstyle><mml:mtext>y</mml:mtext></mml:msub></mml:mrow></mml:semantics></mml:math></inline-formula> for <italic>Q</italic><sub>x </sub>and <italic>Q</italic><sub>y</sub>;</p><p>8: &#x000a0;&#x000a0;&#x000a0;Translate <bold>X </bold>and <bold>Y </bold>to <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M16" name="1471-2105-10-29-i10" overflow="scroll"><mml:semantics><mml:mrow><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mover accent="true"><mml:mi>c</mml:mi><mml:mo>&#x002dc;</mml:mo></mml:mover></mml:mstyle><mml:mtext>x</mml:mtext></mml:msub></mml:mrow></mml:semantics></mml:math></inline-formula> and <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M17" name="1471-2105-10-29-i11" overflow="scroll"><mml:semantics><mml:mrow><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mover accent="true"><mml:mi>c</mml:mi><mml:mo>&#x002dc;</mml:mo></mml:mover></mml:mstyle><mml:mtext>y</mml:mtext></mml:msub></mml:mrow></mml:semantics></mml:math></inline-formula>, and compute the rotation matrix <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M18" name="1471-2105-10-29-i12" overflow="scroll"><mml:semantics><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mover accent="true"><mml:mi>U</mml:mi><mml:mo>&#x002dc;</mml:mo></mml:mover></mml:mstyle></mml:semantics></mml:math></inline-formula> for two translated point sets using the standard RMSD fit algorithm;</p><p>9: &#x000a0;&#x000a0;&#x000a0;/* Compute <bold>r </bold>as residuals of all pairs of points between <italic>R</italic><sub>x </sub>and <italic>R</italic><sub>y </sub>*/</p><p>10: &#x000a0;&#x000a0;&#x000a0;<bold>for </bold>(<italic>i </italic>= 0; <italic>i </italic>&#x0003c; |<italic>R</italic><sub>x</sub>|; <italic>i </italic>+ +) <bold>do</bold></p><p>11: &#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;<bold>x</bold><sub><italic>i </italic></sub>&#x021d0; <italic>R</italic><sub>x</sub>(<italic>i</italic>) and <bold>y</bold><sub><italic>i </italic></sub>&#x021d0; <italic>R</italic><sub>y</sub>(<italic>i</italic>);</p><p>12: &#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;<bold>r</bold>(<italic>i</italic>) &#x021d0; ||<inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M19" name="1471-2105-10-29-i12" overflow="scroll"><mml:semantics><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mover accent="true"><mml:mi>U</mml:mi><mml:mo>&#x002dc;</mml:mo></mml:mover></mml:mstyle></mml:semantics></mml:math></inline-formula>(<bold>x</bold><sub><italic>i </italic></sub>- <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M20" name="1471-2105-10-29-i10" overflow="scroll"><mml:semantics><mml:mrow><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mover accent="true"><mml:mi>c</mml:mi><mml:mo>&#x002dc;</mml:mo></mml:mover></mml:mstyle><mml:mtext>x</mml:mtext></mml:msub></mml:mrow></mml:semantics></mml:math></inline-formula>) - (<bold>y</bold><sub><italic>i </italic></sub>- <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M21" name="1471-2105-10-29-i11" overflow="scroll"><mml:semantics><mml:mrow><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mover accent="true"><mml:mi>c</mml:mi><mml:mo>&#x002dc;</mml:mo></mml:mover></mml:mstyle><mml:mtext>y</mml:mtext></mml:msub></mml:mrow></mml:semantics></mml:math></inline-formula>)||;</p><p>13: &#x000a0;&#x000a0;&#x000a0;<bold>end for</bold></p><p>14: &#x000a0;&#x000a0;&#x000a0;Get the pair of points <bold>x* </bold>and <bold>y* </bold>with the minimal residual <italic>r</italic><sub>min </sub>for <bold>r</bold>;</p><p>15: &#x000a0;&#x000a0;&#x000a0;<bold>if </bold>(<italic>r</italic><sub>min </sub>&#x0003e; <italic>r</italic><sub>max </sub>and <italic>I </italic>&#x0003e; MIN_ITERS) <bold>then</bold></p><p>16: &#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;<bold>return</bold></p><p>17: &#x000a0;&#x000a0;&#x000a0;<bold>end if</bold></p><p>18: &#x000a0;&#x000a0;&#x000a0;/* Update the subsets and the remaining point sets */</p><p>19: &#x000a0;&#x000a0;&#x000a0;<italic>Q</italic><sub>x </sub>&#x021d0; <italic>Q</italic><sub>x </sub>+ <bold>x* </bold>and <italic>Q</italic><sub>y </sub>&#x021d0; <italic>Q</italic><sub>y </sub>+ <bold>y*</bold>;</p><p>20: &#x000a0;&#x000a0;&#x000a0;<italic>R</italic><sub>x </sub>&#x021d0; <italic>R</italic><sub>x </sub>- <bold>x* </bold>and <italic>R</italic><sub>y </sub>&#x021d0; <italic>R</italic><sub>y </sub>- <bold>y*</bold>;</p><p>21: &#x000a0;&#x000a0;&#x000a0;/* Update the centers and rotation matrix */</p><p>22: &#x000a0;&#x000a0;&#x000a0;<bold>c</bold><sub>x </sub>&#x021d0; <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M22" name="1471-2105-10-29-i10" overflow="scroll"><mml:semantics><mml:mrow><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mover accent="true"><mml:mi>c</mml:mi><mml:mo>&#x002dc;</mml:mo></mml:mover></mml:mstyle><mml:mtext>x</mml:mtext></mml:msub></mml:mrow></mml:semantics></mml:math></inline-formula>, <bold>c</bold><sub>y </sub>&#x021d0; <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M23" name="1471-2105-10-29-i11" overflow="scroll"><mml:semantics><mml:mrow><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mover accent="true"><mml:mi>c</mml:mi><mml:mo>&#x002dc;</mml:mo></mml:mover></mml:mstyle><mml:mtext>y</mml:mtext></mml:msub></mml:mrow></mml:semantics></mml:math></inline-formula>, and <bold>U </bold>&#x021d0; <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M24" name="1471-2105-10-29-i12" overflow="scroll"><mml:semantics><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mover accent="true"><mml:mi>U</mml:mi><mml:mo>&#x002dc;</mml:mo></mml:mover></mml:mstyle></mml:semantics></mml:math></inline-formula>;</p><p>23: &#x000a0;&#x000a0;&#x000a0;<italic>I </italic>+ +;</p><p>24: &#x000a0;&#x000a0;&#x000a0;<bold>end while</bold></p><p>end</p><p><bold>Algorithm 2</bold>: <bold>LMS</bold>(<bold>X</bold>, <bold>Y</bold>, <italic>k</italic>, <italic>Q</italic><sub>x</sub>, <italic>Q</italic><sub>y</sub>)</p><p>Input:</p><p><bold>X</bold>: the first point set with <italic>N </italic>points</p><p><bold>Y</bold>: the second point set with <italic>N </italic>points</p><p><italic>k</italic>: the number of random samples</p><p>Output:</p><p><italic>Q</italic><sub>x </sub>and <italic>Q</italic><sub>y</sub>: the initial subsets from <bold>X </bold>and <bold>Y</bold></p><p>Local variables:</p><p><italic>T</italic>: the number of iterations</p><p><italic>S</italic><sub>x </sub>and <italic>S</italic><sub>y</sub>: the subsets selected randomly</p><p><italic>R</italic><sub>x </sub>and <italic>R</italic><sub>y</sub>: the set of the remaining points, i.e. <italic>R</italic><sub>x </sub>&#x021d0; <bold>X </bold>- <italic>S</italic><sub>x </sub>and <italic>R</italic><sub>y </sub>&#x021d0; <bold>Y </bold>- <italic>S</italic><sub>y</sub></p><p><bold>r</bold>: the vector of redsiduals</p><p><bold>c</bold><sub>x </sub>and <bold>c</bold><sub>y</sub>: the centers of the subsets <italic>S</italic><sub>x </sub>and <italic>S</italic><sub>y</sub></p><p><bold>U</bold>: the rotation matrix</p><p><italic>r</italic><sub>median</sub>: the median of redsiduals</p><p><italic>r</italic><sub>min</sub>: the minimal redsidual</p><p>begin</p><p>1: <italic>r</italic><sub>min </sub>&#x021d0; &#x0221e;;</p><p>2: <bold>for </bold>(<italic>j </italic>= 0; <italic>j </italic>&#x0003c;<italic>T</italic>; <italic>j </italic>+ +) <bold>do</bold></p><p>3: &#x000a0;&#x000a0;&#x000a0;Select randomly <italic>k </italic>pairs of points: <italic>S</italic><sub>x </sub>and <italic>S</italic><sub>y</sub>, with the same order from <bold>X </bold>and <bold>Y</bold>, respectively;</p><p>4: &#x000a0;&#x000a0;&#x000a0;Compute two centers <bold>c</bold><sub>x </sub>and <bold>c</bold><sub>y </sub>for <italic>S</italic><sub>x </sub>and <italic>S</italic><sub>y</sub>;</p><p>5: &#x000a0;&#x000a0;&#x000a0;Translate <italic>S</italic><sub>x </sub>and <italic>S</italic><sub>y </sub>to <bold>c</bold><sub>x </sub>and <bold>c</bold><sub>y</sub>, and then compute the rotation matrix <bold>U </bold>for two translated subsets using the RMSD algorithm;</p><p>6: &#x000a0;&#x000a0;&#x000a0;Compute the sets of the remaining points as: <italic>R</italic><sub>x </sub>&#x021d0; <bold>X </bold>- <italic>S</italic><sub>x </sub>and <italic>R</italic><sub>y </sub>&#x021d0; <bold>Y </bold>- <italic>S</italic><sub>y</sub>;</p><p>7: &#x000a0;&#x000a0;&#x000a0;/* Compute <bold>r </bold>as residuals of all pairs of points between <italic>R</italic><sub>x </sub>and <italic>R</italic><sub>y </sub>*/</p><p>8: &#x000a0;&#x000a0;&#x000a0;<bold>for </bold>(<italic>i </italic>= 0; <italic>i </italic>&#x0003c; |<italic>R</italic><sub>x</sub>|; <italic>i </italic>+ +) <bold>do</bold></p><p>9: &#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;<bold>x</bold><sub><italic>i </italic></sub>&#x021d0; <italic>R</italic><sub>x</sub>(<italic>i</italic>) and <bold>y</bold><sub><italic>i </italic></sub>&#x021d0; <italic>R</italic><sub>y</sub>(<italic>i</italic>);</p><p>10: &#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;<bold>r</bold>(<italic>i</italic>) &#x021d0; ||<bold>U</bold>(<bold>x</bold><sub><italic>i </italic></sub>- <bold>c</bold><sub>x</sub>) - (<bold>y</bold><sub><italic>i </italic></sub>- <bold>c</bold><sub>y</sub>)||;</p><p>11: &#x000a0;&#x000a0;&#x000a0;<bold>end for</bold></p><p>12: &#x000a0;&#x000a0;&#x000a0;Compute the median <italic>r</italic><sub>median </sub>by sorting <bold>r</bold>;</p><p>13: &#x000a0;&#x000a0;&#x000a0;<bold>if </bold>(<italic>r</italic><sub>median </sub>&#x0003c;<italic>r</italic><sub>min</sub>) <bold>then</bold></p><p>14: &#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;<italic>r</italic><sub>min </sub>&#x021d0; <italic>r</italic><sub>median</sub>;</p><p>15: &#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;<italic>Q</italic><sub>x </sub>&#x021d0; <italic>S</italic><sub>x </sub>and <italic>Q</italic><sub>y </sub>&#x021d0; <italic>S</italic><sub>y</sub>;</p><p>16: &#x000a0;&#x000a0;&#x000a0;<bold>end if</bold></p><p>17: <bold>end for</bold></p><p>end</p></sec></body><back><ack><sec><title>Acknowledgements</title><p>We would like to thank Dr. Talapady Bhat for some helpful comments during our work. This material is partly based upon work supported by the National Institute of Health (GM-075004). Any opinions, findings, and conclusions or recommendations expressed in this material are those of the author(s) and do not necessarily reflect the views of the National Science Foundation. We also acknowledge partial support from the National Science Foundation under Grant IIS No. 0535156.</p></sec></ack><ref-list><ref id="B1"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Buck</surname><given-names>E</given-names></name><name><surname>Iyengar</surname><given-names>R</given-names></name></person-group><article-title>Organization and functions of interacting domains for signaling by protein-protein interactions</article-title><source>Sci STKE</source><year>2003</year><fpage>re14</fpage><pub-id pub-id-type="pmid">14625370</pub-id></citation></ref><ref id="B2"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Damm</surname><given-names>K</given-names></name><name><surname>Carlson</surname><given-names>H</given-names></name></person-group><article-title>Gaussian-weighted RMSD superposition of proteins: A structural comparison for flexible proteins and predicted protein structures</article-title><source>Biophysical Journal</source><year>2006</year><volume>90</volume><fpage>4558</fpage><lpage>4573</lpage><pub-id pub-id-type="pmid">16565070</pub-id></citation></ref><ref id="B3"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Hilser</surname><given-names>V</given-names></name><name><surname>Dowdy</surname><given-names>D</given-names></name><name><surname>Oas</surname><given-names>T</given-names></name><name><surname>Freire</surname><given-names>E</given-names></name></person-group><article-title>The structural distribution of cooperative interactions in proteins: Analysis of the native state ensemble</article-title><source>Proc Natl Acad Sci</source><year>1998</year><volume>95</volume><fpage>9903</fpage><lpage>9908</lpage><pub-id pub-id-type="pmid">9707573</pub-id></citation></ref><ref id="B4"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Luque</surname><given-names>I</given-names></name><name><surname>Freire</surname><given-names>E</given-names></name></person-group><article-title>Strutural stability of binding sites: Consequences for binding affinity and allosteric effects</article-title><source>Proteins</source><year>2000</year><volume>41</volume><fpage>63</fpage><lpage>71</lpage><pub-id pub-id-type="pmid">11013401</pub-id></citation></ref><ref id="B5"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Pawson</surname><given-names>T</given-names></name><name><surname>Nash</surname><given-names>P</given-names></name></person-group><article-title>Assembly of cell regulatory systems through protein interaction domains</article-title><source>Science</source><year>2003</year><volume>300</volume><fpage>445</fpage><lpage>452</lpage><pub-id pub-id-type="pmid">12702867</pub-id></citation></ref><ref id="B6"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Chiang</surname><given-names>R</given-names></name><name><surname>Meng</surname><given-names>E</given-names></name><name><surname>Huang</surname><given-names>C</given-names></name><name><surname>Ferrin</surname><given-names>T</given-names></name><name><surname>Babbitt</surname><given-names>P</given-names></name></person-group><article-title>The structure superposition database</article-title><source>Nucleic Acids Research</source><year>2003</year><volume>31</volume><fpage>505</fpage><lpage>510</lpage><pub-id pub-id-type="pmid">12520064</pub-id></citation></ref><ref id="B7"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Flower</surname><given-names>D</given-names></name></person-group><article-title>Rotational superposition: A review of methods</article-title><source>Journal of Molecular Graphics and Modelling</source><year>1999</year><volume>17</volume><fpage>238</fpage><lpage>244</lpage><pub-id pub-id-type="pmid">10736782</pub-id></citation></ref><ref id="B8"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Theobald</surname><given-names>D</given-names></name><name><surname>Wuttke</surname><given-names>D</given-names></name></person-group><article-title>THESEUS: Maximum likelihood superpositioning and analysis of macromolecular structures</article-title><source>Bioinformatics</source><year>2006</year><volume>22</volume><fpage>2171</fpage><lpage>2172</lpage><pub-id pub-id-type="pmid">16777907</pub-id></citation></ref><ref id="B9"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Coutsias</surname><given-names>E</given-names></name><name><surname>Seok</surname><given-names>C</given-names></name><name><surname>Dill</surname><given-names>K</given-names></name></person-group><article-title>Using quaternions to calculate RMSD</article-title><source>Journal of Computational Chemistry</source><year>2004</year><volume>25</volume><fpage>1849</fpage><lpage>1857</lpage><pub-id pub-id-type="pmid">15376254</pub-id></citation></ref><ref id="B10"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Horn</surname><given-names>B</given-names></name></person-group><article-title>Closed-form solution of absolute orientation using unit quaternions</article-title><source>Journal of the Optical Society of America</source><year>1986</year><volume>4</volume><fpage>629</fpage><lpage>642</lpage></citation></ref><ref id="B11"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Kabsch</surname><given-names>W</given-names></name></person-group><article-title>A solution for the best rotation to relate two sets of vectors</article-title><source>Acta Crystallographica</source><year>1976</year><volume>32</volume><fpage>922</fpage><lpage>923</lpage></citation></ref><ref id="B12"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Kabsch</surname><given-names>W</given-names></name></person-group><article-title>A discussion of the solution for the best rotation to relate two sets of vectors</article-title><source>Acta Crystallographica</source><year>1978</year><volume>34</volume><fpage>827</fpage><lpage>828</lpage></citation></ref><ref id="B13"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Maiorov</surname><given-names>V</given-names></name><name><surname>Crippen</surname><given-names>G</given-names></name></person-group><article-title>Significance of root-mean-square deviation in comparing three-dimensional structures of globular proteins</article-title><source>Journal of Molecular Biology</source><year>1994</year><volume>235</volume><fpage>625</fpage><lpage>634</lpage><pub-id pub-id-type="pmid">8289285</pub-id></citation></ref><ref id="B14"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Ye</surname><given-names>Y</given-names></name><name><surname>Godzik</surname><given-names>A</given-names></name></person-group><article-title>Flexible structure alignment by chaining aligned fragment pairs allowing twists</article-title><source>Bioinformatics</source><year>2003</year><volume>19</volume><fpage>ii246</fpage><lpage>ii255</lpage><pub-id pub-id-type="pmid">14534198</pub-id></citation></ref><ref id="B15"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Godzik</surname><given-names>A</given-names></name></person-group><article-title>The structural alignment between two proteins: Is there a unique answer?</article-title><source>Protein Science</source><year>1996</year><volume>5</volume><fpage>1325</fpage><lpage>1338</lpage><pub-id pub-id-type="pmid">8819165</pub-id></citation></ref><ref id="B16"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Theobald</surname><given-names>D</given-names></name><name><surname>Wuttke</surname><given-names>D</given-names></name></person-group><article-title>Empirical Bayes hierarchical models for regularizing maximum likelihood estimation in the matrix Gaussian Procrustes problem</article-title><source>Proc Natl Acad Sci</source><year>2006</year><volume>103</volume><fpage>18521</fpage><lpage>18527</lpage><pub-id pub-id-type="pmid">17130458</pub-id></citation></ref><ref id="B17"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Krebs</surname><given-names>W</given-names></name><name><surname>Gerstein</surname><given-names>M</given-names></name></person-group><article-title>The morph server: a standardized system for analyzing and visualizing macromolecular motions in a database framework</article-title><source>Nucleic Acids Research</source><year>2000</year><volume>28</volume><fpage>1665</fpage><lpage>1675</lpage><pub-id pub-id-type="pmid">10734184</pub-id></citation></ref><ref id="B18"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Gerstein</surname><given-names>M</given-names></name><name><surname>Chothia</surname><given-names>C</given-names></name></person-group><article-title>Analysis of protein loop closure: two types of hinges produce one motion in lactate dehydrogenase</article-title><source>Journal of Molecular Biology</source><year>1991</year><volume>220</volume><fpage>133</fpage><lpage>149</lpage><pub-id pub-id-type="pmid">2067013</pub-id></citation></ref><ref id="B19"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Lesk</surname><given-names>AM</given-names></name></person-group><source>Protein Architecture: A Practical Guide</source><year>1991</year><publisher-name>IRL Press, Oxford</publisher-name></citation></ref><ref id="B20"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Wriggers</surname><given-names>W</given-names></name><name><surname>Schulten</surname><given-names>K</given-names></name></person-group><article-title>Protein domain movements: detection of rigid domains and visualization of hinges in comparisons of atomic coordinates</article-title><source>Proteins</source><year>1997</year><volume>29</volume><fpage>1</fpage><lpage>14</lpage><pub-id pub-id-type="pmid">9294863</pub-id></citation></ref><ref id="B21"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Carugo</surname><given-names>O</given-names></name><name><surname>Pongor</surname><given-names>S</given-names></name></person-group><article-title>A normalized root-mean-spuare distance for comparing protein three-dimensional structures</article-title><source>Protein Science</source><year>2001</year><volume>10</volume><fpage>1470</fpage><lpage>1473</lpage><pub-id pub-id-type="pmid">11420449</pub-id></citation></ref><ref id="B22"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Zhang</surname><given-names>Y</given-names></name><name><surname>Skolnick</surname><given-names>J</given-names></name></person-group><article-title>TM-align: A protein structure alignment algorithm based on TM-score</article-title><source>Nucleic Acids Research</source><year>2005</year><volume>33</volume><fpage>2302</fpage><lpage>2309</lpage><pub-id pub-id-type="pmid">15849316</pub-id></citation></ref><ref id="B23"><citation citation-type="other"><person-group person-group-type="author"><name><surname>Kavraki</surname><given-names>L</given-names></name></person-group><article-title>Molecular Distance Measures</article-title><year>2007</year><ext-link ext-link-type="uri" xlink:href="http://cnx.org/content/m11608/latest/"/></citation></ref><ref id="B24"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Wallin</surname><given-names>S</given-names></name><name><surname>Farwer</surname><given-names>J</given-names></name><name><surname>Bastolla</surname><given-names>U</given-names></name></person-group><article-title>Testing similarity measures with continuous and discrete protein models</article-title><source>Proteins</source><year>2003</year><volume>50</volume><fpage>144</fpage><lpage>157</lpage><pub-id pub-id-type="pmid">12471607</pub-id></citation></ref><ref id="B25"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Maiti</surname><given-names>R</given-names></name><name><surname>Van Domselaar</surname><given-names>G</given-names></name><name><surname>Zhang</surname><given-names>H</given-names></name><name><surname>Wishart</surname><given-names>D</given-names></name></person-group><article-title>SuperPose: A simple server for sophisticated structural superposition</article-title><source>Nucleic Acids Research</source><year>2004</year><volume>32</volume><fpage>W590</fpage><lpage>594</lpage><pub-id pub-id-type="pmid">15215457</pub-id></citation></ref><ref id="B26"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Diamond</surname><given-names>R</given-names></name></person-group><article-title>On the multiple simultaneous superposition of molecular structures by rigid body transformations</article-title><source>Protein Science</source><year>1992</year><volume>1</volume><fpage>1279</fpage><lpage>1287</lpage><pub-id pub-id-type="pmid">1303746</pub-id></citation></ref><ref id="B27"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Eidhammer</surname><given-names>I</given-names></name><name><surname>Jonassen</surname><given-names>I</given-names></name><name><surname>Taylor</surname><given-names>W</given-names></name></person-group><article-title>Structure comparison and structure pattern</article-title><source>Journal of Computational Biology</source><year>2000</year><volume>7</volume><fpage>685</fpage><lpage>716</lpage><pub-id pub-id-type="pmid">11153094</pub-id></citation></ref><ref id="B28"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Kearsley</surname><given-names>S</given-names></name></person-group><article-title>An algorithm for the simultaneous superposition of a structural series</article-title><source>Journal of Computational Chemistry</source><year>1990</year><volume>11</volume><fpage>1187</fpage><lpage>1192</lpage></citation></ref><ref id="B29"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Perkins</surname><given-names>T</given-names></name><name><surname>Dean</surname><given-names>P</given-names></name></person-group><article-title>An exploration of a novel strategy for superposing several flexible molecules</article-title><source>J Comput Aided Mol Des</source><year>1993</year><volume>7</volume><fpage>155</fpage><lpage>172</lpage><pub-id pub-id-type="pmid">8320554</pub-id></citation></ref><ref id="B30"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Lathrop</surname><given-names>RH</given-names></name></person-group><article-title>The protein threading problem with sequence amino acid interaction preferences is NP-complete</article-title><source>Protein Engineering</source><year>1994</year><volume>7</volume><fpage>1059</fpage><lpage>1068</lpage><pub-id pub-id-type="pmid">7831276</pub-id></citation></ref><ref id="B31"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Holm</surname><given-names>L</given-names></name><name><surname>Sander</surname><given-names>C</given-names></name></person-group><article-title>Protein structure comparison by alignment of distance matrices</article-title><source>Journal of Molecular Biology</source><year>1993</year><volume>233</volume><fpage>123</fpage><lpage>138</lpage><pub-id pub-id-type="pmid">8377180</pub-id></citation></ref><ref id="B32"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Shindyalov</surname><given-names>I</given-names></name><name><surname>Bourne</surname><given-names>P</given-names></name></person-group><article-title>Protein structure alignment by incremental combinatorial extension (CE) of the optimal path</article-title><source>Protein Engineering</source><year>1998</year><volume>11</volume><fpage>739</fpage><lpage>747</lpage><pub-id pub-id-type="pmid">9796821</pub-id></citation></ref><ref id="B33"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Shatsky</surname><given-names>M</given-names></name><name><surname>Nussinov</surname><given-names>R</given-names></name><name><surname>Wolfson</surname><given-names>H</given-names></name></person-group><article-title>Flexible protein alignment and hinge detection</article-title><source>Proteins</source><year>2002</year><volume>48</volume><fpage>242</fpage><lpage>256</lpage><pub-id pub-id-type="pmid">12112693</pub-id></citation></ref><ref id="B34"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Sumathi</surname><given-names>K</given-names></name><name><surname>Ananthalakshmi</surname><given-names>P</given-names></name><name><surname>Roshan</surname><given-names>M</given-names></name><name><surname>Sekar</surname><given-names>K</given-names></name></person-group><article-title>3dSS: 3D structural superposition</article-title><source>Nucleic Acids Research</source><year>2006</year><volume>34</volume><fpage>W128</fpage><lpage>W132</lpage><pub-id pub-id-type="pmid">16844975</pub-id></citation></ref><ref id="B35"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Fleishman</surname><given-names>S</given-names></name><name><surname>Cohen-Or</surname><given-names>D</given-names></name><name><surname>Silva</surname><given-names>C</given-names></name></person-group><article-title>Robust moving least-squares fitting with sharp features</article-title><source>ACM Transactions on Graphics (SIGGRAPH 2005)</source><year>2005</year><volume>24</volume><fpage>544</fpage><lpage>552</lpage></citation></ref><ref id="B36"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Rousseeuw</surname><given-names>P</given-names></name></person-group><article-title>Least median of squares regression</article-title><source>Journal of the American Statistical Association</source><year>1984</year><volume>79</volume><fpage>871</fpage><lpage>880</lpage></citation></ref><ref id="B37"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Page</surname><given-names>R</given-names></name><name><surname>Lindberg</surname><given-names>U</given-names></name><name><surname>Schutt</surname><given-names>CE</given-names></name></person-group><article-title>Domain Motions in Actin</article-title><source>Journal of Molecular Biology</source><year>1998</year><volume>280</volume><fpage>463</fpage><lpage>474</lpage><pub-id pub-id-type="pmid">9665849</pub-id></citation></ref><ref id="B38"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Choi</surname><given-names>V</given-names></name><name><surname>Goyal</surname><given-names>N</given-names></name></person-group><article-title>An algorithmic approach to the identification of rigid domains in proteins</article-title><source>Algorithmica</source><year>2007</year><volume>48</volume><fpage>343</fpage><lpage>362</lpage></citation></ref><ref id="B39"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Atkinson</surname><given-names>A</given-names></name><name><surname>Riani</surname><given-names>M</given-names></name></person-group><source>Robust diagnostic regression analysis</source><year>2000</year><publisher-name>Springer</publisher-name></citation></ref><ref id="B40"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Echols</surname><given-names>N</given-names></name><name><surname>Milburn</surname><given-names>D</given-names></name><name><surname>Gerstein</surname><given-names>M</given-names></name></person-group><article-title>MolMovDB: Analysis and visualization of conformational change and structural flexibility</article-title><source>Nucleic Acids Research</source><year>2003</year><volume>31</volume><fpage>478</fpage><lpage>482</lpage><pub-id pub-id-type="pmid">12520056</pub-id></citation></ref><ref id="B41"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Berman</surname><given-names>H</given-names></name><name><surname>Westbrook</surname><given-names>J</given-names></name><name><surname>Feng</surname><given-names>Z</given-names></name><name><surname>Gilliland</surname><given-names>G</given-names></name><name><surname>Bhat</surname><given-names>T</given-names></name><name><surname>Weissig</surname><given-names>H</given-names></name><name><surname>Shindyalov</surname><given-names>I</given-names></name><name><surname>Bourne</surname><given-names>P</given-names></name></person-group><article-title>The Protein Data Bank</article-title><source>Nucleic Acids Research</source><year>2000</year><volume>28</volume><fpage>235</fpage><lpage>242</lpage><pub-id pub-id-type="pmid">10592235</pub-id></citation></ref><ref id="B42"><citation citation-type="book"><person-group person-group-type="author"><name><surname>DeLano</surname><given-names>W</given-names></name></person-group><source>The PyMOL Molecular Graphics System</source><publisher-name>DeLano Scientific, San Carlos, CA</publisher-name><ext-link ext-link-type="uri" xlink:href="http://www.pymol.org"/></citation></ref><ref id="B43"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Bourne</surname><given-names>P</given-names></name><name><surname>Shindyalov</surname><given-names>I</given-names></name></person-group><article-title>Structure comparison and alignment</article-title><source>Methods Biochem Anal</source><year>2003</year><volume>44</volume><fpage>321</fpage><lpage>337</lpage><pub-id pub-id-type="pmid">12647393</pub-id></citation></ref><ref id="B44"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Fass</surname><given-names>D</given-names></name><name><surname>Bogden</surname><given-names>C</given-names></name><name><surname>Berger</surname><given-names>J</given-names></name></person-group><article-title>Quaternary changes in topoisomerase II may direct orthogonal movement of two DNA strands</article-title><source>Nature Structural Biology</source><year>1999</year><volume>6</volume><fpage>322</fpage><lpage>326</lpage><pub-id pub-id-type="pmid">10201398</pub-id></citation></ref><ref id="B45"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Tilley</surname><given-names>S</given-names></name><name><surname>Orlova</surname><given-names>E</given-names></name><name><surname>Gilbert</surname><given-names>R</given-names></name><name><surname>Andrew</surname><given-names>P</given-names></name><name><surname>Saibil</surname><given-names>H</given-names></name></person-group><article-title>Structural basis of pore formation by the bacterial toxin pneumolysin</article-title><source>Cell</source><year>2005</year><volume>121</volume><fpage>247</fpage><lpage>256</lpage><pub-id pub-id-type="pmid">15851031</pub-id></citation></ref><ref id="B46"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Moult</surname><given-names>J</given-names></name><name><surname>Fidelis</surname><given-names>K</given-names></name><name><surname>Zemla</surname><given-names>A</given-names></name><name><surname>Hubbard</surname><given-names>T</given-names></name></person-group><article-title>Critical assessment of methods of protein structure prediction (CASP)-Round V</article-title><source>Proteins</source><year>2003</year><volume>53</volume><fpage>334</fpage><lpage>339</lpage><pub-id pub-id-type="pmid">14579322</pub-id></citation></ref><ref id="B47"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Zhang</surname><given-names>Y</given-names></name><name><surname>Skolnick</surname><given-names>J</given-names></name></person-group><article-title>Scoring function for automated assessment of protein structure template quality</article-title><source>Proteins</source><year>2004</year><volume>57</volume><fpage>702</fpage><lpage>710</lpage><pub-id pub-id-type="pmid">15476259</pub-id></citation></ref><ref id="B48"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Fischler</surname><given-names>MA</given-names></name><name><surname>Bolles</surname><given-names>RC</given-names></name></person-group><article-title>Random sample consensus: A paradigm for model fitting with applications to image analysis and automated cartography</article-title><source>Communications of the ACM</source><year>1981</year><volume>24</volume><fpage>381</fpage><lpage>395</lpage></citation></ref></ref-list></back></article>