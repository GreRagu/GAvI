<!DOCTYPE article PUBLIC "-//NLM//DTD Journal Archiving and Interchange DTD v2.3 20070202//EN" "archivearticle.dtd"><article xmlns:xlink="http://www.w3.org/1999/xlink" article-type="product-review"><?properties open_access?><front><journal-meta><journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id><journal-title>BMC Bioinformatics</journal-title><issn pub-type="epub">1471-2105</issn><publisher><publisher-name>BioMed Central</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="pmid">19173744</article-id><article-id pub-id-type="pmc">2640359</article-id><article-id pub-id-type="publisher-id">1471-2105-10-35</article-id><article-id pub-id-type="doi">10.1186/1471-2105-10-35</article-id><article-categories><subj-group subj-group-type="heading"><subject>Software</subject></subj-group></article-categories><title-group><article-title>The Genome Reverse Compiler: an explorative annotation tool</article-title></title-group><contrib-group><contrib id="A1" corresp="yes" contrib-type="author"><name><surname>Warren</surname><given-names>Andrew S</given-names></name><xref ref-type="aff" rid="I1">1</xref><xref ref-type="aff" rid="I2">2</xref><email>anwarren@vt.edu</email></contrib><contrib id="A2" corresp="yes" contrib-type="author"><name><surname>Setubal</surname><given-names>Jo&#x000e3;o Carlos </given-names></name><xref ref-type="aff" rid="I1">1</xref><xref ref-type="aff" rid="I2">2</xref><email>setubal@vbi.vt.edu</email></contrib></contrib-group><aff id="I1"><label>1</label>Virginia Bioinformatics Institute, Virginia Tech, Blacksburg, VA, USA</aff><aff id="I2"><label>2</label>Department of Computer Science, Virginia Tech, Blacksburg, VA, USA</aff><pub-date pub-type="collection"><year>2009</year></pub-date><pub-date pub-type="epub"><day>27</day><month>1</month><year>2009</year></pub-date><volume>10</volume><fpage>35</fpage><lpage>35</lpage><ext-link ext-link-type="uri" xlink:href="http://www.biomedcentral.com/1471-2105/10/35"/><history><date date-type="received"><day>25</day><month>7</month><year>2008</year></date><date date-type="accepted"><day>27</day><month>1</month><year>2009</year></date></history><permissions><copyright-statement>Copyright &#x000a9; 2009 Warren and Setubal; licensee BioMed Central Ltd.</copyright-statement><copyright-year>2009</copyright-year><copyright-holder>Warren and Setubal; licensee BioMed Central Ltd.</copyright-holder><license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/2.0"><p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/2.0"/>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</p><!--<rdf xmlns="http://web.resource.org/cc/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1" xmlns:dcterms="http://purl.org/dc/terms"><Work xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" rdf:about=""><license rdf:resource="http://creativecommons.org/licenses/by/2.0"/><dc:type rdf:resource="http://purl.org/dc/dcmitype/Text"/><dc:author>               Warren               S               Andrew                                             anwarren@vt.edu            </dc:author><dc:title>            The Genome Reverse Compiler: an explorative annotation tool         </dc:title><dc:date>2009</dc:date><dcterms:bibliographicCitation>BMC Bioinformatics 10(1): 35-. (2009)</dcterms:bibliographicCitation><dc:identifier type="sici">1471-2105(2009)10:1&#x0003c;35&#x0003e;</dc:identifier><dcterms:isPartOf>urn:ISSN:1471-2105</dcterms:isPartOf><License rdf:about="http://creativecommons.org/licenses/by/2.0"><permits rdf:resource="http://web.resource.org/cc/Reproduction" xmlns=""/><permits rdf:resource="http://web.resource.org/cc/Distribution" xmlns=""/><requires rdf:resource="http://web.resource.org/cc/Notice" xmlns=""/><requires rdf:resource="http://web.resource.org/cc/Attribution" xmlns=""/><permits rdf:resource="http://web.resource.org/cc/DerivativeWorks" xmlns=""/></License></Work></rdf>--></license></permissions><abstract><sec><title>Background</title><p>As sequencing costs have decreased, whole genome sequencing has become a viable and integral part of biological laboratory research. However, the tools with which genes can be found and functionally characterized have not been readily adapted to be part of the everyday biological sciences toolkit. Most annotation pipelines remain as a service provided by large institutions or come as an unwieldy conglomerate of independent components, each requiring their own setup and maintenance.</p></sec><sec><title>Results</title><p>To address this issue we have created the Genome Reverse Compiler, an easy-to-use, open-source, automated annotation tool. The GRC is independent of third party software installs and only requires a Linux operating system. This stands in contrast to most annotation packages, which typically require installation of relational databases, sequence similarity software, and a number of other programming language modules. We provide details on the methodology used by GRC and evaluate its performance on several groups of prokaryotes using GRC's built in comparison module.</p></sec><sec><title>Conclusion</title><p>Traditionally, to perform whole genome annotation a user would either set up a pipeline or take advantage of an online service. With GRC the user need only provide the genome he or she wants to annotate and the function resource files to use. The result is high usability and a very minimal learning curve for the intended audience of life science researchers and bioinformaticians. We believe that the GRC fills a valuable niche in allowing users to perform explorative, whole-genome annotation.</p></sec></abstract></article-meta></front><body><sec><title>Background</title><p>While there has been extensive work in both automated gene finding [<xref ref-type="bibr" rid="B1">1</xref>-<xref ref-type="bibr" rid="B4">4</xref>] and functional assignment [<xref ref-type="bibr" rid="B5">5</xref>], there are only a few automated whole-genome annotation systems available as open source projects [<xref ref-type="bibr" rid="B6">6</xref>-<xref ref-type="bibr" rid="B8">8</xref>] and none, of which we are aware, that can be used without significant setup or manual interaction. For annotation pipelines that are commercially available [<xref ref-type="bibr" rid="B9">9</xref>,<xref ref-type="bibr" rid="B10">10</xref>] or provided as a service [<xref ref-type="bibr" rid="B11">11</xref>-<xref ref-type="bibr" rid="B15">15</xref>], it is difficult to obtain and evaluate information for the methods used. By formally addressing the integration of each component in the annotation process as part of a completely automated, open source project, it may be possible to gain a further understanding of problems facing automated genome annotation as a whole.</p><p>The Genome Reverse Compiler is open source software intended for explorative annotation of prokaryotic genomic sequences. Its name and philosophy are based on analogy with a high-level programming language compiler. In this analogy, the genome is a program in a certain low-level language that humans cannot understand. Given the sequence of any prokaryotic genome, GRC produces its corresponding "high-level program" &#x02013; its annotation. GRC allows the user to annotate a target genome by simply providing annotated protein sequences, in widely accepted formats, from organisms related to the target. GRC uses a similarity search against these sequences, and sequence information from the genome itself, to find protein coding genes and determine putative function of their products. We believe an integrated, open source annotation tool such as GRC benefits the life sciences community in several ways. It opens up the realm of electronic annotation to researchers who wish to annotate sequences in-house but who lack the resources to setup an annotation pipeline. Also, submission to an online annotation service may not be realistic for those wishing to annotate a large number of sequences or for sequences that do not meet with submission restrictions. GRC can provide targeted whole genome annotation since it allows users to provide the protein sequence database to be used for annotation; such a mechanism can be especially helpful in situations where users have their own curated database of sequences in addition to publicly available sequences.</p><p>In whole genome annotation, before an organism's genes can be annotated they must be found within the genomic sequence. In its current form, the GRC focuses on finding ORFs and evaluating whether they will likely be translated into protein. In making this evaluation, one consideration is sequence composition: whether the amino acid composition of the sequence is characteristic of typical coding genes found in the target organism. Some other sources of information to consider are: whether the sequence is conserved across multiple organisms (an indicator it is subject to selective pressure), whether two open reading frames overlap with one another, and the sequence length of an ORF.</p><p>Once an ORF is determined likely to be a real gene, an annotation procedure may assign some additional information. Typically this information includes the function of the gene product. Currently there is no way to computationally determine function <italic>ab initio</italic>. That is, to determine the function of a gene solely based on its sequence composition without reference to a similar sequence whose function is already known.</p><p>Common practice is to assign the function of genes based on sequence similarity comparisons to a database of genes whose functions are known. In many annotation procedures, the database sequence that has the top scoring, statistically significant alignment with a target gene has its function transferred to that target gene. Because functional information is frequently electronically transplanted from one sequence to another, the degree of separation between the original source of functional information and where it is applied can be great. This may cause an inappropriate functional assignment and can lead to "error propagation", where erroneous information is repeatedly applied to various sequences through multiple electronic annotations [<xref ref-type="bibr" rid="B16">16</xref>]. To address this situation the GRC provides several mechanisms for controlling how functions are assigned and gives the evidence for each assignment as part of the annotation.</p><p>Traditional biological nomenclature for describing genes and their products have many subtleties, redundancies, and inconsistencies. The distinctions and assumptions necessary for interpreting this information do not promote interoperability among functional genomic databases and are difficult to account for computationally. This problem can be addressed by using a structured, precisely defined system for specifying information about a gene. One such system is the Gene Ontology [<xref ref-type="bibr" rid="B17">17</xref>]. The Gene Ontology, or GO as it is commonly called, is a controlled vocabulary of terms that describe the molecular function, biological process, and cellular component of a gene. GO is structured as a directed acyclic graph that creates a subsumption hierarchy through its "is_a" and other directed arcs. In this hierarchy, when one node/function is assigned to a particular sequence, all parent/ancestor nodes up to the root are implicitly assigned. Using the Gene Ontology gives an added measure of precision to assigning functions to genes. By making use of evidence codes and the GO term ID numbers, we can adapt the behavior of the annotation process to the information available for a specific sequence.</p><p>The rapid accumulation and widespread availability of genomic information for prokaryotes makes it possible to use information from previous annotations of closely related organisms to annotate a newly sequenced genome. Sequencing costs are already low enough that hundreds of new prokaryotic genomes are being sequenced every year. Moreover, efforts are underway to fill the still existing "phylogenetic gaps" in the databases of prokaryotic sequences [<xref ref-type="bibr" rid="B18">18</xref>]. The GRC depends on this availability to create its annotations. Using prior annotation information raises several questions that can be addressed computationally. How should the assertions made in another organism's annotation impact the assertions made for the target organism? In what context are we to believe or disbelieve indications made by previous annotations? When multiple annotations are involved, how do we resolve conflicting information? In creating an integrated annotation tool we investigate possible answers to these questions and explore novel ways for determining, <italic>in silico</italic>, the location and function of protein coding genes as part of an integrated process.</p></sec><sec><title>Implementation</title><sec><title>Gene Finding</title><p>Many popular gene finding algorithms perform <italic>ab initio </italic>by building a sequence model based on the target genomic sequence. In creating or applying this model it is possible to overly bias results against anomalous sequences, such as viral genes or recently acquired conjugated genes. GRC incorporates a gene finding module which uses information from closely related genomes. In addition to sequence similarity information, this algorithm evaluates the information content of sequences using entropy-density profiles (EDPs) introduced by Zhu et al. [<xref ref-type="bibr" rid="B4">4</xref>].</p><p>To evaluate whether sequences are likely to be protein coding genes we consider sequence conservation, composition, and overlap in the genome. Conservation is determined by a sequence similarity search using FSA-BLAST [<xref ref-type="bibr" rid="B19">19</xref>] against a user-provided sequence database (which we call the <italic>GRC BLAST database</italic>). Composition is evaluated using entropy-density profiles introduced by Zhu et al. [<xref ref-type="bibr" rid="B4">4</xref>], and subsequently used in MED 2.0 [<xref ref-type="bibr" rid="B20">20</xref>] and Glimmer3 [<xref ref-type="bibr" rid="B1">1</xref>]. EDPs are emphasized by the GRC to discriminate between likely coding and non-coding sequences when there is low scoring or no sequence similarity information for an ORF. In their previous work Zhu et al. show the efficacy of this value by testing it on several well annotated bacterial genomes. An EDP is a feature vector, based on Shannon information theory [<xref ref-type="bibr" rid="B21">21</xref>], used to describe the amino acid content of a sequence. In this work, we use the EDP as an additional piece of evidence to indicate the coding potential of a sequence. In the method used by Zhu et al., each sequence is mapped to its own EDP and then compared to both a representative coding and non-coding EDP, which we will refer to as the global EDPs. Each sequence is then classified as coding or non-coding based on its distance from the global EDPs in the 20-dimensional phase space. Let <italic>p</italic><sub><italic>i </italic></sub>be the count for each amino acid in a sequence where <italic>i </italic>= 1, ..., 20 represents the index of a specific amino acid. For a given sequence of length <italic>l</italic>, let <italic>f</italic><sub><italic>i </italic></sub>be the frequency of the <italic>i</italic>th amino acid where <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M1" name="1471-2105-10-35-i1" overflow="scroll"><mml:semantics><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mi>l</mml:mi></mml:mfrac></mml:mrow></mml:semantics></mml:math></inline-formula>. The Shannon entropy for the given sequence is then defined as:</p><p><disp-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M2" name="1471-2105-10-35-i2" overflow="scroll"><mml:semantics><mml:mrow><mml:mi>H</mml:mi><mml:mo>=</mml:mo><mml:mo>&#x02212;</mml:mo><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>&#x02211;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mn>20</mml:mn></mml:mrow></mml:munderover><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mi>log</mml:mi><mml:mo>&#x02061;</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mstyle></mml:mrow></mml:semantics></mml:math></disp-formula></p><p>The entropy-density for the <italic>i</italic>th amino acid of a sequence is defined as:</p><p><disp-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M3" name="1471-2105-10-35-i3" overflow="scroll"><mml:semantics><mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mo>&#x02212;</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mi>log</mml:mi><mml:mo>&#x02061;</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>H</mml:mi></mml:mfrac></mml:mrow></mml:semantics></mml:math></disp-formula></p><p>To compute the EDP feature vector for a given sequence we compute <italic>S</italic><sub><italic>i </italic></sub>for <italic>i </italic>= 1, ..., 20.</p><p>Zhu et al. demonstrate that global EDPs representing coding and non-coding sequences for all prokaryotes can act as good centers for their respective groups in the 20-dimensional phase space and as a result can be used as initial discriminators to classify a sequence as coding or non-coding [<xref ref-type="bibr" rid="B4">4</xref>,<xref ref-type="bibr" rid="B20">20</xref>]. To perform this classification, they calculate what we will call the "entropy distance ratio" (EDR). The EDR is the ratio of the relative distances to the global EDPs. The distance for a particular sequence to the global EDPs, <italic>D</italic><sub><italic>c </italic></sub>or <italic>D</italic><sub><italic>nc</italic></sub>, is defined as the Euclidean distance:</p><p><disp-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M4" name="1471-2105-10-35-i4" overflow="scroll"><mml:semantics><mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:mi>&#x003b1;</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>&#x02211;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mn>20</mml:mn></mml:mrow></mml:munderover><mml:mrow><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>&#x02212;</mml:mo><mml:msubsup><mml:mi>S</mml:mi><mml:mi>i</mml:mi><mml:mi>&#x003b1;</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:mstyle></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:semantics></mml:math></disp-formula></p><p>where <italic>&#x003b1; </italic>represents "<italic>c</italic>" for coding or "<italic>nc</italic>" for non-coding.</p><p>The EDR is then defined to be:</p><p><disp-formula>EDR = <italic>D</italic><sub><italic>c</italic></sub>/<italic>D</italic><sub><italic>nc</italic></sub></disp-formula></p><p>The gene finding procedure for GRC is as follows: All ORFs are generated from a linear scan of the genome. Let <italic>M </italic>represent this set of sequences. In order to minimize the number of unnecessary overlap evaluations, we first determine the most likely start site for each ORF. The start sites are adjusted from the original maximal coordinate to the highest scoring start site. Each start site is scored according to the average frequency at which its codon occurs and how well they fit the gene model suggested by the highest scoring compatible alignment (see below). All potential start sites are placed in a priority queue based on score.</p><p>ORFs that occupy the same genomic space are said to overlap. These overlaps are evaluated and resolved by either adjusting the start coordinate of one of the offending ORFs or removing an ORF from set <italic>M</italic>. This process creates a set of likely coding ORFs <italic>C </italic>as well as a set of ORFs likely to be non-coding <italic>L</italic>. The likely coding and non-coding sets <italic>C </italic>and <italic>L </italic>are used to retrain the respective coding, non-coding global EDPs for the organism. Entropy distance ratios are calculated for each sequence using the new global EDPs. All ORFs with poor similarity scores and EDR scores are removed from the original set <italic>M </italic>creating a refined set <italic>M'</italic>. Using the new EDR values, a second round of overlap evaluation is performed on <italic>M' </italic>to determine the final set of protein coding genes (see Figure <xref ref-type="fig" rid="F1">1</xref>).</p><fig position="float" id="F1"><label>Figure 1</label><caption><p><bold>Procedure for gene calls</bold>. Gene calling procedure for GRC. Starting with all ORFs (set <italic>M</italic>), BLAST information and the generic EDPs are used to make an initial evaluation of coding and non-coding. ORFs determined to be coding go into set <italic>C </italic>and those ORFs that overlap them go into set <italic>L</italic>. The EDPs are retrained to be organism specific and are used to remove the low-scoring ORFs from <italic>M </italic>to create <italic>M'</italic>. Overlaps in <italic>M' </italic>are then resolved to create gene calls.</p></caption><graphic xlink:href="1471-2105-10-35-1"/></fig><p>GRC takes a heuristic approach in using information from multiple pairwise alignments and start codon frequencies to rank potential translation initiation sites. Each alignment, in the multiple pairwise alignments of the query ORF, is taken to be evidence of the start sites that occur between the aligned region and the beginning of the maximally long ORF (Figure <xref ref-type="fig" rid="F2">2</xref>). A score, <italic>&#x003b1;</italic>, is calculated for each putative start site, for each supporting alignment. As it is possible for each start site to be supported by more than one alignment, only the maximum <italic>&#x003b1; </italic>across all supporting alignments is used to represent a particular start site. We give weight to start sites that occur in closer proximity to the conserved region and that occur at a higher frequency by scoring each site according to the function <italic>&#x003b1; </italic>= <italic>&#x003b2; </italic>+ <italic>&#x003b3; </italic>+ <italic>&#x003b4;</italic>, where <italic>&#x003b2; </italic>is the average of the frequencies that a start site codon is found in the experimentally verified datasets of <italic>E. coli </italic>[<xref ref-type="bibr" rid="B22">22</xref>] and <italic>B. subtilis </italic>[<xref ref-type="bibr" rid="B23">23</xref>] as computed by Makita et al. [<xref ref-type="bibr" rid="B24">24</xref>] (ATG 0.858, GTG 0.079, TTG 0.063). These start codons and their corresponding <italic>&#x003b2; </italic>values are used by default but may be changed by the user to match the target organism. The <italic>&#x003b3; </italic>and <italic>&#x003b4; </italic>components are alignment specific: <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M5" name="1471-2105-10-35-i5" overflow="scroll"><mml:semantics><mml:mrow><mml:mi>&#x003b3;</mml:mi><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>b</mml:mi><mml:mi>i</mml:mi><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>b</mml:mi><mml:mi>i</mml:mi><mml:msub><mml:mi>t</mml:mi><mml:mrow><mml:mtext>self</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:mrow></mml:semantics></mml:math></inline-formula>. Here <italic>bit </italic>represents the bit score from the alignment used to score the start and <italic>bit</italic><sub>self </sub>is the bit score that would result from an alignment of the entire sequence to itself. This "bit fraction", <italic>&#x003b3;</italic>, is also used in overlap evaluation and ORF removal. The last component, <italic>&#x003b4;</italic>, is the bit score of the alignment divided by the largest bit score of all the alignments for the given ORF. This gives weight to those starts supported by longer conserved sequences.</p><fig position="float" id="F2"><label>Figure 2</label><caption><p><bold>Start site determination</bold>. Support can come from different alignments for various start sites. Alignment 1 supports s1, s2, and s3; Alignment 2: s1 and s2; Alignment 3: s1, s2, s3, and s4. Higher start scores are given to start sites that: occur closer to a supporting alignment, occur at a higher frequency, and are supported by a higher scoring alignment.</p></caption><graphic xlink:href="1471-2105-10-35-2"/></fig><p>In the "All ORFs evaluation" procedure from Figure <xref ref-type="fig" rid="F1">1</xref>, ORFs with poor similarity and EDR scores are removed from consideration as coding genes. ORFs greater than 300 bp are kept if they have an alignment <italic>&#x003b3; </italic>score greater than 0.50 or an EDR value less than 1.0. ORFs less than 300 bp are considered small and occur at a higher frequency than those with longer sequences. Because they occur so often, small ORFs can represent a significant source of predictions and still pose a challenge for gene prediction [<xref ref-type="bibr" rid="B25">25</xref>]. Small ORFs are kept if they have a <italic>&#x003b3; </italic>score greater than 0.80 or an EDR value less than one positive standard deviation from the mean EDR value of the coding set used to retrain the EDPs (Figure <xref ref-type="fig" rid="F1">1</xref>).</p><p>Genes can and do overlap in prokaryotic genomes [<xref ref-type="bibr" rid="B26">26</xref>,<xref ref-type="bibr" rid="B27">27</xref>]. Some of these overlaps are speculated to be important in regulation of gene expression [<xref ref-type="bibr" rid="B28">28</xref>], while others are thought to stem from phage interaction [<xref ref-type="bibr" rid="B29">29</xref>]. For our purposes, when evaluating overlaps present in the set of all ORFs, it is important to determine whether the overlaps represent a biological phenomenon, an error in gene coordinates, or an indication that one of the ORFs involved is not a protein coding gene. To do this, we use the BLAST hits and the EDR values for the ORFs involved to specify the amount of overlap allowed. For any given pair of overlapping ORFs it is possible for both to have alignments with significant scores. Each alignment is taken as evidence that an ORF exists as a protein coding gene (this assumes the correctness of the subject sequence and the biological significance of the alignment). If the overlap is large and there can be no reconciliation by adjusting the start site coordinate, then it is likely that one of the ORFs is not a protein coding gene and should be removed.</p><p>In a study of 198 microbial genomes Johnson et al. [<xref ref-type="bibr" rid="B30">30</xref>] find that 70 percent of gene overlaps are less than 15 bp and 85 percent are less than 30 bp. Extrapolating, we define a range of 1...45 bp for initial allowable overlap between ORFs. Although empirical observation indicates a maximum overlap of 45 bp, we allow up to twice that (90 bp) if the evidence for both ORFs is strong. This allows the overlap to be evaluated by the user so that he or she can make a value judgment based on the evidence. The amount of allowable overlap is defined to be:</p><p><disp-formula><italic>Allowed </italic>= (<italic>&#x003b3; </italic>+ (1 - <italic>EDR</italic>)) * 45</disp-formula></p><p>If the EDP for the sequence is closer to the non-coding profile, then the EDR value will be greater than one leading to a decrease in the overlap allowed. Here we use the EDR and <italic>&#x003b3; </italic>values from the ORF that will be removed if the overlap is not resolved.</p><p>To determine which ORF in an overlapping pair will be removed we compare each ORF's alignment score, EDR, and length according to the following heuristic:</p><p>If one ORF has an alignment and the other does not, then the ORF with no alignment is removed. In all other cases the property which is determined to be the stronger discriminator is used. For two ORFs, ORF<sub>1 </sub>and ORF<sub>2</sub>, this is decided by comparing the values of the percentage difference, <italic>D</italic><sub><italic>S </italic></sub>for each property where <italic>S </italic>= {<italic>&#x003b3;</italic>, <italic>EDR, length</italic>}.</p><p><disp-formula><italic>D</italic><sub><italic>S </italic></sub>= |<italic>S</italic><sub>1 </sub>- <italic>S</italic><sub>2</sub>|/<italic>M IN </italic>(<italic>S</italic><sub>1</sub>, <italic>S</italic><sub>2</sub>)</disp-formula></p><p>If both ORFs have alignments, then the <italic>D</italic><sub><italic>S </italic></sub>values for bit fraction and EDR are compared. If neither do, then the <italic>D</italic><sub><italic>S </italic></sub>values for EDR and ORF length are compared. In both of these cases the property with the highest <italic>D</italic><sub><italic>S </italic></sub>value is used to decide which ORF is removed.</p><p>As part of the overlap evaluation process, it may be found that altering the start coordinate of one of the conflicting ORFs will resolve an overlap. Because the highest scoring start sites are determined before overlaps are evaluated, only the alternative start sites for the low-scoring ORF of an overlapping pair are considered in resolving an overlap. Obviously if the overlap does not occur on the 5' end of an ORF, there is no point in exploring alternative start sites. Alternative start sites are considered in order of their score as given by the start site priority queue. Because the GRC stores information about multiple pairwise alignments for each ORF, it is possible that certain alignments are compatible with some start sites and not with others (Figure <xref ref-type="fig" rid="F2">2</xref>). For each start site the alignment that best fits the sequence (has the largest <italic>&#x003b1;</italic>) is used to represent the ORF.</p></sec><sec><title>Functional Assignment</title><p>The functional assignments of GRC are based on associations, established through sequence similarity, between query ORFs found in the target genome and the subject sequences in the GRC BLAST database. Each association comes from an alignment that meets a user specified, e-value significance threshold. By default, the functions assigned to a query ORF are based on the annotation of one subject sequence chosen from those that have a significant alignment to the query. The subject whose alignment gives the highest <italic>&#x003b1; </italic>value (explained above), and is compatible with the start coordinate (see Figure <xref ref-type="fig" rid="F2">2</xref>), is used as the source of functional information to annotate a particular ORF (we will call this the "source subject"). If the database does not contain a sequence similar to the query sequence, then there can be no function assigned to it.</p><p>The exact information assigned to an ORF depends on the input provided to GRC. At its most basic level GRC takes a collection of amino acid FASTA files and uses it to create the BLAST database. In this case GRC simply parses the contents of the FASTA header of a subject sequence to create the annotations. If the user provides annotation tables for the corresponding sequence files then the parsing and annotation construction becomes more precise. With this level of input the product description and gene name are specified exactly and inappropriate information can be excluded. Currently the GRC supports protein annotation tables from NCBI and EMBL. The output of GRC also provides detailed information about functional assignment decisions, including confidence scores for assigned GO terms that are based on the <italic>&#x003b3; </italic>score of the corresponding alignment.</p><p>If GO annotations are provided as additional input, GRC's functional assignment becomes more adaptable. By default GRC assigns GO terms associated with the source subject as it does in the regular annotation procedure. However, when using the Gene Ontology with GRC the user also has the option to filter the term assignments based on GO evidence codes, term depth, and GO category. Evidence codes are a three letter code associated with a Gene Ontology annotation, which specifies a source of support category for a particular annotation. Although currently the vast majority of evidence codes for prokaryotic annotations are 'IEA', <italic>inferred by electronic annotation</italic>, we expect this feature to be useful as the number of experimentally derived annotations and the complexity of the evidence code system increases. The user also has the option to specify which GO categories to use in making annotations (molecular function, cellular component, or biological process).</p><p>A problem encountered in transferring function is deciding which function to use when there are multiple high-scoring alignments. GRC's default practice is to transfer the function of the database sequence whose alignment best fits the ORF sequence. However, just because a subject sequence is most similar to the target gene does not guarantee that it is well annotated and is the best candidate for functional transference, <italic>e.g. transferring a function from a 98% identical sequence experimentally determined to be glucokinase may be preferable to transferring the term "hypothetical" from a 99% identical sequence</italic>. If the user specifies a minimum GO term depth, terms associated with the source subject, that pass the depth restriction, are assigned. If none of the GO terms from the source subject meet all the filtering criteria then GO terms are assigned from another subject that has the highest <italic>a </italic>score and GO terms that do meet the criteria.</p><p>GRC also has the option of generating GO "consensus annotations." Multiple, significant alignments, and their associated functions, can represent a net or distributed knowledge about the query sequence. In these cases, if only the top-scoring function is transferred, then the net knowledge is lost. We provide in GRC a feature for capturing this net knowledge by creating GO consensus annotations. Consensus annotations are intended to leverage the information distributed across the GO-DAG from multiple alignments into term assignments which have a high level of evidential support. The assumption behind consensus annotations is that multiple alignments will indicate terms that occur in relative proximity to one another within the GO-DAG and that this proximity is indicative of either a protein family with similar function or a variation in function specifics for homologous sequences in the database. The goal is to capture the proximity, and subsequent agreement, of a group of terms through these GO term assignments. Similar algorithms have been developed in GOMIT [<xref ref-type="bibr" rid="B31">31</xref>] and CLUGO [<xref ref-type="bibr" rid="B32">32</xref>] but to our knowledge no publicly available implementation of these algorithms exist.</p><p>Additionally, the user is able to specify a minimum percent coverage that the alignment must satisfy, for both the query and subject, in order to be used for function assignment. These options give a measure of control such that the annotation of an entire genome can be customized to a user's particular interests. The ability to fine-tune GO term assignment in terms of GO evidence codes, depth, and category, the use of consensus annotations, and the extensive information about functional assignment decisions contained in the output, together constitute a powerful functional assignment system not found to our knowledge in other automated annotation systems.</p><sec><title>Evaluation</title><p>Also implemented in GRC is a module that allows the user to evaluate the performance of the tool with respect to a reference annotation. One part of the module provides a detailed analysis of precision and sensitivity with respect to gene finding. The details provided are meant to act as the engine to drive open-source development of the GRC and allow the user to easily evaluate the impact of his or her changes with respect to real organisms. This module also does automatic evaluation of function assignment.</p><p>Output from this module allows the review of current annotations based on evidence found in the annotation process.</p></sec></sec><sec><title>Gene Finding</title><p>Evaluating the performance of gene finding requires both a reference set of gene coordinates, <italic>R</italic>, and a defined system of measurement. For the purposes of using metrics, all the coordinates provided in the reference set are assumed correct. We evaluate the correctness of gene calls with respect to the starting set <italic>M </italic>composed of those ORFs found through a linear scan of the genome. This allows us to frame the gene finding problem for the GRC as one of classification. Given the set <italic>M</italic>, label each ORF in <italic>M </italic>as either coding (by placing it in the positive set <italic>P</italic>) or non-coding (by placing it in the negative set <italic>N</italic>). This leads to the following evaluation with respect to the reference set: every gene coordinate pair in set <italic>P </italic>is either a true positive (TP), a false positive (FP), or has no reference (NRP), and every coordinate pair in <italic>N </italic>is either a true negative (TN) or false negative (FN).</p><p><bold>True positive </bold>(TP): an ORF in set <italic>P </italic>that is in the same frame and has the same stop site as a gene in set <italic>R</italic></p><p><bold>False positive </bold>(FP): an ORF in set <italic>P </italic>that occupies the same space as a gene in set <italic>R </italic>but does not meet the conditions for a TP</p><p><bold>No reference positive </bold>(NRP): an ORF in set <italic>P </italic>that does not occupy the same space as any gene in set <italic>R</italic></p><p><bold>False negative </bold>(FN): an ORF in set <italic>N </italic>that is in the same frame and has the same stop site as a gene in set <italic>R </italic>(see note below)</p><p><bold>True negative </bold>(TN): an ORF in set <italic>N </italic>that does not meet the conditions for a FN</p><p>When using the GRC, the user must specify the minimum gene length. This is the minimum nucleotide length for gene finding, which means all putative genes returned by the GRC will be greater than or equal to this number. Genes in <italic>R </italic>that are shorter than the minimum gene length specified are not counted as false negatives.</p><p>When measuring the performance of gene finding with respect to a reference, we wish to answer the following:</p><p>&#x02022; How many of the genes in the reference set did we find (assert as being protein coding)?</p><p>&#x02022; Out of the ORFs we asserted as being protein coding, how many were correct?</p><p>&#x02022; And out of those correct, how many also had correct start site coordinates?</p><p>We can answer each of these questions with the following measurements:</p><p><disp-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M6" name="1471-2105-10-35-i6" overflow="scroll"><mml:semantics><mml:mrow><mml:mtext>Sensitivity&#x000a0;or&#x000a0;Recall</mml:mtext><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mo>+</mml:mo><mml:mi>F</mml:mi><mml:mi>N</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:semantics></mml:math></disp-formula></p><p><disp-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M7" name="1471-2105-10-35-i7" overflow="scroll"><mml:semantics><mml:mrow><mml:mtext>Precision&#x000a0;or&#x000a0;Accuracy</mml:mtext><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mo>+</mml:mo><mml:mi>F</mml:mi><mml:mi>P</mml:mi><mml:mo>+</mml:mo><mml:mi>N</mml:mi><mml:mi>R</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:semantics></mml:math></disp-formula></p><p><disp-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M8" name="1471-2105-10-35-i8" overflow="scroll"><mml:semantics><mml:mrow><mml:mtext>Start&#x000a0;Precision</mml:mtext><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>T</mml:mi><mml:msub><mml:mi>P</mml:mi><mml:mi>s</mml:mi></mml:msub></mml:mrow><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mo>+</mml:mo><mml:mi>F</mml:mi><mml:mi>P</mml:mi><mml:mo>+</mml:mo><mml:mi>N</mml:mi><mml:mi>R</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:semantics></mml:math></disp-formula></p><p>where <italic>TP</italic><sub><italic>s </italic></sub>= the number of true positives which have a correct start coordinate.</p></sec><sec><title>Functional Assignment</title><p>In testing function assignment, we wish to measure the number of genes we assign a correct function to and, because one gene can have multiple functions, the total number of functions correctly assigned. Without a system for formal functional classification, testing function assignment can be difficult.</p><p>Comparing plain text functional descriptions will result in measuring the number of common keywords and trying to ensure that they do not convey a common biological phenomena with little meaning, <italic>e.g. </italic>"<italic>protein</italic>." To address this problem we use the Gene Ontology, which allows us to devise a more precise system for measuring function assignment performance. This system assumes that there exists a reference annotation that specifies the most specific GO terms detailing the functional characteristics of each gene in the test genome. GOA formatted files from EMBL's Integr8 project [<xref ref-type="bibr" rid="B33">33</xref>] and the Gene Ontology website [<xref ref-type="bibr" rid="B34">34</xref>] are freely available and provide this information.</p><p>Let <italic>t </italic>be the target gene whose functional assignment correctness we wish to determine. Let <italic>r </italic>be the reference gene whose function we wish to compare <italic>t </italic>to. There are three conditions which must be met before we can evaluate whether the function assigned to <italic>t </italic>is correct:</p><p>1. <italic>t </italic>must be a true positive in gene finding with respect to the reference gene <italic>r</italic>.</p><p>2. <italic>t </italic>must be assigned a GO term as a result of the BLAST search.</p><p>3. <italic>r </italic>must also be assigned a GO term from the same GO category as <italic>t</italic>.</p><p>Assuming these conditions are met, we then assign a label to each GO term that has been assigned to each TP ORF in the result set <italic>P </italic>(Figure <xref ref-type="fig" rid="F3">3</xref>). A term assignment is labelled <bold>confirmed </bold>if it coincides with or is the ancestor of a reference GO term belonging to <italic>r</italic>. A term is labelled <bold>compatible </bold>if it has as its ancestor one of the specific GO terms assigned to <italic>r</italic>. These represent potential refinements of the current annotation of the gene. A term is labelled <bold>incompatible </bold>if it does not meet the requirements to be labelled confirmed or compatible. These terms only share a common ancestor with the terms listed for <italic>r</italic>. Incompatible term assignments are not necessarily incorrect. The relevance of this evaluation depends on the correctness <italic>and completeness </italic>of the reference GO term assignments. If an evaluation of "incompatible" results from comparison to a complete (all relevant GO terms have been assigned) and correct reference annotation, then the incompatible assignment is likely incorrect. If, on the other hand, there is a relevant GO term missing in the reference annotation, then there is a chance that the GRC assigned term might be accounting for this missing information. For the purposes of GRC evaluation (see below) incompatible assignments are considered incorrect.</p><fig position="float" id="F3"><label>Figure 3</label><caption><p><bold>Evaluate functional assignment using GO</bold>. Here the term "intracellular part" represents a reference function assigned to the reference gene. The terms "intracellular", "membrane", and "DNA helicase complex" represent possible GRC GO term assignments and their evaluation with respect to the reference term.</p></caption><graphic xlink:href="1471-2105-10-35-3"/></fig><sec><title>Architecture</title><p>GRC is comprised of multiple components, each of which can be used independently from the annotation pipeline (Figure <xref ref-type="fig" rid="F4">4</xref>). GRC_ORFs takes a genomic sequence and finds all ORFs of maximal length. These sequences are redirected to GRC_Translate which translates the nucleic acid sequence into amino acid based on the translation table specified. Using the translated sequences as queries, FSA-BLAST performs a sequence similarity search against a user-specified database in order to identify conserved sequences and provide putative functions. GRC_Annotate takes BLAST results, and adjusts starts, assigns function, and gives putative protein coding genes as its output.</p><fig position="float" id="F4"><label>Figure 4</label><caption><p><bold>GRC pipeline</bold>. Internal pipeline for GRC. Maximal ORFs are found and translated. FSA-BLAST is run using the user specified database and the resulting alignments are used to call and annotate protein coding genes.</p></caption><graphic xlink:href="1471-2105-10-35-4"/></fig><p>The algorithms comprising the GRC are implemented in C++ and Perl. The source code is available to download under the GNU license and comes packaged with precompiled binaries on an Intel &#x000d7;86 Linux machine. Running the software requires only that the user have standard installations of g++, Perl, and Make on a Linux operating system.</p><p>We provide an additional component that can be used to easily evaluate the performance and decisions made by the GRC. GRC_Compare takes as input the output from GRC_Annotate and a reference annotation for the genome annotated. It provides an evaluation of the gene finding as well as functional assignment.</p><p>The GRC is run from the command prompt. Annotating a genome is as simple as specifying the files that contain the genomic sequence and the functionally characterized sequences from one or a number (set) of closely related organisms. We support several major formats from both NCBI and EMBL.</p><p>Example for running the GRC:</p><p>GRCv1.0.pl -g Genome.fna -d DatabaseDirectory</p><p>Because the GRC can take advantage of multiple sequence alignments in gene finding, determining start site position, and making functional assignments, the user also has the option to specify the number of top BLAST hits to use.</p><p>The output provided by the GRC increases with the amount of information provided by the user. At base level GRC provides both a list of putative protein coding genes and a list of ORFs, generated by GRC ORFs, hypothesized not to be protein coding. These lists provide the following for each ORF:</p><p>1. Highest scoring alignment values.</p><p>2. Entropy distance ratio for the sequence.</p><p>3. Assigned functions and associated confidence values.</p><p>4. Gene coordinate information.</p><p>This level of output requires only the genomic sequence and FASTA-formatted amino acid sequences for the annotation database. In this case, the functions assigned are merely the plain text descriptions obtained from FASTA headers. If the user provides additional functional information in the form of GO annotations, these will be combined with the sequence information to provide GO term assignment.</p></sec></sec></sec><sec><title>Results and discussion</title><p>We test the performance of the GRC using leave-one-out genome annotation. For a group of related organisms, all with pre-existing annotations, each organism is annotated by the GRC using the sequences and functional descriptions from the rest of the group. Performance information is then generated using GRC_Compare to compare the GRC's annotation to that of the target organism.</p><p>In gene finding it is common practice to specify a minimum gene length [<xref ref-type="bibr" rid="B1">1</xref>,<xref ref-type="bibr" rid="B2">2</xref>,<xref ref-type="bibr" rid="B35">35</xref>]. Any sequences under this minimum are ignored. As the minimum gene length decreases more candidate sequences are generated from a linear scan of the genome. This increased number of sequences results in increased computation time and a higher degree of difficulty in choosing which are actually protein coding genes. Gene finding results were generated over a range of minimum gene lengths (100&#x02013;300 bp) at 50 bp increments. All sequences and gene coordinate information were obtained from NCBI's RefSeq repository [<xref ref-type="bibr" rid="B36">36</xref>].</p><p>For each annotation the GRC was set using the following parameters:</p><p>&#x02022; Number of BLAST hits to use per query = 10</p><p>&#x02022; BLAST e-value threshold = .001</p><p>&#x02022; Effective BLAST database size = 2879860 (char.)</p><p>&#x02022; BLAST scoring matrix = BLOSUM62</p><p>To provide a frame of reference, we compare the GRC's performance to the popular gene finding program Glimmer v3.02 [<xref ref-type="bibr" rid="B1">1</xref>]. Glimmer was tested using the same procedure and reference files as the GRC. It should be noted for this comparison that many of the prokaryotic annotations in the Refseq repository may have been generated using Glimmer. Indeed RefSeq even provides Glimmer output files for various organisms. Glimmer was run using its iterated procedure in which it uses the sequences from the first run to create a training set for the second run. This also allows the Glimmer method to build a position weight matrix for the ribosomal binding sites and for the estimation of start-codon usage in the genome. For each run of Glimmer the default parameters were used. Only the minimum gene finding length was changed.</p><p>Glimmer parameters:</p><p>&#x02022; Maximum overlap = 50</p><p>&#x02022; Score threshold &#x02265; 30</p><p>In order to test functional assignment, we use Gene Ontology terms. The GO annotations are used as both database functions to be assigned and as reference functions. Currently, there are relatively few well curated GO annotations for multiple closely related organisms. We obtain each organism's GO annotation from EMBL's Intergr8 project [<xref ref-type="bibr" rid="B33">33</xref>]. These GO annotations are created through "a mixture of manual curation, and automatic inference from other annotations such as InterPro hits, UniProt keywords, and Enzyme Commission classification [<xref ref-type="bibr" rid="B33">33</xref>]." In testing functional assignment, we performed annotations using a minimum gene length of 300 bp.</p><sec><title>Test cases</title><p>We test the GRC on three groups of bacteria with varying levels of relatedness. Group 1 is composed of different strains of the species <italic>E. coli</italic>, Group 2 from members of the genus <italic>Pseudomonas</italic>, and Group 3 from members from the class <italic>Gammaproteobacteria </italic>(Table <xref ref-type="table" rid="T1">1</xref>). In terms of the tree of life, both groups 1 and 2 are fairly specific and represent an availability of closely related sequences which may be lacking in some newly sequenced genomes. In all three groups we use only the primary replicon for testing the annotation capability of GRC.</p><table-wrap position="float" id="T1"><label>Table 1</label><caption><p>Test groups.</p></caption><table frame="hsides" rules="groups"><thead><tr><td align="left"><bold>Organism</bold></td><td align="left"><bold>Organism AC</bold></td><td align="center"><bold>ID</bold></td><td align="center"><bold>Replicon Size (Mbp)</bold></td></tr></thead><tbody><tr><td align="left"><bold>Group 1 </bold>(E. coli)</td><td></td><td></td><td></td></tr><tr><td align="left"><italic>Escherichia coli </italic>CFT073</td><td align="left">NC_004431.1</td><td align="center">CFT073</td><td align="center">5.23</td></tr><tr><td align="left"><italic>Escherichia coli </italic>O157 H7 EDL933</td><td align="left">NC_009801.1</td><td align="center">H7EDL933</td><td align="center">5.62</td></tr><tr><td align="left"><italic>Escherichia coli </italic>O157 H7 str. Sakai</td><td align="left">NC_002695.1</td><td align="center">H7Sakai</td><td align="center">5.56</td></tr><tr><td align="left"><italic>Escherichia coli </italic>str. K12 substr. W3110</td><td align="left">AC_000091.1</td><td align="center">W3110</td><td align="center">4.71</td></tr><tr><td align="left"><italic>Escherichia coli </italic>UTI89</td><td align="left">NC_007946.1</td><td align="center">UTI89</td><td align="center">5.14</td></tr><tr><td align="left"><italic>Escherichia coli </italic>APEC O1</td><td align="left">NC_008563.1</td><td align="center">APEC01</td><td align="center">5.15</td></tr><tr><td colspan="4"><hr></hr></td></tr><tr><td align="left"><bold>Group 2 </bold>(Pseudo.)</td><td></td><td></td><td></td></tr><tr><td align="left"><italic>Pseudomonas aeruginosa </italic>PAO1</td><td align="left">NC_002516.2</td><td align="center">aerPAO1</td><td align="center">6.35</td></tr><tr><td align="left"><italic>Pseudomonas entomophila </italic>L48</td><td align="left">NC_008027.1</td><td align="center">entL48</td><td align="center">5.97</td></tr><tr><td align="left"><italic>Pseudomonas fluorescens </italic>Pf5</td><td align="left">NC_004129.6</td><td align="center">fluPf5</td><td align="center">7.17</td></tr><tr><td align="left"><italic>Pseudomonas fluorescens </italic>PfO1</td><td align="left">NC_007492.1</td><td align="center">fluPfO1</td><td align="center">6.53</td></tr><tr><td align="left"><italic>Pseudomonas syringae </italic>pv. phaseolicola 1448A</td><td align="left">NC_005773.3</td><td align="center">pha1448a</td><td align="center">6.01</td></tr><tr><td align="left"><italic>Pseudomonas putida </italic>KT2440</td><td align="left">NC_002947.3</td><td align="center">puKT2440</td><td align="center">6.27</td></tr><tr><td align="left"><italic>Pseudomonas syringae </italic>pv. syringae B728a</td><td align="left">NC_007005.1</td><td align="center">syrB728a</td><td align="center">6.18</td></tr><tr><td align="left"><italic>Pseudomonas syringae </italic>pv. tomato str. DC3000</td><td align="left">NC_004578.1</td><td align="center">syrDC3000</td><td align="center">6.49</td></tr><tr><td colspan="4"><hr></hr></td></tr><tr><td align="left"><bold>Group 3 </bold>(Gamma.)</td><td></td><td></td><td></td></tr><tr><td align="left"><italic>Escherichia coli</italic>i str. K12 substr. W3110</td><td align="left">AC_000091.1</td><td align="center">W3110</td><td align="center">4.65</td></tr><tr><td align="left"><italic>Haemophilus influenzae </italic>Rd KW20</td><td align="left">NC_000907.1</td><td align="center">KW20</td><td align="center">1.86</td></tr><tr><td align="left"><italic>Vibrio cholerae </italic>O1 biovar eltor str. N16961</td><td align="left">NC_002505.1</td><td align="center">N16961</td><td align="center">3</td></tr><tr><td align="left"><italic>Pseudomonas aeruginosa </italic>PAO1</td><td align="left">NC_002516.2</td><td align="center">aerPAO1</td><td align="center">6.35</td></tr><tr><td align="left"><italic>Coxiella burnetii </italic>RSA 493</td><td align="left">NC_010117.1</td><td align="center">RSA493</td><td align="center">2.03</td></tr><tr><td align="left"><italic>Yersinia pestis </italic>CO92</td><td align="left">NC_003143.1</td><td align="center">CO92</td><td align="center">4.72</td></tr></tbody></table><table-wrap-foot><p>Test groups for leave-one-out genome annotation. There is a gradation in phylogenetic distance, from closest in the E. coli group to the most distant in the Gamma group.</p></table-wrap-foot></table-wrap></sec><sec><title>Performance</title><p>Using leave-one-out annotation, we test gene finding at minimum gene lengths of 100, 150, 200, 250, and 300 bases. For both the <italic>E. coli </italic>and <italic>Pseudomonas </italic>groups GRC performs well with respect to the reference files, having average values in the 0.95 &#x02013; 0.99 range for both sensitivity and precision (Figure <xref ref-type="fig" rid="F5">5</xref>). Relative to Glimmer, GRC typically performs within a 2 percent margin for the sensitivity and precision measurements in the first two target groups. As seen in Figure <xref ref-type="fig" rid="F5">5</xref>, GRC tends to be more precise than Glimmer at shorter minimum lengths, but with slightly lower sensitivity. GRC is also able to consistently perform well with respect to determining the correct start site (Figure <xref ref-type="fig" rid="F6">6</xref>). GRC places heavy emphasis on sequence similarity information. As expected the precision and sensitivity with which genes are predicted, and start sites are determined, decreases as the phylogenetic distance between each member of the group increases. Although the <italic>Gamma </italic>group was distantly inter-related, GRC was able to achieve precision and sensitivity in the ninetieth percentile for the majority of the annotations. It is assumed that performance will continue to decrease, similar to many similarity based methods, as the relationships between the target sequences and those in the annotation database grow more distant. Great care should be taken when choosing the organisms and annotations that will make up the annotation database. Any comparison of GRC to an <italic>ab initio </italic>gene finder can be deemed inappropriate since GRC takes advantage of prior knowledge in making its predictions. In this case we simply wish to demonstrate the viability of a similarity based genome annotation and that GRC, despite being an explorative annotation tool, has the ability to perform satisfactory gene finding for a variety of organisms.</p><fig position="float" id="F5"><label>Figure 5</label><caption><p><bold>Gene finding performance</bold>. Performance of gene finding at increasing minimum gene length in comparison to Glimmer. Precision and Sensitivity tends to increase for each organism as the minimum gene length is increased. Lengths are 100, 150, 200, 250, and 300 bp. Panels a, b, c show the data with identical scaling. Panels d, e, f show details of Glimmer comparison for the E. coli, Pseudo, and Gamma groups. Note: The symbols for panels a, b, c match the symbols and legends of their detailed counterparts.</p></caption><graphic xlink:href="1471-2105-10-35-5"/></fig><fig position="float" id="F6"><label>Figure 6</label><caption><p><bold>Start site determination</bold>. Performance of gene finding at increasing minimum gene length with respect to the fraction of TP with correct start sites (Start Precision) and Sensitivity. Panels a, b, c show the data with identical scaling. Panels d, e, f show details of Glimmer comparison for the E. coli, Pseudo, and Gamma groups. Note: The symbols for panels a, b, c match the symbols and legends of their detailed counterparts.</p></caption><graphic xlink:href="1471-2105-10-35-6"/></fig><p>Regarding the results presented in Figure <xref ref-type="fig" rid="F5">5</xref> it is important to note the following. As stated above, for the purposes of this evaluation (sensitivity measurement) we have not counted as false negatives the reference genes that are shorter than the minimum gene length. Note that the lowest threshold (100 bp) means protein sequences as short as 33 aa. Very few bona fide bacterial genes are shorter than that. In our tests, we verified that the <italic>E. coli </italic>group has on average 14.2 genes shorter than 100 bp, the <italic>Pseudomonas </italic>group has 8.2, and the Gamma group has 15.2. The precision results in turn are affected by our concept of No Reference Positives (NRPs). If the NRPs were not taken as False Positives our precision results would be better than those shown in Figure <xref ref-type="fig" rid="F5">5</xref>. As examples, using 100 bp as minimum gene length, and for the genome <italic>E. coli </italic>W3110 the count of NRPs is 240; for the genome <italic>P. syringae </italic>pv. <italic>tomato </italic>strain DC3000 the count of NRPs is 432 (a full account of these numbers can be found in the supplementary material: see Additional file <xref ref-type="supplementary-material" rid="S1">1</xref>).</p><p>Given the functional assignment performance evaluation method we have established using GO terms, there are two ways to measure the quality of a GRC annotation. One is to compare the fraction of ORFs that have functions correctly assigned (confirmed) versus the fraction that have functions that could be incorrect (incompatible). The other is to look at the total number of terms correctly assigned. Figure <xref ref-type="fig" rid="F7">7</xref> shows that the average fraction of ORFs with correctly assigned functions is far greater than the fraction that may have incorrect assignments. Because a single ORF can have multiple GO terms, there may be TP ORFs that are counted as having confirmed, compatible, and incompatible term assignments.</p><fig position="float" id="F7"><label>Figure 7</label><caption><p><bold>Performance on functional assignment</bold>. Columns show the average fraction of true positive ORFs with confirmed, compatible, and incompatible term assignments. These fractions are not additive since a TP can have a confirmed, compatible, and incompatible term assignment.</p></caption><graphic xlink:href="1471-2105-10-35-7"/></fig><p>Table <xref ref-type="table" rid="T2">2</xref> shows the total number of confirmed, compatible, and incompatible terms for each organism for the TPs that are verifiable. Again a TP is labelled verifiable if both the GRC-ORF and its corresponding reference ORF have GO terms from the same category. This table also shows the average depth and distance for confirmed and compatible terms. The depth of a term is calculated as the minimum number of edges, over all paths, required to traverse from the root to the target term. We count the molecular function, biological process, and cellular component nodes as having depth zero. The distance is calculated as the minimum number of edges, over all paths, required to traverse from the most specific GO term in the reference to the target term.</p><table-wrap position="float" id="T2"><label>Table 2</label><caption><p>Functional prediction performance (per gene).</p></caption><table frame="hsides" rules="groups"><thead><tr><td align="left"><bold>Group</bold></td><td align="left"><bold>ID</bold></td><td align="center"><bold>Conf.</bold></td><td align="center"><bold>Comp.</bold></td><td align="center"><bold>Incomp.</bold></td><td align="center"><bold>Conf. Depth</bold></td><td align="center"><bold>Conf. Dist.</bold></td><td align="center"><bold>Comp. Depth</bold></td><td align="center"><bold>Comp. Dist.</bold></td></tr></thead><tbody><tr><td align="left">E. coli</td><td align="left">APEC01</td><td align="center">13278</td><td align="center">660</td><td align="center">485</td><td align="center">3.77</td><td align="center">0.09</td><td align="center">4.9</td><td align="center">2.49</td></tr><tr><td></td><td align="left">CFT073</td><td align="center">13580</td><td align="center">145</td><td align="center">208</td><td align="center">3.8</td><td align="center">0.02</td><td align="center">4.53</td><td align="center">2.32</td></tr><tr><td></td><td align="left">H7EDL933</td><td align="center">14731</td><td align="center">52</td><td align="center">66</td><td align="center">3.83</td><td align="center">0.01</td><td align="center">4.65</td><td align="center">2.29</td></tr><tr><td></td><td align="left">H7Sakai</td><td align="center">14694</td><td align="center">80</td><td align="center">84</td><td align="center">3.83</td><td align="center">0.01</td><td align="center">4.61</td><td align="center">2.09</td></tr><tr><td></td><td align="left">UTI89Min</td><td align="center">13158</td><td align="center">118</td><td align="center">146</td><td align="center">3.8</td><td align="center">0.02</td><td align="center">4.74</td><td align="center">2.31</td></tr><tr><td></td><td align="left">W3110Min</td><td align="center">13855</td><td align="center">60</td><td align="center">67</td><td align="center">3.84</td><td align="center">0.01</td><td align="center">4.58</td><td align="center">2.6</td></tr><tr><td align="left">Pseudo.</td><td align="left">aerPAO1</td><td align="center">12704</td><td align="center">303</td><td align="center">420</td><td align="center">3.8</td><td align="center">0.06</td><td align="center">4.15</td><td align="center">2.21</td></tr><tr><td></td><td align="left">entL48</td><td align="center">10616</td><td align="center">482</td><td align="center">1092</td><td align="center">3.77</td><td align="center">0.16</td><td align="center">4.78</td><td align="center">2.39</td></tr><tr><td></td><td align="left">fluPf5</td><td align="center">14101</td><td align="center">201</td><td align="center">371</td><td align="center">3.8</td><td align="center">0.02</td><td align="center">4.02</td><td align="center">2.03</td></tr><tr><td></td><td align="left">fluPfO1</td><td align="center">13210</td><td align="center">275</td><td align="center">441</td><td align="center">3.78</td><td align="center">0.05</td><td align="center">4.44</td><td align="center">2.34</td></tr><tr><td></td><td align="left">pha1448A</td><td align="center">11714</td><td align="center">167</td><td align="center">312</td><td align="center">3.83</td><td align="center">0.02</td><td align="center">4.65</td><td align="center">2.41</td></tr><tr><td></td><td align="left">puKT2440</td><td align="center">10838</td><td align="center">341</td><td align="center">330</td><td align="center">3.81</td><td align="center">0.08</td><td align="center">4.65</td><td align="center">2.37</td></tr><tr><td></td><td align="left">syrB728a</td><td align="center">12167</td><td align="center">259</td><td align="center">254</td><td align="center">3.79</td><td align="center">0.04</td><td align="center">4.51</td><td align="center">2.46</td></tr><tr><td></td><td align="left">syrDC3000</td><td align="center">12002</td><td align="center">254</td><td align="center">253</td><td align="center">3.8</td><td align="center">0.05</td><td align="center">4.59</td><td align="center">2.43</td></tr><tr><td align="left">Gamma.</td><td align="left">aerPAO1</td><td align="center">12631</td><td align="center">1344</td><td align="center">1913</td><td align="center">3.75</td><td align="center">0.22</td><td align="center">4.52</td><td align="center">2.26</td></tr><tr><td></td><td align="left">CO92</td><td align="center">11742</td><td align="center">770</td><td align="center">1185</td><td align="center">3.85</td><td align="center">0.09</td><td align="center">4.66</td><td align="center">2.25</td></tr><tr><td></td><td align="left">KW20</td><td align="center">6732</td><td align="center">132</td><td align="center">321</td><td align="center">3.95</td><td align="center">0.03</td><td align="center">4.66</td><td align="center">2.47</td></tr><tr><td></td><td align="left">N16961</td><td align="center">8165</td><td align="center">374</td><td align="center">616</td><td align="center">3.9</td><td align="center">0.08</td><td align="center">4.82</td><td align="center">2.4</td></tr><tr><td></td><td align="left">RSA493</td><td align="center">4036</td><td align="center">282</td><td align="center">335</td><td align="center">3.9</td><td align="center">0.1</td><td align="center">4.77</td><td align="center">2.58</td></tr><tr><td></td><td align="left">W3110</td><td align="center">12913</td><td align="center">271</td><td align="center">302</td><td align="center">3.84</td><td align="center">0.03</td><td align="center">4.81</td><td align="center">2.54</td></tr></tbody></table><table-wrap-foot><p>Number of terms for each GO evaluation classifier. Only TP ORFs that have "verifiable" terms can be evaluated. Depth and distance are averaged over all term assignments for each organism.</p></table-wrap-foot></table-wrap><p>It is possible for a confirmed or compatible annotation to be trivial in that the term assigned has no functional specificity <italic>e.g. assign the molecular function term</italic>. The depth and distance information in Table <xref ref-type="table" rid="T2">2</xref> shows that for the majority of term assignments this is not the case. As the phylogenetic relationships of an annotation group grow more distant the number of verifiable terms and confirmed terms decreases. Full tables of all GO analysis statistics can be found in the supplementary material (see Additional file <xref ref-type="supplementary-material" rid="S1">1</xref>).</p><p>Term assignments labelled incompatible do not necessarily mean the assignment is incorrect. For instance, in the annotation of <italic>Pseudomonas </italic>pha1448a, a protein known to be part of tryptophan synthesis (EMBL Accession = <ext-link ext-link-type="gen" xlink:href="Q48QG6">Q48QG6</ext-link>) was assigned the term GO:0008652 by GRC. This is a biological process term defined as "amino acid biosynthetic process." Because protein <ext-link ext-link-type="gen" xlink:href="Q48QG6">Q48QG6</ext-link> was already assigned a biological process term for tryptophan metabolic process (GO:0006568) in the reference annotation, and that term was neither an ancestor nor child of the one assigned by GRC, the assignment was labelled incompatible. Also interesting to note, is that the number of compatible annotations increases as the groups become more distantly related. These annotations could be improvements on the current annotation but are also likely to include some incorrect functional assignments.</p><p>With a carefully selected annotation database the user can annotate a genome of interest in a few hours. The main bottleneck in the annotation procedure of GRC is the sequence similarity comparison. BLAST is known to scale in proportion to the product of the lengths of the query sequence and the database searched [<xref ref-type="bibr" rid="B37">37</xref>]. In Figure <xref ref-type="fig" rid="F8">8</xref> we show the total run time of the GRC in relation to the product of the total query and database sequence lengths for each organism across all test groups and minimum lengths. The average total running time for all non-BLAST components of the GRC is 50 seconds with a standard deviation of 15 seconds. The total run time for non-BLAST components scales according to the amount of information available for each organism, e.g., the number of ORFs and the number of alignments. All times were obtained on a desktop computer with a 2.8 GHz processor and 1 GB of RAM.</p><fig position="float" id="F8"><label>Figure 8</label><caption><p><bold>Running time</bold>. Total running time of GRC versus the total search space (product of total query and DB length). The main bottleneck for GRC is BLAST.</p></caption><graphic xlink:href="1471-2105-10-35-8"/></fig><p>As noted in the introduction, there exist genome annotation services available, most notably RAST [<xref ref-type="bibr" rid="B11">11</xref>]. Although the goals of these services and those of GRC are essentially the same (generate an automated genome annotation) the approaches adopted are quite different. Annotation services are centralized whereas GRC is a tool to be used locally and even tuned in different ways by different users. In spite of these differences we provide a comparison of the annotation results of GRC to those of RAST for <italic>Escherichia coli </italic>str. K12 substr. W3110 and <italic>Pseudomonas syringae </italic>pv. tomato str. DC3000. In Table <xref ref-type="table" rid="T3">3</xref> we show the performance of RAST compared to GRC for making gene calls. We also provide a comparison of the GO terms given in the RAST annotation to that of GRC (Table <xref ref-type="table" rid="T4">4</xref>). The performance of RAST is determined by using files from EMBL's Integr8 project [<xref ref-type="bibr" rid="B33">33</xref>]. Although the primary form of annotation for RAST is not Gene Ontology terms, we demonstrate that the system we have established can be used to characterize the state of functional annotations on a genomic scale beyond simply listing the differences that exist. We also take the opportunity to note that the results presented above show that GRC can run in a matter of a few hours on a standard desktop computer, whereas RAST takes anywhere from one day to three days.</p><table-wrap position="float" id="T3"><label>Table 3</label><caption><p>Comparison of gene calls for RAST and GRC.</p></caption><table frame="hsides" rules="groups"><thead><tr><td align="center" colspan="4"><bold>RAST Gene Finding Comparison</bold></td></tr></thead><tbody><tr><td align="left"><bold>ID</bold></td><td align="center"><bold>Precision</bold></td><td align="center"><bold>Sensitivity</bold></td><td align="center"><bold>Start Fraction</bold></td></tr><tr><td colspan="4"><hr></hr></td></tr><tr><td align="left">RAST W3110</td><td align="center">0.98</td><td align="center">0.98</td><td align="center">0.80</td></tr><tr><td align="left">RAST syrDC3000</td><td align="center">0.97</td><td align="center">0.97</td><td align="center">0.92</td></tr><tr><td align="left">GRC W3110</td><td align="center">0.98</td><td align="center">0.98</td><td align="center">0.83</td></tr><tr><td align="left">GRC syrDC3000</td><td align="center">0.94</td><td align="center">0.98</td><td align="center">0.79</td></tr></tbody></table><table-wrap-foot><p>The performance of gene finding for RAST and GRC. The precision, sensitivity, and fraction of gene calls that have correct start sites for <italic>Escherichia coli </italic>str. K12 substr. W3110 and <italic>Pseudomonas syringae </italic>pv. tomato str. DC3000 (for genes &#x0003e; 300 bp).</p></table-wrap-foot></table-wrap><table-wrap position="float" id="T4"><label>Table 4</label><caption><p>Comparison of GO annotations for RAST and GRC.</p></caption><table frame="hsides" rules="groups"><thead><tr><td align="center" colspan="7"><bold>RAST GO-Based Comparison</bold></td></tr></thead><tbody><tr><td align="left"><bold>ID</bold></td><td align="center"><bold>TP-Verifiable</bold></td><td align="center"><bold>Term Confirm.</bold></td><td align="center"><bold>Term Compat.</bold></td><td align="center"><bold>Term Incompat.</bold></td><td align="center"><bold>Avg.Con.Depth</bold></td><td align="center"><bold>Avg.Com.Depth</bold></td></tr><tr><td colspan="7"><hr></hr></td></tr><tr><td align="left">RAST W3110</td><td align="center">1354</td><td align="center">1995</td><td align="center">136</td><td align="center">123</td><td align="center">4.3</td><td align="center">5.21</td></tr><tr><td align="left">RAST syrDC3000</td><td align="center">1225</td><td align="center">1701</td><td align="center">258</td><td align="center">141</td><td align="center">4.18</td><td align="center">5.37</td></tr><tr><td align="left">GRC W3110</td><td align="center">2620</td><td align="center">12913</td><td align="center">271</td><td align="center">302</td><td align="center">3.84</td><td align="center">4.81</td></tr><tr><td align="left">GRC syrDC3000</td><td align="center">2791</td><td align="center">12002</td><td align="center">254</td><td align="center">253</td><td align="center">3.8</td><td align="center">4.59</td></tr></tbody></table><table-wrap-foot><p>The performance in making GO annotations for RAST and GRC. The number of true positives that have GO terms for the reference and the called gene are TP-verifiable. The number of GO terms found to be confirmed, compatible, and incompatible and the average depth for those terms.</p></table-wrap-foot></table-wrap></sec></sec><sec><title>Conclusion</title><p>In GRC we have created a reliable, open-source, annotation tool which can be used for explorative annotation to investigate a genome based on the users interests. By supporting commonly available sequence and annotation formats, we provide a tool that puts very little demand on any user wishing to annotate a prokaryotic genome. GRC synthesizes information from both sequence composition and sequence similarity to minimize the deficiencies inherent in using just one. Using standards from NCBI RefSeq [<xref ref-type="bibr" rid="B36">36</xref>] GRC has demonstrated high precision and sensitivity in gene finding for groups of closely related prokaryotes. GRC's modular design and generic use of sequence similarity information for functional assignment and annotation means that it can be easily adapted to fit within other annotation pipelines. GRC was the automated annotation tool used in the <italic>Pseudomonas syringae </italic>pathovar <italic>tomato </italic>strain T1 genome project [<xref ref-type="bibr" rid="B38">38</xref>]. For this project researchers relied on the fact that GRC can use any user-provided protein sequence database; a custom database of effector protein sequences was used, and this was essential for the project's goals.</p><p>When predicted computationally, gene calls, start coordinates, and assigned functions should be taken as highly tentative until they have been curated and approved by an expert human curator. Predictions made by GRC are no different. Although GRC achieves high performance values with respect to two test groups, these groups are close phylogenetically. As the relationships between the organisms in the database and the target genome become more distant so will the applicability of annotations made by GRC. It should also be re-emphasized that the functional performance metrics were generated using reference functions (from GOA files) that were themselves electronically created. Ideally all reference information used to measure the performance of GRC should be experimentally derived. Because the GRC effectively transfers information from one organism to another, mistakes in database annotations can be propagated into a new annotation created by GRC. The confidence values, alignment information, and many of the other values output by GRC are provided so that the user can evaluate whether a gene call or functional assignment merits further investigation. These values do not provide any kind of guarantee that an <italic>in silico </italic>prediction will be a biological reality.</p><p>Work on GRC is ongoing. We are currently working on the following aspects. <italic>RNA annotation</italic>. RNA genes and features are important pieces of information in any prokaryotic genome. The fact that RNAs are usually well conserved in closely related species should make it relatively easy to include them in GRC annotations, although locating precise boundaries may be difficult. <italic>Better use of user-provided data</italic>. There are two main issues here. The first is the presence of experimentally derived functional assignments; those should be given preference in functional transfer, and are easily detectable in GO annotated genomes by the evidence code. The second is a user-defined special reference genome. It is often the case that among several closely related genomes there is one that is especially well annotated. For example, among <italic>Pseudomonas syringae</italic>, strain DC3000 is by far the best annotated. If users provide such information, GRC can be modified to make use of it and thus produce better annotations. <italic>Metagenomics annotations</italic>. An explorative annotation tool is in theory ideally suited for annotation of metagenomics sequences. In order for GRC to be useful in such a context a user would have to provide a BLAST database that would cover a wide range of prokaryotic species. This is not a simple task, and therefore we are planning to develop techniques that will allow the generation of a reasonably small approximation of a nonredundant and yet comprehensive set of well-annotated prokaryotic proteins.</p></sec><sec><title>Availability and requirements</title><p>Project home page: <ext-link ext-link-type="uri" xlink:href="http://staff.vbi.vt.edu/jcslab/"/></p><p>Operating systems: Linux</p><p>Programming Languages: C++ and Perl Requirements: linux, g++, perl, Make</p><p>License: GNU General Public License. This license allows the source code to be redistributed and/or modified under the terms of the GNU General Public License as published by the Free Software Foundation. The source code for the application is available at no charge.</p><p>Any restrictions to use by non-academics: None</p></sec><sec><title>Authors' contributions</title><p>AW contributed the bulk of the writing for this work, is the main programmer for the project, conceived many of the performance measurement techniques, and various other software features. JS conceived the initial GRC project idea, provided funding and guidance for this work, and has contributed to the interpretation of data and writing of the manuscript. Both AW and JS have read and approved the final manuscript.</p></sec><sec sec-type="supplementary-material"><title>Supplementary Material</title><supplementary-material content-type="local-data" id="S1"><caption><title>Additional file 1</title><p><bold>Supplementary data.</bold> Full performance tables for gene finding and GO analysis for each organism.</p></caption><media xlink:href="1471-2105-10-35-S1.pdf" mimetype="application" mime-subtype="pdf"><caption><p>Click here for file</p></caption></media></supplementary-material></sec></body><back><ack><sec><title>Acknowledgements</title><p>We thank the authors of FSA-BLAST for making a their software freely available. We also thank Chris Lasher, Tsai-Tien Tseng, and Nalvo Franco De Almeida for their valuable feedback.</p></sec></ack><ref-list><ref id="B1"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Delcher</surname><given-names>AL</given-names></name><name><surname>Bratke</surname><given-names>KA</given-names></name><name><surname>Powers</surname><given-names>EC</given-names></name><name><surname>Salzberg</surname><given-names>SL</given-names></name></person-group><article-title>Identifying bacterial genes and endosymbiont DNA with Glimmer</article-title><source>Bioinformatics</source><year>2007</year><volume>23</volume><fpage>673</fpage><lpage>679</lpage><pub-id pub-id-type="pmid">17237039</pub-id><pub-id pub-id-type="doi">10.1093/bioinformatics/btm009</pub-id></citation></ref><ref id="B2"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Lukashin</surname><given-names>AV</given-names></name><name><surname>Borodovsky</surname><given-names>M</given-names></name></person-group><article-title>GeneMark.hmm: new solutions for gene finding</article-title><source>Nucleic Acids Res</source><year>1998</year><volume>26</volume><fpage>1107</fpage><lpage>1115</lpage><pub-id pub-id-type="pmid">9461475</pub-id><pub-id pub-id-type="doi">10.1093/nar/26.4.1107</pub-id></citation></ref><ref id="B3"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Nielsen</surname><given-names>P</given-names></name><name><surname>Krogh</surname><given-names>A</given-names></name></person-group><article-title>Large-scale prokaryotic gene prediction and comparison to genome annotation</article-title><source>Bioinformatics</source><year>2005</year><volume>21</volume><fpage>4322</fpage><lpage>4329</lpage><pub-id pub-id-type="pmid">16249266</pub-id><pub-id pub-id-type="doi">10.1093/bioinformatics/bti701</pub-id></citation></ref><ref id="B4"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Ouyang</surname><given-names>Z</given-names></name><name><surname>Zhu</surname><given-names>H</given-names></name><name><surname>Wang</surname><given-names>J</given-names></name><name><surname>She</surname><given-names>ZS</given-names></name></person-group><article-title>Multivariate entropy distance method for prokaryotic gene identification</article-title><source>J Bioinform Comput Biol</source><year>2004</year><volume>2</volume><fpage>353</fpage><lpage>373</lpage><pub-id pub-id-type="pmid">15297987</pub-id><pub-id pub-id-type="doi">10.1142/S0219720004000624</pub-id></citation></ref><ref id="B5"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Friedberg</surname><given-names>I</given-names></name></person-group><article-title>Automated protein function prediction-the genomic challenge</article-title><source>Brief Bioinform</source><year>2006</year><volume>7</volume><fpage>225</fpage><lpage>242</lpage><pub-id pub-id-type="pmid">16772267</pub-id><pub-id pub-id-type="doi">10.1093/bib/bbl004</pub-id></citation></ref><ref id="B6"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Meyer</surname><given-names>F</given-names></name><name><surname>Goesmann</surname><given-names>A</given-names></name><name><surname>McHardy</surname><given-names>AC</given-names></name><name><surname>Bartels</surname><given-names>D</given-names></name><name><surname>Bekel</surname><given-names>T</given-names></name><name><surname>Clausen</surname><given-names>J</given-names></name><name><surname>Kalinowski</surname><given-names>J</given-names></name><name><surname>Linke</surname><given-names>B</given-names></name><name><surname>Rupp</surname><given-names>O</given-names></name><name><surname>Giegerich</surname><given-names>R</given-names></name><name><surname>Puhler</surname><given-names>A</given-names></name></person-group><article-title>GenDB-an open source genome annotation system for prokaryote genomes</article-title><source>Nucleic Acids Res</source><year>2003</year><volume>31</volume><fpage>2187</fpage><lpage>2195</lpage><pub-id pub-id-type="pmid">12682369</pub-id><pub-id pub-id-type="doi">10.1093/nar/gkg312</pub-id></citation></ref><ref id="B7"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Berriman</surname><given-names>M</given-names></name><name><surname>Rutherford</surname><given-names>K</given-names></name></person-group><article-title>Viewing and annotating sequence data with Artemis</article-title><source>Brief Bioinform</source><year>2003</year><volume>4</volume><fpage>124</fpage><lpage>132</lpage><pub-id pub-id-type="pmid">12846394</pub-id><pub-id pub-id-type="doi">10.1093/bib/4.2.124</pub-id></citation></ref><ref id="B8"><citation citation-type="other"><article-title>Manatee</article-title><ext-link ext-link-type="uri" xlink:href="http://manatee.sourceforge.net"/></citation></ref><ref id="B9"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Overbeek</surname><given-names>R</given-names></name><name><surname>Larsen</surname><given-names>N</given-names></name><name><surname>Walunas</surname><given-names>T</given-names></name><name><surname>D'Souza</surname><given-names>M</given-names></name><name><surname>Pusch</surname><given-names>G</given-names></name><name><surname>Eugene</surname><given-names>SelkovJ</given-names></name><name><surname>Liolios</surname><given-names>K</given-names></name><name><surname>Joukov</surname><given-names>V</given-names></name><name><surname>Kaznadzey</surname><given-names>D</given-names></name><name><surname>Anderson</surname><given-names>I</given-names></name><name><surname>Bhattacharyya</surname><given-names>A</given-names></name><name><surname>Burd</surname><given-names>H</given-names></name><name><surname>Gardner</surname><given-names>W</given-names></name><name><surname>Hanke</surname><given-names>P</given-names></name><name><surname>Kapatral</surname><given-names>V</given-names></name><name><surname>Mikhailova</surname><given-names>N</given-names></name><name><surname>Vasieva</surname><given-names>O</given-names></name><name><surname>Osterman</surname><given-names>A</given-names></name><name><surname>Vonstein</surname><given-names>V</given-names></name><name><surname>Fonstein</surname><given-names>M</given-names></name><name><surname>Ivanova</surname><given-names>N</given-names></name><name><surname>Kyrpides</surname><given-names>N</given-names></name></person-group><article-title>The ERGOTM genome analysis and discovery system</article-title><source>Nucl Acids Res</source><year>2003</year><volume>31</volume><fpage>164</fpage><lpage>171</lpage><pub-id pub-id-type="pmid">12519973</pub-id><pub-id pub-id-type="doi">10.1093/nar/gkg148</pub-id></citation></ref><ref id="B10"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Frishman</surname><given-names>D</given-names></name><name><surname>Albermann</surname><given-names>K</given-names></name><name><surname>Hani</surname><given-names>J</given-names></name><name><surname>Heumann</surname><given-names>K</given-names></name><name><surname>Metanomski</surname><given-names>A</given-names></name><name><surname>Zollner</surname><given-names>A</given-names></name><name><surname>Mewes</surname><given-names>HW</given-names></name></person-group><article-title>Functional and structural genomics using PEDANT</article-title><source>Bioinformatics</source><year>2001</year><volume>17</volume><fpage>44</fpage><lpage>57</lpage><pub-id pub-id-type="pmid">11222261</pub-id><pub-id pub-id-type="doi">10.1093/bioinformatics/17.1.44</pub-id></citation></ref><ref id="B11"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Aziz</surname><given-names>R</given-names></name><name><surname>Bartels</surname><given-names>D</given-names></name><name><surname>Best</surname><given-names>A</given-names></name><name><surname>DeJongh</surname><given-names>M</given-names></name><name><surname>Disz</surname><given-names>T</given-names></name><name><surname>Edwards</surname><given-names>R</given-names></name><name><surname>Formsma</surname><given-names>K</given-names></name><name><surname>Gerdes</surname><given-names>S</given-names></name><name><surname>Glass</surname><given-names>E</given-names></name><name><surname>Kubal</surname><given-names>M</given-names></name><name><surname>Meyer</surname><given-names>F</given-names></name><name><surname>Olsen</surname><given-names>G</given-names></name><name><surname>Olson</surname><given-names>R</given-names></name><name><surname>Osterman</surname><given-names>A</given-names></name><name><surname>Overbeek</surname><given-names>R</given-names></name><name><surname>McNeil</surname><given-names>L</given-names></name><name><surname>Paarmann</surname><given-names>D</given-names></name><name><surname>Paczian</surname><given-names>T</given-names></name><name><surname>Parrello</surname><given-names>B</given-names></name><name><surname>Pusch</surname><given-names>G</given-names></name><name><surname>Reich</surname><given-names>C</given-names></name><name><surname>Stevens</surname><given-names>R</given-names></name><name><surname>Vassieva</surname><given-names>O</given-names></name><name><surname>Vonstein</surname><given-names>V</given-names></name><name><surname>Wilke</surname><given-names>A</given-names></name><name><surname>Zagnitko</surname><given-names>O</given-names></name></person-group><article-title>The RAST Server: Rapid Annotations using Subsystems Technology</article-title><source>BMC Genomics</source><year>2008</year><volume>9</volume><fpage>75</fpage><pub-id pub-id-type="pmid">18261238</pub-id><pub-id pub-id-type="doi">10.1186/1471-2164-9-75</pub-id></citation></ref><ref id="B12"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Van Domselaar</surname><given-names>GH</given-names></name><name><surname>Stothard</surname><given-names>P</given-names></name><name><surname>Shrivastava</surname><given-names>S</given-names></name><name><surname>Cruz</surname><given-names>JA</given-names></name><name><surname>Guo</surname><given-names>A</given-names></name><name><surname>Dong</surname><given-names>X</given-names></name><name><surname>Lu</surname><given-names>P</given-names></name><name><surname>Szafron</surname><given-names>D</given-names></name><name><surname>Greiner</surname><given-names>R</given-names></name><name><surname>Wishart</surname><given-names>DS</given-names></name></person-group><article-title>BASys: a web server for automated bacterial genome annotation</article-title><source>Nucleic Acids Res</source><year>2005</year><volume>33</volume><fpage>W455</fpage><lpage>W459</lpage><pub-id pub-id-type="pmid">15980511</pub-id><pub-id pub-id-type="pmid">15980511</pub-id><pub-id pub-id-type="doi">10.1093/nar/gki593</pub-id></citation></ref><ref id="B13"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Bryson</surname><given-names>K</given-names></name><name><surname>Loux</surname><given-names>V</given-names></name><name><surname>Bossy</surname><given-names>R</given-names></name><name><surname>Nicolas</surname><given-names>P</given-names></name><name><surname>Chaillou</surname><given-names>S</given-names></name><name><surname>Guchte</surname><given-names>M van de</given-names></name><name><surname>Penaud</surname><given-names>S</given-names></name><name><surname>Maguin</surname><given-names>E</given-names></name><name><surname>Hoebeke</surname><given-names>M</given-names></name><name><surname>Bessieres</surname><given-names>P</given-names></name><name><surname>Gibrat</surname><given-names>JF</given-names></name></person-group><article-title>AGMIAL: implementing an annotation strategy for prokaryote genomes as a distributed system</article-title><source>Nucl Acids Res</source><year>2006</year><volume>34</volume><fpage>3533</fpage><lpage>3545</lpage><pub-id pub-id-type="pmid">16855290</pub-id><pub-id pub-id-type="doi">10.1093/nar/gkl471</pub-id></citation></ref><ref id="B14"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Moriya</surname><given-names>Y</given-names></name><name><surname>Itoh</surname><given-names>M</given-names></name><name><surname>Okuda</surname><given-names>S</given-names></name><name><surname>Yoshizawa</surname><given-names>AC</given-names></name><name><surname>Kanehisa</surname><given-names>M</given-names></name></person-group><article-title>KAAS: an automatic genome annotation and pathway reconstruction server</article-title><source>Nucleic Acids Res</source><year>2007</year><volume>35</volume><fpage>W182</fpage><lpage>W185</lpage><pub-id pub-id-type="pmid">17526522</pub-id><pub-id pub-id-type="pmid">17526522</pub-id><pub-id pub-id-type="doi">10.1093/nar/gkm321</pub-id></citation></ref><ref id="B15"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Vallenet</surname><given-names>D</given-names></name><name><surname>Labarre</surname><given-names>L</given-names></name><name><surname>Rouy</surname><given-names>Z</given-names></name><name><surname>Barbe</surname><given-names>V</given-names></name><name><surname>Bocs</surname><given-names>S</given-names></name><name><surname>Cruveiller</surname><given-names>S</given-names></name><name><surname>Lajus</surname><given-names>A</given-names></name><name><surname>Pascal</surname><given-names>G</given-names></name><name><surname>Scarpelli</surname><given-names>C</given-names></name><name><surname>Medigue</surname><given-names>C</given-names></name></person-group><article-title>MaGe: a microbial genome annotation system supported by synteny results</article-title><source>Nucl Acids Res</source><year>2006</year><volume>34</volume><fpage>53</fpage><lpage>65</lpage><pub-id pub-id-type="pmid">16407324</pub-id><pub-id pub-id-type="doi">10.1093/nar/gkj406</pub-id></citation></ref><ref id="B16"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Brenner</surname><given-names>SE</given-names></name></person-group><article-title>Errors in genome annotation</article-title><source>Trends Genet</source><year>1999</year><volume>15</volume><fpage>132</fpage><lpage>133</lpage><pub-id pub-id-type="pmid">10203816</pub-id><pub-id pub-id-type="doi">10.1016/S0168-9525(99)01706-0</pub-id></citation></ref><ref id="B17"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Ashburner</surname><given-names>M</given-names></name><name><surname>Ball</surname><given-names>CA</given-names></name><name><surname>Blake</surname><given-names>JA</given-names></name><name><surname>Botstein</surname><given-names>D</given-names></name><name><surname>Butler</surname><given-names>H</given-names></name><name><surname>Cherry</surname><given-names>JM</given-names></name><name><surname>Davis</surname><given-names>AP</given-names></name><name><surname>Dolinski</surname><given-names>K</given-names></name><name><surname>Dwight</surname><given-names>SS</given-names></name><name><surname>Eppig</surname><given-names>JT</given-names></name><name><surname>Harris</surname><given-names>MA</given-names></name><name><surname>Hill</surname><given-names>DP</given-names></name><name><surname>Issel-Tarver</surname><given-names>L</given-names></name><name><surname>Kasarskis</surname><given-names>A</given-names></name><name><surname>Lewis</surname><given-names>S</given-names></name><name><surname>Matese</surname><given-names>JC</given-names></name><name><surname>Richardson</surname><given-names>JE</given-names></name><name><surname>Ringwald</surname><given-names>M</given-names></name><name><surname>Rubin</surname><given-names>GM</given-names></name><name><surname>Sherlock</surname><given-names>G</given-names></name></person-group><article-title>Gene ontology: tool for the unification of biology. The Gene Ontology Consortium</article-title><source>Nat Genet</source><year>2000</year><volume>25</volume><fpage>25</fpage><lpage>29</lpage><pub-id pub-id-type="pmid">10802651</pub-id><pub-id pub-id-type="doi">10.1038/75556</pub-id></citation></ref><ref id="B18"><citation citation-type="other"><person-group person-group-type="author"><collab>Joint Genome Institute</collab></person-group><article-title>A Genomic Encyclopedia of Bacteria and Archaea (GEBA)</article-title><ext-link ext-link-type="uri" xlink:href="http://www.jgi.doe.gov/programs/GEBA/index.html"/></citation></ref><ref id="B19"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Cameron</surname><given-names>M</given-names></name><name><surname>Williams</surname><given-names>HE</given-names></name><name><surname>Cannane</surname><given-names>A</given-names></name></person-group><article-title>A deterministic finite automaton for faster protein hit detection in BLAST</article-title><source>J Comput Biol</source><year>2006</year><volume>13</volume><fpage>965</fpage><lpage>978</lpage><pub-id pub-id-type="pmid">16761921</pub-id><pub-id pub-id-type="doi">10.1089/cmb.2006.13.965</pub-id></citation></ref><ref id="B20"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Zhu</surname><given-names>H</given-names></name><name><surname>Hu</surname><given-names>GQ</given-names></name><name><surname>Yang</surname><given-names>YF</given-names></name><name><surname>Wang</surname><given-names>J</given-names></name><name><surname>She</surname><given-names>ZS</given-names></name></person-group><article-title>MED: a new non-supervised gene prediction algorithm for bacterial and archaeal genomes</article-title><source>BMC Bioinformatics</source><year>2007</year><volume>8</volume><fpage>97</fpage><pub-id pub-id-type="pmid">17367537</pub-id><pub-id pub-id-type="doi">10.1186/1471-2105-8-97</pub-id></citation></ref><ref id="B21"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Sloane</surname><given-names>NJA</given-names></name><name><surname>Wyner</surname><given-names>AD</given-names></name></person-group><source>Claude Elwood Shannon: Collected Papers</source><year>1993</year><publisher-name>Piscataway, NJ: IEEE Press</publisher-name></citation></ref><ref id="B22"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Rudd</surname><given-names>KE</given-names></name></person-group><article-title>EcoGene: a genome sequence database for Escherichia coli K-12</article-title><source>Nucl Acids Res</source><year>2000</year><volume>28</volume><fpage>60</fpage><lpage>64</lpage><pub-id pub-id-type="pmid">10592181</pub-id><pub-id pub-id-type="doi">10.1093/nar/28.1.60</pub-id></citation></ref><ref id="B23"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Yada</surname><given-names>T</given-names></name><name><surname>Totoki</surname><given-names>Y</given-names></name><name><surname>Takagi</surname><given-names>T</given-names></name><name><surname>Nakai</surname><given-names>K</given-names></name></person-group><article-title>A Novel Bacterial Gene-Finding System with Improved Accuracy in Locating Start Codons</article-title><source>DNA Res</source><year>2001</year><volume>8</volume><fpage>97</fpage><lpage>106</lpage><pub-id pub-id-type="pmid">11475327</pub-id><pub-id pub-id-type="doi">10.1093/dnares/8.3.97</pub-id></citation></ref><ref id="B24"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Makita</surname><given-names>Y</given-names></name><name><surname>de Hoon</surname><given-names>MJ</given-names></name><name><surname>Danchin</surname><given-names>A</given-names></name></person-group><article-title>Hon-yaku: a biology-driven Bayesian methodology for identifying translation initiation sites in prokaryotes</article-title><source>BMC Bioinformatics</source><year>2007</year><volume>8</volume><fpage>47</fpage><pub-id pub-id-type="pmid">17286872</pub-id><pub-id pub-id-type="doi">10.1186/1471-2105-8-47</pub-id></citation></ref><ref id="B25"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Skovgaard</surname><given-names>M</given-names></name><name><surname>Jensen</surname><given-names>LJ</given-names></name><name><surname>Brunak</surname><given-names>S</given-names></name><name><surname>Ussery</surname><given-names>D</given-names></name><name><surname>Krogh</surname><given-names>A</given-names></name></person-group><article-title>On the total number of genes and their length distribution in complete microbial genomes</article-title><source>Trends in Genetics</source><year>2001</year><volume>17</volume><fpage>425</fpage><lpage>428</lpage><pub-id pub-id-type="pmid">11485798</pub-id><pub-id pub-id-type="doi">10.1016/S0168-9525(01)02372-1</pub-id></citation></ref><ref id="B26"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Veloso</surname><given-names>F</given-names></name><name><surname>Riadi</surname><given-names>G</given-names></name><name><surname>Aliaga</surname><given-names>D</given-names></name><name><surname>Lieph</surname><given-names>R</given-names></name><name><surname>Holmes</surname><given-names>DS</given-names></name></person-group><article-title>Large-scale, multi-genome analysis of alternate open reading frames in bacteria and archaea</article-title><source>OMICS</source><year>2005</year><volume>9</volume><fpage>91</fpage><lpage>105</lpage><pub-id pub-id-type="pmid">15805780</pub-id><pub-id pub-id-type="doi">10.1089/omi.2005.9.91</pub-id></citation></ref><ref id="B27"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Behrens</surname><given-names>M</given-names></name><name><surname>Sheikh</surname><given-names>J</given-names></name><name><surname>Nataro</surname><given-names>JP</given-names></name></person-group><article-title>Regulation of the overlapping pic/set locus in Shigella flexneri and enteroaggregative Escherichia coli</article-title><source>Infect Immun</source><year>2002</year><volume>70</volume><fpage>2915</fpage><lpage>2925</lpage><pub-id pub-id-type="pmid">12010980</pub-id><pub-id pub-id-type="doi">10.1128/IAI.70.6.2915-2925.2002</pub-id></citation></ref><ref id="B28"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Krakauer</surname><given-names>DC</given-names></name><name><surname>Plotkin</surname><given-names>JB</given-names></name></person-group><article-title>Redundancy, antiredundancy, and the robustness of genomes</article-title><source>Proc Natl Acad Sci USA</source><year>2002</year><volume>99</volume><fpage>1405</fpage><lpage>1409</lpage><pub-id pub-id-type="pmid">11818563</pub-id><pub-id pub-id-type="doi">10.1073/pnas.032668599</pub-id></citation></ref><ref id="B29"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Prescott</surname><given-names>LM</given-names></name><name><surname>Harley</surname><given-names>JP</given-names></name><name><surname>Klein</surname><given-names>DA</given-names></name></person-group><source>Microbiology</source><year>2002</year><edition>fifth</edition><publisher-name>New York, NY: McGraw-Hill</publisher-name></citation></ref><ref id="B30"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Johnson</surname><given-names>ZI</given-names></name><name><surname>Chisholm</surname><given-names>SW</given-names></name></person-group><article-title>Properties of overlapping genes are conserved across microbial genomes</article-title><source>Genome Res</source><year>2004</year><volume>14</volume><fpage>2268</fpage><lpage>2272</lpage><pub-id pub-id-type="pmid">15520290</pub-id><pub-id pub-id-type="doi">10.1101/gr.2433104</pub-id></citation></ref><ref id="B31"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Lee</surname><given-names>IY</given-names></name><name><surname>Ho</surname><given-names>JM</given-names></name><name><surname>Chen</surname><given-names>MS</given-names></name></person-group><article-title>GOMIT: A Generic and Adaptive Annotation Algorithm Based on Gene Ontology Term Distributions</article-title><source>bibe</source><year>2005</year><volume>0</volume><fpage>40</fpage><lpage>48</lpage></citation></ref><ref id="B32"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Lee</surname><given-names>IY</given-names></name><name><surname>Ho</surname><given-names>JM</given-names></name><name><surname>Chen</surname><given-names>MS</given-names></name></person-group><article-title>CLUGO: A Clustering Algorithm for Automated Functional Annotations Based on Gene Ontology</article-title><source>icdm</source><year>2005</year><volume>0</volume><fpage>705</fpage><lpage>708</lpage></citation></ref><ref id="B33"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Pruess</surname><given-names>M</given-names></name><name><surname>Kersey</surname><given-names>P</given-names></name><name><surname>Apweiler</surname><given-names>R</given-names></name></person-group><article-title>The Integr8 project-a resource for genomic and proteomic data</article-title><source>In Silico Biol</source><year>2005</year><volume>5</volume><fpage>179</fpage><lpage>185</lpage><pub-id pub-id-type="pmid">15972013</pub-id></citation></ref><ref id="B34"><citation citation-type="other"><article-title>Gene Ontology website</article-title><ext-link ext-link-type="uri" xlink:href="http://www.geneontology.org"/></citation></ref><ref id="B35"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Larsen</surname><given-names>TS</given-names></name><name><surname>Krogh</surname><given-names>A</given-names></name></person-group><article-title>EasyGene-a prokaryotic gene finder that ranks ORFs by statistical significance</article-title><source>BMC Bioinformatics</source><year>2003</year><volume>4</volume><fpage>21</fpage><pub-id pub-id-type="pmid">12783628</pub-id><pub-id pub-id-type="doi">10.1186/1471-2105-4-21</pub-id></citation></ref><ref id="B36"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>K Pruitt</surname><given-names>TT</given-names></name><name><surname>Maglott</surname><given-names>D</given-names></name></person-group><article-title>RefSeq and LocusLink: NCBI gene-centered resources</article-title><source>Nucleic Acid Res</source><year>2003</year><volume>31</volume><fpage>34</fpage><lpage>37</lpage><pub-id pub-id-type="pmid">12519942</pub-id><pub-id pub-id-type="doi">10.1093/nar/gkg111</pub-id></citation></ref><ref id="B37"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Altschul</surname><given-names>SF</given-names></name><name><surname>Madden</surname><given-names>TL</given-names></name><name><surname>Schaffer</surname><given-names>AA</given-names></name><name><surname>Zhang</surname><given-names>J</given-names></name><name><surname>Zhang</surname><given-names>Z</given-names></name><name><surname>Miller</surname><given-names>W</given-names></name><name><surname>Lipman</surname><given-names>DJ</given-names></name></person-group><article-title>Gapped BLAST and PSI-BLAST: a new generation of protein database search programs</article-title><source>Nucleic Acids Res</source><year>1997</year><volume>25</volume><fpage>3389</fpage><lpage>3402</lpage><pub-id pub-id-type="pmid">9254694</pub-id><pub-id pub-id-type="doi">10.1093/nar/25.17.3389</pub-id></citation></ref><ref id="B38"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Almeida</surname><given-names>NF</given-names></name><name><surname>Yan</surname><given-names>S</given-names></name><name><surname>Lindeberg</surname><given-names>M</given-names></name><name><surname>Studholme</surname><given-names>DJ</given-names></name><name><surname>Schneider</surname><given-names>DJ</given-names></name><name><surname>Condon</surname><given-names>B</given-names></name><name><surname>Liu</surname><given-names>H</given-names></name><name><surname>Viana</surname><given-names>CJ</given-names></name><name><surname>Warren</surname><given-names>A</given-names></name><name><surname>Evans</surname><given-names>C</given-names></name><name><surname>Kemen</surname><given-names>E</given-names></name><name><surname>MacLean</surname><given-names>D</given-names></name><name><surname>Angot</surname><given-names>A</given-names></name><name><surname>Martin</surname><given-names>GB</given-names></name><name><surname>Jones</surname><given-names>JD</given-names></name><name><surname>Collmer</surname><given-names>A</given-names></name><name><surname>Setubal</surname><given-names>JC</given-names></name><name><surname>Vinatzer</surname><given-names>BA</given-names></name></person-group><article-title>A Draft Genome Sequence of Pseudomonas syringae pv. tomato T1 Reveals a Type III Effector Repertoire Significantly Divergent from That of Pseudomonas syringae pv. tomato DC3000</article-title><source>Molecular Plant-Microbe Interactions</source><year>2009</year><volume>22</volume><fpage>52</fpage><lpage>62</lpage><pub-id pub-id-type="pmid">19061402</pub-id><pub-id pub-id-type="doi">10.1094/MPMI-22-1-0052</pub-id></citation></ref></ref-list></back></article>