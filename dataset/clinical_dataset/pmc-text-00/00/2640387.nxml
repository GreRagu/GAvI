<!DOCTYPE article PUBLIC "-//NLM//DTD Journal Archiving and Interchange DTD v2.3 20070202//EN" "archivearticle.dtd"><article xmlns:xlink="http://www.w3.org/1999/xlink" article-type="product-review"><?properties open_access?><front><journal-meta><journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id><journal-title>BMC Bioinformatics</journal-title><issn pub-type="epub">1471-2105</issn><publisher><publisher-name>BioMed Central</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="pmid">19087333</article-id><article-id pub-id-type="pmc">2640387</article-id><article-id pub-id-type="publisher-id">1471-2105-9-541</article-id><article-id pub-id-type="doi">10.1186/1471-2105-9-541</article-id><article-categories><subj-group subj-group-type="heading"><subject>Software</subject></subj-group></article-categories><title-group><article-title>GeNESiS: gene network evolution simulation software</article-title></title-group><contrib-group><contrib id="A1" contrib-type="author"><name><surname>Kratz</surname><given-names>Anton</given-names></name><xref ref-type="aff" rid="I1">1</xref><email>anton.kratz@gmail.com</email></contrib><contrib id="A2" contrib-type="author"><name><surname>Tomita</surname><given-names>Masaru</given-names></name><xref ref-type="aff" rid="I1">1</xref><email>mt@sfc.keio.ac.jp</email></contrib><contrib id="A3" corresp="yes" contrib-type="author"><name><surname>Krishnan</surname><given-names>Arun</given-names></name><xref ref-type="aff" rid="I1">1</xref><email>drarunkrishnan@gmail.com</email></contrib></contrib-group><aff id="I1"><label>1</label>Institute for Advanced Biosciences, Keio University, 14-1, Baba-Cho, Tsuruoka, Yamagata-ken, 997-0035, Japan</aff><pub-date pub-type="collection"><year>2008</year></pub-date><pub-date pub-type="epub"><day>16</day><month>12</month><year>2008</year></pub-date><volume>9</volume><fpage>541</fpage><lpage>541</lpage><ext-link ext-link-type="uri" xlink:href="http://www.biomedcentral.com/1471-2105/9/541"/><history><date date-type="received"><day>21</day><month>5</month><year>2008</year></date><date date-type="accepted"><day>16</day><month>12</month><year>2008</year></date></history><permissions><copyright-statement>Copyright &#x000a9; 2008 Kratz et al; licensee BioMed Central Ltd.</copyright-statement><copyright-year>2008</copyright-year><copyright-holder>Kratz et al; licensee BioMed Central Ltd.</copyright-holder><license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/2.0"><p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/2.0"/>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</p><!--<rdf xmlns="http://web.resource.org/cc/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1" xmlns:dcterms="http://purl.org/dc/terms"><Work xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" rdf:about=""><license rdf:resource="http://creativecommons.org/licenses/by/2.0"/><dc:type rdf:resource="http://purl.org/dc/dcmitype/Text"/><dc:author>               Kratz               Anton                              anton.kratz@gmail.com            </dc:author><dc:title>            GeNESiS: gene network evolution simulation software         </dc:title><dc:date>2008</dc:date><dcterms:bibliographicCitation>BMC Bioinformatics 9(1): 541-. (2008)</dcterms:bibliographicCitation><dc:identifier type="sici">1471-2105(2008)9:1&#x0003c;541&#x0003e;</dc:identifier><dcterms:isPartOf>urn:ISSN:1471-2105</dcterms:isPartOf><License rdf:about="http://creativecommons.org/licenses/by/2.0"><permits rdf:resource="http://web.resource.org/cc/Reproduction" xmlns=""/><permits rdf:resource="http://web.resource.org/cc/Distribution" xmlns=""/><requires rdf:resource="http://web.resource.org/cc/Notice" xmlns=""/><requires rdf:resource="http://web.resource.org/cc/Attribution" xmlns=""/><permits rdf:resource="http://web.resource.org/cc/DerivativeWorks" xmlns=""/></License></Work></rdf>--></license></permissions><abstract><sec><title>Background</title><p>There has been a lot of interest in recent years focusing on the modeling and simulation of Gene Regulatory Networks (GRNs). However, the evolutionary mechanisms that give rise to GRNs in the first place are still largely unknown. In an earlier work, we developed a framework to analyze the effect of objective functions, input types and starting populations on the evolution of GRNs with a specific emphasis on the robustness of evolved GRNs.</p></sec><sec><title>Results</title><p>In this work, we present a parallel software package, GeNESiS for the modeling and simulation of the evolution of gene regulatory networks (GRNs). The software models the process of gene regulation through a combination of finite-state and stochastic models. The evolution of GRNs is then simulated by means of a genetic algorithm with the network connections represented as binary strings. The software allows users to simulate the evolution under varying selective pressures and starting conditions. We believe that the software provides a way for researchers to understand the evolutionary behavior of populations of GRNs.</p></sec><sec><title>Conclusion</title><p>We believe that GeNESiS will serve as a useful tool for scientists interested in understanding the evolution of gene regulatory networks under a range of different conditions and selective pressures. Such modeling efforts can lead to a greater understanding of the network characteristics of GRNs.</p></sec></abstract></article-meta></front><body><sec><title>Background</title><p>While a lot of interest has been focused on the modeling and simulation of Gene Regulatory Networks (GRNs) in recent years, the evolutionary mechanisms that give rise to GRNs in the first place are still largely unknown. There have been efforts at understanding particular aspects of evolution, such as the correlation between development, evolution and robustness or canalization of the network ([<xref ref-type="bibr" rid="B1">1</xref>,<xref ref-type="bibr" rid="B2">2</xref>]). Studies on the evolution of GRNs have tended to focus on certain a <italic>priori </italic>assumptions about the nature of the evolutionary force such as stabilizing selection ([<xref ref-type="bibr" rid="B3">3</xref>-<xref ref-type="bibr" rid="B6">6</xref>]) or the use of more abstract ([<xref ref-type="bibr" rid="B7">7</xref>]) and analytical ([<xref ref-type="bibr" rid="B8">8</xref>]) models. Siegal <italic>et al</italic>. [<xref ref-type="bibr" rid="B1">1</xref>] showed that the developmental process constrains the genetic system to produce robustness even in the absence of a selection towards optimum.</p><p>In an earlier work [<xref ref-type="bibr" rid="B9">9</xref>], we developed a framework to analyze the effect of objective functions, input types and starting populations on the evolution of GRNs with a specific emphasis on the robustness of evolved GRNs. We observed that robustness evolves along with the networks as an emergent property even in the absence of specific selective pressure. During this optimization process towards a more robust system, multiple genotypes evolve which give rise to the same phenotype; this is in accordance with the theoretical view that natural selection operates on phenotypes, thereby accommodating variation in the genotype by fixing those changes that are phenotype-neutral.</p><p>In this work, we introduce a parallel software package GeNESiS (Gene Network Evolution SImulation Software) that implements the framework developed in [<xref ref-type="bibr" rid="B9">9</xref>] for studying the evolution of GRNs.</p></sec><sec><title>Software</title><p>The software GeNESiS, which stands for GEne Network Evolution SImulation Software, is composed essentially of two parts: The front-end graphical user interface (GUI) written in Java and the backend algorithm written in C. The algorithm itself is parallel in nature and has been built using the GNU Scientific Library (GSL) [<xref ref-type="bibr" rid="B10">10</xref>] and the parallel genetic algorithm package (PGAPACK) [<xref ref-type="bibr" rid="B11">11</xref>]. A slight change was made in the data structure of PGAPACK in order to pass parameters from one subroutine to another. Moreover, since PGAPACK uses the Message Passing Interface (MPI) [<xref ref-type="bibr" rid="B12">12</xref>] in order to run parallely across multiple processors, the algorithm requires the presence of some MPI implementation and has been tested using both, MPICH [<xref ref-type="bibr" rid="B13">13</xref>] and OpenMPI [<xref ref-type="bibr" rid="B14">14</xref>].</p><sec><title>Algorithm</title><p>At the basic level, the model consists of a finite-state aspect since the state of the network depends on the binding/unbinding of proteins to the different binding sites in the promoter regions of the different genes. Each protein has binding domains for none or more genes. The effect of a protein binding to the promoter region of a gene can be activation or repression. In addition, a protein can also undergo an activating or a repressing post translational modification (PTM). A similar abstraction can also be made for the RNAP-cofactor complexes. Each RNAP-confactor complex can bind to none or more genes in order to transcribe them. The RNAP-cofactor complexes also evolve by either gaining or losing the ability to bind to and transcribe specific genes.</p><p>The gene activity in our model is governed by the number of molecules of the "active" gene (that is one with promoter proteins bound to their promoter regions) as a result of which, the model stays closer to reality where a basal level of gene activity is present and genes are seldom seen to exhibit purely binary state behavior. Additionally, in contrast to the work by Brazma <italic>et al</italic>. [<xref ref-type="bibr" rid="B15">15</xref>], time, in our case is discrete. Moreover, the state affects the number of molecules of each species in the system. Additionally, we also model the effect of reversible PTMs. We describe the model in more detail in the following section.</p></sec><sec><title>Model</title><p>Our model of gene regulatory networks has been discussed in detail in [<xref ref-type="bibr" rid="B9">9</xref>]; here we give only a brief description of the model. Our model attempts to describe the process of gene regulation from the binding of the transcription factor-RNA Polymerase complex to the DNA molecule to the translation of mRNA into the protein product. Every gene is represented by a DNA molecule that is assumed to have one or more sites for the binding of transcription factors and other cofactors. The RNA Polymerase molecule can then bind to the transcription factor-cofactor complex which then breaks down on completion of the reading to form the mRNA molecule which is in turn translated to form the associated protein molecule. The protein molecule can cause both positive and negative regulation of its target gene. However, negative regulation is not independent of the binding order which implies that the molecule can only bind to the promoter region of its target gene in the absence of any other transcription factors. The protein molecule can also undergo post-translational modifications (PTM) which can be both enabling and disabling modifications. Enabling modifications turn the activity of a protein molecule "on" while an inactivating modification turns the activity of the molecule "off".</p></sec><sec><title>Network Evolution</title><p>The evolution of the networks is studied by means of a genetic algorithm (GA). A bitstring representation of the different RNAP-cofactor complexes and the protein molecules is concatenated together to form a representation of the entire network. Each such representation of a network is used as an individual chromosome in the genetic algorithm. At the start, a population of solutions is initialized using networks with random connectivities or ones in which all proteins have broad specificities. These correspond to two scenarios: random connectivities corresponding to specificity of DNA-protein interactions while those in which all proteins are connected to each other correspond to the situation whereby any protein can activate any other protein leading to very broad specificities. Once the initial population has been seeded, evolution is allowed to proceed. In each generation, two individuals in the population are chosen at random to mate in order to produce offspring. Individual networks are also subject to mutations while unfit individuals die out, only to be replaced by newer networks. Evolution proceeds under certain pre-defined selective pressures such as maximizing the biomass or through minimizing the number of interactions between proteins or a combination of both selective pressures. Evolution stops when stable networks are obtained. The reader is referred to [<xref ref-type="bibr" rid="B9">9</xref>] for more details on the algorithm.</p></sec><sec><title>Graphical User Interface</title><p>The GUI for GeNESiS has been written in Java and contains two main canvases as shown in Figures <xref ref-type="fig" rid="F1">1</xref> and <xref ref-type="fig" rid="F2">2</xref>. The "Evolve" tab is used for the evolution of a given network while the "Simulate" tab is used to simulate a particular GRN with the desired parameters. The two essential canvases and their associated functionalities will be discussed in more detail below.</p><fig position="float" id="F1"><label>Figure 1</label><caption><p><bold>Evolution Window</bold>.</p></caption><graphic xlink:href="1471-2105-9-541-1"/></fig><fig position="float" id="F2"><label>Figure 2</label><caption><p><bold>Simulation Window</bold>.</p></caption><graphic xlink:href="1471-2105-9-541-2"/></fig><sec><title>GRN Evolution</title><p>The main window has two panels on the left and a single canvas on the right, when it is first launched. This canvas is linked to the tab <italic>Evolve </italic>on the left. When the program is launched, the panels as well as the canvas are greyed out. The user can either open a saved project or start a new project. Starting a new project essentially results in the creation of a new directory that will hold the files resulting from one or more runs of the network evolution. For each run, a subdirectory is created within the main project directory (<italic>simrun1</italic>, <italic>simrun2</italic>,...,etc.). Inside each subdirectory are a number of different files that are generated during the evolution run. There are four main types of files generated as given below:</p><p>&#x02022; <bold>GPIR</bold>: This file contains the number of genes (G), proteins (P), inputs (I) and RNAP-cofactor complexes (R) used during the run, in a single column.</p><p>&#x02022; <bold>LOG</bold>: This contains the logged output from the run. The log interval can be set using the <italic>Parameters </italic>tab (see Section on parameters, below). Each line contains the generation number, the best solution for that particular generation, the fitness function score for that solution and the values of the protein levels.</p><p>&#x02022; <bold>LOG.pop</bold>: This file contains, for each generation, the list of all individuals in the population and their fitness function values.</p><p>&#x02022; <bold>*.dot</bold>: These files contain the network realization in dot format. For each generation, three different <bold>*.dot </bold>files are created; one each for the case where all the species are shown, only proteins are shown and only RNAP-cofactor complexes along with the genes are shown.</p><p>Opening an aleady existing project simply implies opening the main project directory containing the many simulation runs.</p><p>The <italic>Evolve </italic>tab contains some of the main parameters required for the evolution of the network such as the number of genes, proteins, inputs and RNAP-cofactor complexes, the number of generations to evolve the network as well as the minimum number of generations for the fitness function to be unchanged before converging. The panel also has a pull down button to change the seed type for the network as well as buttons to start and stop the evolution. There are also graphing options available that allow the user to select the species that will be displayed. GeNESiS uses the GraphViz [<xref ref-type="bibr" rid="B16">16</xref>] package to draw the networks and there is a further option to select the particular GraphViz program to use, namely, <italic>dot, circo </italic>or <italic>twopi</italic>, which result in different network layouts.</p><p>When the EVOLVE button is pressed, the network evolution algorithm executes in the background and the value of the fitness function for the best network for each generation, along with the generation number is shown in the panel. In addition, the best network for each generation is automatically drawn on the graphing canvas on the right using one of the three different GraphViz programs as set in the panel. Once the evolution has converged or has been manually stopped, a user can follow the evolutionary path by making use of the "movie" buttons at the bottom of the canvas. A number of different runs can be carried out and the results viewed at any given point in time.</p></sec><sec><title>GRN Simulation</title><p>GeNESiS also allows the user to simulate a given GRN. The network that is simulated is the one currently appearing on the graphing canvas. The results from the simulation of one such example network, are shown in Figure <xref ref-type="fig" rid="F2">2</xref>. The simulation canvas is controlled by the <italic>Simulate </italic>pane to the left. This pane contains options that control the display of the different simulation curves. A zoom functionality has also been provided. This panel also allows the user to mutate the network (by either mutating one of the connections or the PTM or RNAP-cofactor complex binding ability). However, at any given time, only one mutation can be carried out for the base network.</p></sec><sec><title>Parameters</title><p>GeNESiS has a number of parameters that can be set, both for the evolution of the networks as well as for simulating a given network. The three different tabs on the <italic>Parameters </italic>pane corresponding to the <italic>Evolution</italic>, <italic>Model </italic>and <italic>Other </italic>parameters are shown in Figures <xref ref-type="fig" rid="F3">3</xref>, <xref ref-type="fig" rid="F4">4</xref> and <xref ref-type="fig" rid="F5">5</xref> respectively.</p><fig position="float" id="F3"><label>Figure 3</label><caption><p><bold>The parameters panes: Evolution Parameters</bold>.</p></caption><graphic xlink:href="1471-2105-9-541-3"/></fig><fig position="float" id="F4"><label>Figure 4</label><caption><p><bold>The parameters panes: Simulation Parameters</bold>.</p></caption><graphic xlink:href="1471-2105-9-541-4"/></fig><fig position="float" id="F5"><label>Figure 5</label><caption><p><bold>The parameters panes: Other Parameters</bold>.</p></caption><graphic xlink:href="1471-2105-9-541-5"/></fig></sec><sec><title>Evolution Parameters</title><p>The <italic>Evolution Parameters </italic>tab contains parameters that are typically used by genetic algorithms such as the maximum number of generations, the maximum number of generations to converge to a solution (that is, the maximum number of generations for a solution to not change in order to assume convergence), the size of the population, the population replacement size and the mutation and crossover probabilities. The users are directed to [<xref ref-type="bibr" rid="B11">11</xref>] for more details about the parameters used in the genetic algorithm.</p><p>There are four different objective functions that can be used for evolution, called, <italic>Biomass, Robustness, Total </italic>and <italic>Biomass_plus_min_links</italic>. <italic>Biomass </italic>tends to maximize the difference between those proteins which don't have external inputs and those which do; <italic>Robustness </italic>tries to explicitly maximize the robustness of the system by picking the solution which undergoes the least change to all point mutations of the bitstring; <italic>Total </italic>tries to maximize the sum of all the proteins in the system and <italic>Biomass_plus_min_links </italic>tries to maximize the biomass as before, while at the same time minimizing the total number of connections in the network.</p><p>The <italic>Evolution Parameters </italic>tab also has options to set the numbers of genes, proteins, inputs and RNAP-cofactor complexes in the system and these are linked to their counterparts on the <italic>Evolve </italic>pane. There are also options here to print the final population as well as the population every generation.</p></sec><sec><title>Model Parameters</title><p>This tab contains all the parameters required to simulate the model of a given gene regulatory network. It contains the kinetic parameters (in effect these are actually the reaction probabilities) for all the reactions as well as general parameters such as the simulation time, the reaction step time and the sampling time. This tab also contains the initial numbers of the DNA molecule, proteins, RNAP-cofactor complexes as well as the inputs. The input step size as well as the input step time can be set here. These inputs are basically proteins which are external to the network, but still have a role in the activation of transcription or in the repression of some of the proteins of the network.</p></sec><sec><title>Other Parameters</title><p>This tab contains miscellaneous parameters such as the paths for the different executables as well as a checkbox for the use of multiple CPUs. The software package contains a detailed user manual that describes the software in greater detail along with examples.</p></sec></sec></sec><sec><title>Conclusion</title><p>Our earlier study [<xref ref-type="bibr" rid="B9">9</xref>] on GRN evolution using GeNESiS enabled us to conclude that it can serve as an important tool for analyzing the evolution of GRNs. The ability to study GRN evolution under different selective pressures and starting conditions is an inherent strength of the GeNESiS framework. We foresee GeNESiS being used for large-scale simulation of GRN evolution. Future enhancements to GeNESiS would include the ability to make use of the grid framework to launch massively-parallel simulations with hundreds of genes.</p></sec><sec><title>Availability and requirements</title><p>&#x02022; <italic>Availability</italic>: The software is freely downloadable from <ext-link ext-link-type="uri" xlink:href="http://genomics.iab.keio.ac.jp/genesis.html"/>.</p><p>&#x02022; <italic>Programming Language</italic>: The core algorithm is written in C while the GUI is written in Java.</p><p>&#x02022; <italic>Dependencies</italic>: GNU Scientific Library, PGAPACK, GraphViz, OpenMPI/MPICH</p><p>&#x02022; <italic>Platforms</italic>: Linux/Unix-based</p></sec><sec><title>Authors' contributions</title><p>AKrishnan created the main algorithm and wrote the paper. AKratz designed and developed the software and also helped in the writing of the paper. MT was in charge of the overall project. All authors read and approved the final manuscript.</p></sec></body><back><ref-list><ref id="B1"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Siegal</surname><given-names>ML</given-names></name><name><surname>Bergman</surname><given-names>A</given-names></name></person-group><article-title>Waddington's canalization revisited: Developmental stability and evolution</article-title><source>Proc Natl Acad Sci USA</source><year>2002</year><volume>99</volume><fpage>10528</fpage><lpage>10532</lpage><pub-id pub-id-type="pmid">12082173</pub-id><pub-id pub-id-type="doi">10.1073/pnas.102303999</pub-id></citation></ref><ref id="B2"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Bergman</surname><given-names>A</given-names></name><name><surname>Siegal</surname><given-names>ML</given-names></name></person-group><article-title>Evolutionary capacitance as a general feature of complex gene networks</article-title><source>Nature</source><year>2003</year><volume>424</volume><fpage>549</fpage><lpage>552</lpage><pub-id pub-id-type="pmid">12891357</pub-id><pub-id pub-id-type="doi">10.1038/nature01765</pub-id></citation></ref><ref id="B3"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Gavrilets</surname><given-names>S</given-names></name><name><surname>Hastings</surname><given-names>A</given-names></name></person-group><article-title>A quantitative-genetic model for selection on developmental noise</article-title><source>Evolution</source><year>1994</year><volume>48</volume><fpage>1478</fpage><lpage>1486</lpage><pub-id pub-id-type="doi">10.2307/2410242</pub-id></citation></ref><ref id="B4"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Wagner</surname><given-names>A</given-names></name></person-group><article-title>Does evolutionary plasticity evolve</article-title><source>Evolution</source><year>1996</year><volume>50</volume><fpage>1008</fpage><lpage>1023</lpage><pub-id pub-id-type="doi">10.2307/2410642</pub-id></citation></ref><ref id="B5"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Wagner</surname><given-names>GP</given-names></name><name><surname>Booth</surname><given-names>G</given-names></name><name><surname>Bagheri-Chaichian</surname><given-names>H</given-names></name></person-group><article-title>A population genetic theory of canalization</article-title><source>Evolution</source><year>1997</year><volume>51</volume><fpage>329</fpage><lpage>347</lpage><pub-id pub-id-type="doi">10.2307/2411105</pub-id></citation></ref><ref id="B6"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Ancel</surname><given-names>LW</given-names></name><name><surname>Fontana</surname><given-names>W</given-names></name></person-group><article-title>Plasticity, evolvability and modularity in rna</article-title><source>J Exp Zool</source><year>2000</year><volume>288</volume><fpage>242</fpage><lpage>283</lpage><pub-id pub-id-type="pmid">11069142</pub-id><pub-id pub-id-type="doi">10.1002/1097-010X(20001015)288:3&#x0003c;242::AID-JEZ5&#x0003e;3.0.CO;2-O</pub-id></citation></ref><ref id="B7"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Rice</surname><given-names>SH</given-names></name></person-group><article-title>The evolution of canalization and the breaking of von baer's laws: Modeling the evolution of development with epistasis</article-title><source>Evolution</source><year>1998</year><volume>52</volume><fpage>647</fpage><lpage>656</lpage><pub-id pub-id-type="doi">10.2307/2411260</pub-id></citation></ref><ref id="B8"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Eshel</surname><given-names>I</given-names></name><name><surname>Matessi</surname><given-names>C</given-names></name></person-group><article-title>Canalization, genetic assimilation and preadaptation: A quantitative genetic model</article-title><source>Genetics</source><year>1998</year><volume>149</volume><fpage>2119</fpage><lpage>2133</lpage><pub-id pub-id-type="pmid">9691063</pub-id></citation></ref><ref id="B9"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Krishnan</surname><given-names>A</given-names></name><name><surname>Giuliani</surname><given-names>A</given-names></name><name><surname>Tomita</surname><given-names>M</given-names></name></person-group><article-title>Evolution of gene regulatory networks: Robustness as an emergent property of evolution</article-title><source>Physica A</source><year>2008</year><volume>387</volume><fpage>2170</fpage><lpage>2186</lpage></citation></ref><ref id="B10"><citation citation-type="other"><person-group person-group-type="author"><name><surname>Pierce</surname><given-names>R</given-names></name></person-group><article-title>The gnu scientific software library</article-title><year>1996</year><ext-link ext-link-type="uri" xlink:href="http://www.gnu.org/software/gsl/"/></citation></ref><ref id="B11"><citation citation-type="other"><person-group person-group-type="author"><name><surname>Levine</surname><given-names>D</given-names></name></person-group><article-title>Users guide to the pgapack parallel genetic algorithm library</article-title><year>1996</year><ext-link ext-link-type="uri" xlink:href="ftp://info.mcs.anl.gov/pub/pgapack/pgapack.tar.Z"/></citation></ref><ref id="B12"><citation citation-type="other"><person-group person-group-type="author"><collab>Mpi</collab></person-group><article-title>Message passing interface</article-title><ext-link ext-link-type="uri" xlink:href="http://www-unix.mcs.anl.gov/mpi/"/></citation></ref><ref id="B13"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Gropp</surname><given-names>W</given-names></name><name><surname>Lusk</surname><given-names>E</given-names></name><name><surname>Doss</surname><given-names>N</given-names></name><name><surname>Skjellum</surname><given-names>A</given-names></name></person-group><article-title>A high-performance, portable implementation of the MPI message passing interface standard</article-title><source>Parallel Computing</source><year>1996</year><volume>22</volume><fpage>789</fpage><lpage>828</lpage><pub-id pub-id-type="doi">10.1016/0167-8191(96)00024-5</pub-id></citation></ref><ref id="B14"><citation citation-type="other"><person-group person-group-type="author"><name><surname>Gabriel</surname><given-names>E</given-names></name><name><surname>Fagg</surname><given-names>GE</given-names></name><name><surname>Bosilca</surname><given-names>G</given-names></name><name><surname>Angskun</surname><given-names>T</given-names></name><name><surname>Dongarra</surname><given-names>JJ</given-names></name><etal></etal></person-group><article-title>Open mpi: Goals, concept, and design of a next generation mpi implementation</article-title><source>11th European PVM/MPI Users' Group Meeting, Budapest, Hungary</source><year>2004</year></citation></ref><ref id="B15"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Brazma</surname><given-names>A</given-names></name><name><surname>Schlitt</surname><given-names>T</given-names></name></person-group><article-title>Reverse engineering of gene regulatory networks: a finite state linear model</article-title><source>Genome Biology</source><year>2003</year><volume>4</volume><fpage>P5</fpage><pub-id pub-id-type="doi">10.1186/gb-2003-4-6-p5</pub-id></citation></ref><ref id="B16"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Gansner</surname><given-names>ER</given-names></name><name><surname>Koutsofios</surname><given-names>E</given-names></name><name><surname>North</surname><given-names>SC</given-names></name><name><surname>Vo</surname><given-names>KP</given-names></name></person-group><article-title>A technique for drawing directed graphs</article-title><source>Software Engineering</source><year>1993</year><volume>19</volume><fpage>214</fpage><lpage>230</lpage><ext-link ext-link-type="uri" xlink:href="http://www.graphviz.org"/></citation></ref></ref-list></back></article>