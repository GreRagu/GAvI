<!DOCTYPE article PUBLIC "-//NLM//DTD Journal Archiving and Interchange DTD v2.3 20070202//EN" "archivearticle.dtd"><article xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article"><?properties open_access?><front><journal-meta><journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id><journal-title>BMC Bioinformatics</journal-title><issn pub-type="epub">1471-2105</issn><publisher><publisher-name>BioMed Central</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="pmid">19208162</article-id><article-id pub-id-type="pmc">2648773</article-id><article-id pub-id-type="publisher-id">1471-2105-10-S1-S59</article-id><article-id pub-id-type="doi">10.1186/1471-2105-10-S1-S59</article-id><article-categories><subj-group subj-group-type="heading"><subject>Research</subject></subj-group></article-categories><title-group><article-title>A new graph-based method for pairwise global network alignment</article-title></title-group><contrib-group><contrib id="A1" corresp="yes" contrib-type="author"><name><surname>Klau</surname><given-names>Gunnar W</given-names></name><xref ref-type="aff" rid="I1">1</xref><email>gunnar.klau@cwi.nl</email></contrib></contrib-group><aff id="I1"><label>1</label>CWI, P.O. Box 94079, 1090 GB Amsterdam, The Netherlands</aff><pub-date pub-type="collection"><year>2009</year></pub-date><pub-date pub-type="epub"><day>30</day><month>1</month><year>2009</year></pub-date><volume>10</volume><issue>Suppl 1</issue><supplement><named-content content-type="supplement-title">Selected papers from the Seventh Asia-Pacific Bioinformatics Conference (APBC 2009)</named-content><named-content content-type="supplement-editor">Michael Q Zhang, Michael S Waterman and Xuegong Zhang</named-content></supplement><fpage>S59</fpage><lpage>S59</lpage><ext-link ext-link-type="uri" xlink:href="http://www.biomedcentral.com/1471-2105/10/S1/S59"/><permissions><copyright-statement>Copyright &#x000a9; 2009 Klau; licensee BioMed Central Ltd.</copyright-statement><copyright-year>2009</copyright-year><copyright-holder>Klau; licensee BioMed Central Ltd.</copyright-holder><license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/2.0"><p>This is an open access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/2.0"/>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</p><!--<rdf xmlns="http://web.resource.org/cc/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1" xmlns:dcterms="http://purl.org/dc/terms"><Work xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" rdf:about=""><license rdf:resource="http://creativecommons.org/licenses/by/2.0"/><dc:type rdf:resource="http://purl.org/dc/dcmitype/Text"/><dc:author>               Klau               W               Gunnar                              gunnar.klau@cwi.nl            </dc:author><dc:title>            A new graph-based method for pairwise global network alignment         </dc:title><dc:date>2009</dc:date><dcterms:bibliographicCitation>BMC Bioinformatics 10(Suppl 1): S59-. (2009)</dcterms:bibliographicCitation><dc:identifier type="sici">1471-2105(2009)10:Suppl 1&#x0003c;S59&#x0003e;</dc:identifier><dcterms:isPartOf>urn:ISSN:1471-2105</dcterms:isPartOf><License rdf:about="http://creativecommons.org/licenses/by/2.0"><permits rdf:resource="http://web.resource.org/cc/Reproduction" xmlns=""/><permits rdf:resource="http://web.resource.org/cc/Distribution" xmlns=""/><requires rdf:resource="http://web.resource.org/cc/Notice" xmlns=""/><requires rdf:resource="http://web.resource.org/cc/Attribution" xmlns=""/><permits rdf:resource="http://web.resource.org/cc/DerivativeWorks" xmlns=""/></License></Work></rdf>--></license></permissions><abstract><sec><title>Background</title><p>In addition to component-based comparative approaches, <italic>network alignments </italic>provide the means to study conserved network topology such as common pathways and more complex network motifs. Yet, unlike in classical sequence alignment, the comparison of networks becomes computationally more challenging, as most meaningful assumptions instantly lead to <italic>NP</italic>-hard problems. Most previous algorithmic work on network alignments is heuristic in nature.</p></sec><sec><title>Results</title><p>We introduce the graph-based <italic>maximum structural matching </italic>formulation for pairwise global network alignment. We relate the formulation to previous work and prove <italic>NP</italic>-hardness of the problem.</p><p>Based on the new formulation we build upon recent results in computational structural biology and present a novel Lagrangian relaxation approach that, in combination with a branch-and-bound method, computes provably optimal network alignments. The Lagrangian algorithm alone is a powerful heuristic method, which produces solutions that are often near-optimal and &#x02013; unlike those computed by pure heuristics &#x02013; come with a quality guarantee.</p></sec><sec><title>Conclusion</title><p>Computational experiments on the alignment of protein-protein interaction networks and on the classification of metabolic subnetworks demonstrate that the new method is reasonably fast and has advantages over pure heuristics. Our software tool is freely available as part of the L<sc>I</sc>SA library.</p></sec></abstract><conference><conf-date>13&#x02013;16 January 2009</conf-date><conf-name>The Seventh Asia Pacific Bioinformatics Conference (APBC 2009)</conf-name><conf-loc>Beijing, China</conf-loc></conference></article-meta></front><body><sec><title>Background</title><p>In systems biology, complex biological systems are often modeled as networks. Examples include protein-protein interaction (PPI), metabolic, gene-regulatory, and signal transduction networks. The increasing quality and quantity of available data creates the need for automated analysis methods to better understand cellular processes, network organization, evolutionary changes, and disease mechanisms [<xref ref-type="bibr" rid="B1">1</xref>,<xref ref-type="bibr" rid="B2">2</xref>]. Based on the assumption that evolutionary conservation implies functional significance, comparative approaches may help improve the accuracy of data, elucidate protein pathways and complexes, generate, investigate, and validate hypotheses about the underlying networks, and transfer functional annotations. In addition to component-based comparative approaches, <italic>network alignments </italic>provide the means to study conserved network topology such as common pathways and more complex network motifs. Yet, unlike in classical sequence alignment, the comparison of networks becomes computationally more challenging, as most meaningful assumptions instantly lead to <italic>NP</italic>-hard problems.</p><sec><title>Previous work</title><p>One of the first contributions to automatic biological network alignment is [<xref ref-type="bibr" rid="B3">3</xref>], where the authors introduce a concept later called <italic>global alignment graph </italic>and find functionally related enzyme clusters in metabolic networks using a simple heuristic. Kelley <italic>et al</italic>. [<xref ref-type="bibr" rid="B4">4</xref>] formalize the concept and present the <sc>PATHBLAST</sc> algorithm, which heuristically finds high-scoring common paths in two protein-protein interaction networks using randomized dynamic programming. Detecting more complex shared topologies has been addressed by Sharan <italic>et al</italic>. [<xref ref-type="bibr" rid="B5">5</xref>], where the authors introduce a probabilistic model for protein complexes and propose a heuristic greedy approach to search for dense subgraphs in the global alignment graph, which correspond to significant shared complexes in the original PPI networks. Koyut&#x000fc;rk <italic>et al</italic>. [<xref ref-type="bibr" rid="B6">6</xref>] also use the global alignment graph with a more elaborate scoring scheme to compute pairwise alignments of PPI networks. Narayanan and Karp [<xref ref-type="bibr" rid="B7">7</xref>] compare two PPI networks using a different model based on a graph-matching algorithm. They restrict the structural conservation to the environment of a node and thus achieve a polynomial running time.</p><p>While most of the above approaches aim at computing local alignments, a recent method by Singh <italic>et al</italic>. [<xref ref-type="bibr" rid="B8">8</xref>] focuses explicitly on computing global alignments between protein interaction networks. They heuristically approach the problem by preferably matching nodes which have a similar neighborhood, which they encode as an eigenvalue problem.</p><p>For multiple network alignment, the method from [<xref ref-type="bibr" rid="B5">5</xref>] has been adapted in [<xref ref-type="bibr" rid="B9">9</xref>]. Koyut&#x000fc;rk <italic>et al</italic>. [<xref ref-type="bibr" rid="B10">10</xref>] determine multiple alignments by contracting the global alignment graph and then applying algorithms from frequent itemset extraction. Jaeger and Leser [<xref ref-type="bibr" rid="B11">11</xref>] determine conserved subgraphs among <italic>k </italic>PPI networks using a heuristic for multidimensional matching in a <italic>k</italic>-partite graph that results from linking each protein to its best ortholog match candidate in each of the other networks. The G<sc>RAEMLIN</sc> algorithm [<xref ref-type="bibr" rid="B12">12</xref>] uses local search to construct a global multiple alignment. Singh <italic>et al</italic>. have adapted their method for the multiple case [<xref ref-type="bibr" rid="B13">13</xref>].</p></sec><sec><title>Contribution</title><p>In this paper, we introduce the <italic>maximum structural matching </italic>formulation for global network alignment and show its relation to the <italic>global alignment graph</italic>. We derive integer linear programming formulations for the maximum structural matching problem and a Lagrangian relaxation algorithm based on these formulations. To our knowledge, this is the first contribution to the relatively young field of biological network alignment that does not approach the problem heuristically. Still, our computational results indicate that the Lagrangian approach is reasonably fast to provably optimally align even large networks. We present preliminary results from two ongoing proof-of-concept studies, where we use the method to globally align protein-protein-interaction networks and to classify metabolic subnetworks.</p><p>Note that this is a methodological paper whose purpose is to introduce the new approach with mathematical rigor. The two proof-of-concept studies demonstrate the potential of the method in practice. However, a detailed comparison to other methods is beyond the scope of this article and will be carried out as future work.</p></sec></sec><sec sec-type="methods"><title>Methods</title><sec><title>A combinatorial formulation for network alignment</title><p>In this section we give a formal definition of network alignment. We define the global pairwise network alignment problem and present a graph-theoretical reformulation, which is an extension of the <italic>maximum weight trace </italic>formulation, which has been proposed by Kececioglu for classical sequence alignment [<xref ref-type="bibr" rid="B14">14</xref>]. Furthermore, we relate our definition to previous work.</p><p>In analogy to the classical sequence case, we define a pairwise alignment of two networks as follows. Note that this definition is already quite close to the formulation presented later in this section and can readily be extended to multiple network alignment. Let "-" denote the gap symbol.</p><p><bold>Definition 1 </bold>(Network alignment). <italic>Given two networks G</italic><sub>1 </sub>= (<italic>V</italic><sub>1</sub>, <italic>E</italic><sub>1</sub>) <italic>and G</italic><sub>2 </sub>= (<italic>V</italic><sub>2</sub>, <italic>E</italic><sub>2</sub>), <italic>a </italic>network alignment <italic>a</italic>: <italic>V</italic><sub>1 </sub>&#x02192; <italic>V</italic><sub>2 </sub>&#x0222a; {-} <italic>maps a vertex i </italic>&#x02208; <italic>V</italic><sub>1 </sub>to</p><p><disp-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M1" name="1471-2105-10-S1-S59-i1" overflow="scroll">                     <mml:semantics>                        <mml:mrow>                           <mml:mi>a</mml:mi>                           <mml:mo stretchy="false">(</mml:mo>                           <mml:mi>i</mml:mi>                           <mml:mo stretchy="false">)</mml:mo>                           <mml:mo>=</mml:mo>                           <mml:mrow>                              <mml:mo>{</mml:mo>                              <mml:mrow>                                 <mml:mtable columnalign="left">                                    <mml:mtr columnalign="left">                                       <mml:mtd columnalign="left">                                          <mml:mrow>                                             <mml:mi>j</mml:mi>                                             <mml:mo>&#x02208;</mml:mo>                                             <mml:msub>                                                <mml:mi>V</mml:mi>                                                <mml:mn>2</mml:mn>                                             </mml:msub>                                          </mml:mrow>                                       </mml:mtd>                                       <mml:mtd columnalign="left">                                          <mml:mrow>                                             <mml:mi>a</mml:mi>                                             <mml:mtext>&#x000a0;</mml:mtext>                                             <mml:mi>v</mml:mi>                                             <mml:mi>e</mml:mi>                                             <mml:mi>r</mml:mi>                                             <mml:mi>t</mml:mi>                                             <mml:mi>e</mml:mi>                                             <mml:mi>x</mml:mi>                                             <mml:mtext>&#x000a0;</mml:mtext>                                             <mml:mi>j</mml:mi>                                             <mml:mtext>&#x000a0;</mml:mtext>                                             <mml:mi>i</mml:mi>                                             <mml:mi>n</mml:mi>                                             <mml:mtext>&#x000a0;</mml:mtext>                                             <mml:mi>t</mml:mi>                                             <mml:mi>h</mml:mi>                                             <mml:mi>e</mml:mi>                                             <mml:mtext>&#x000a0;</mml:mtext>                                             <mml:mi>s</mml:mi>                                             <mml:mi>e</mml:mi>                                             <mml:mi>c</mml:mi>                                             <mml:mi>o</mml:mi>                                             <mml:mi>n</mml:mi>                                             <mml:mi>d</mml:mi>                                             <mml:mtext>&#x000a0;</mml:mtext>                                             <mml:mi>n</mml:mi>                                             <mml:mi>e</mml:mi>                                             <mml:mi>t</mml:mi>                                             <mml:mi>w</mml:mi>                                             <mml:mi>o</mml:mi>                                             <mml:mi>r</mml:mi>                                             <mml:mi>k</mml:mi>                                          </mml:mrow>                                       </mml:mtd>                                    </mml:mtr>                                    <mml:mtr columnalign="left">                                       <mml:mtd columnalign="left">                                          <mml:mo>&#x02212;</mml:mo>                                       </mml:mtd>                                       <mml:mtd columnalign="left">                                          <mml:mrow>                                             <mml:mi>a</mml:mi>                                             <mml:mtext>&#x000a0;</mml:mtext>                                             <mml:mi>g</mml:mi>                                             <mml:mi>a</mml:mi>                                             <mml:mi>p</mml:mi>                                             <mml:mo>.</mml:mo>                                          </mml:mrow>                                       </mml:mtd>                                    </mml:mtr>                                 </mml:mtable>                              </mml:mrow>                           </mml:mrow>                        </mml:mrow>                                             </mml:semantics>                  </mml:math></disp-formula></p><p>Note that in contrast to sequence alignments, network alignments do not have to respect an inherent sequential order of the objects to align.</p><p><bold>Definition 2 </bold>(Score). <italic>The score of a network alignment a</italic>: <italic>V</italic><sub>1 </sub>&#x02192; <italic>V</italic><sub>2 </sub>&#x0222a; {-} <italic>of two networks G</italic><sub>1 </sub>= (<italic>V</italic><sub>1</sub>, <italic>E</italic><sub>1</sub>) <italic>and G</italic><sub>2 </sub>= (<italic>V</italic><sub>2</sub>, <italic>E</italic><sub>2</sub>) <italic>is</italic></p><p><disp-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M2" name="1471-2105-10-S1-S59-i2" overflow="scroll">                     <mml:semantics>                        <mml:mrow>                           <mml:mi>s</mml:mi>                           <mml:mo stretchy="false">(</mml:mo>                           <mml:mi>a</mml:mi>                           <mml:mo stretchy="false">)</mml:mo>                           <mml:mo>=</mml:mo>                           <mml:mstyle displaystyle="true">                              <mml:munder>                                 <mml:mo>&#x02211;</mml:mo>                                 <mml:mrow>                                    <mml:mtable>                                       <mml:mtr>                                          <mml:mtd>                                             <mml:mrow>                                                <mml:mi>i</mml:mi>                                                <mml:mo>&#x02208;</mml:mo>                                                <mml:msub>                                                   <mml:mi>V</mml:mi>                                                   <mml:mn>1</mml:mn>                                                </mml:msub>                                             </mml:mrow>                                          </mml:mtd>                                       </mml:mtr>                                       <mml:mtr>                                          <mml:mtd>                                             <mml:mrow>                                                <mml:mi>a</mml:mi>                                                <mml:mo stretchy="false">(</mml:mo>                                                <mml:mi>i</mml:mi>                                                <mml:mo stretchy="false">)</mml:mo>                                                <mml:mo>&#x02260;</mml:mo>                                                <mml:mo>&#x02212;</mml:mo>                                             </mml:mrow>                                          </mml:mtd>                                       </mml:mtr>                                    </mml:mtable>                                 </mml:mrow>                              </mml:munder>                              <mml:mrow>                                 <mml:mi>&#x003c3;</mml:mi>                                 <mml:mo stretchy="false">(</mml:mo>                                 <mml:mi>i</mml:mi>                                 <mml:mo>,</mml:mo>                                 <mml:mi>a</mml:mi>                                 <mml:mo stretchy="false">(</mml:mo>                                 <mml:mi>i</mml:mi>                                 <mml:mo stretchy="false">)</mml:mo>                                 <mml:mo stretchy="false">)</mml:mo>                              </mml:mrow>                           </mml:mstyle>                           <mml:mo>+</mml:mo>                           <mml:mstyle displaystyle="true">                              <mml:munder>                                 <mml:mo>&#x02211;</mml:mo>                                 <mml:mrow>                                    <mml:mtable>                                       <mml:mtr>                                          <mml:mtd>                                             <mml:mrow>                                                <mml:mi>i</mml:mi>                                                <mml:mo>&#x02208;</mml:mo>                                                <mml:msub>                                                   <mml:mi>V</mml:mi>                                                   <mml:mn>1</mml:mn>                                                </mml:msub>                                             </mml:mrow>                                          </mml:mtd>                                       </mml:mtr>                                       <mml:mtr>                                          <mml:mtd>                                             <mml:mrow>                                                <mml:mi>a</mml:mi>                                                <mml:mo stretchy="false">(</mml:mo>                                                <mml:mi>i</mml:mi>                                                <mml:mo stretchy="false">)</mml:mo>                                                <mml:mo>&#x02260;</mml:mo>                                                <mml:mo>&#x02212;</mml:mo>                                             </mml:mrow>                                          </mml:mtd>                                       </mml:mtr>                                    </mml:mtable>                                 </mml:mrow>                              </mml:munder>                              <mml:mrow>                                 <mml:mstyle displaystyle="true">                                    <mml:munder>                                       <mml:mo>&#x02211;</mml:mo>                                       <mml:mrow>                                          <mml:mtable>                                             <mml:mtr>                                                <mml:mtd>                                                   <mml:mrow>                                                      <mml:mi>k</mml:mi>                                                      <mml:mo>&#x02208;</mml:mo>                                                      <mml:msub>                                                         <mml:mi>V</mml:mi>                                                         <mml:mn>1</mml:mn>                                                      </mml:msub>                                                   </mml:mrow>                                                </mml:mtd>                                             </mml:mtr>                                             <mml:mtr>                                                <mml:mtd>                                                   <mml:mrow>                                                      <mml:mi>a</mml:mi>                                                      <mml:mo stretchy="false">(</mml:mo>                                                      <mml:mi>k</mml:mi>                                                      <mml:mo stretchy="false">)</mml:mo>                                                      <mml:mo>&#x02260;</mml:mo>                                                      <mml:mo>&#x02212;</mml:mo>                                                   </mml:mrow>                                                </mml:mtd>                                             </mml:mtr>                                          </mml:mtable>                                       </mml:mrow>                                    </mml:munder>                                    <mml:mrow>                                       <mml:mi>&#x003c4;</mml:mi>                                       <mml:mo stretchy="false">(</mml:mo>                                       <mml:mi>i</mml:mi>                                       <mml:mo>,</mml:mo>                                       <mml:mi>a</mml:mi>                                       <mml:mo stretchy="false">(</mml:mo>                                       <mml:mi>i</mml:mi>                                       <mml:mo stretchy="false">)</mml:mo>                                       <mml:mo>,</mml:mo>                                       <mml:mi>k</mml:mi>                                       <mml:mo>,</mml:mo>                                       <mml:mi>a</mml:mi>                                       <mml:mo stretchy="false">(</mml:mo>                                       <mml:mi>k</mml:mi>                                       <mml:mo stretchy="false">)</mml:mo>                                       <mml:mo stretchy="false">)</mml:mo>                                    </mml:mrow>                                 </mml:mstyle>                              </mml:mrow>                           </mml:mstyle>                           <mml:mo>,</mml:mo>                        </mml:mrow>                                             </mml:semantics>                  </mml:math></disp-formula></p><p>where <italic>&#x003c3;</italic>: <italic>V</italic><sub>1 </sub>&#x000d7; <italic>V</italic><sub>2 </sub>&#x02192; &#x0211d;<sup>&#x02265;0 </sup><italic>gives the score of mapping individual nodes onto each other and &#x003c4;</italic>: <italic>V</italic><sub>1 </sub>&#x000d7; <italic>V</italic><sub>2 </sub>&#x000d7; <italic>V</italic><sub>1 </sub>&#x000d7; <italic>V</italic><sub>2 </sub>&#x02192; &#x0211d;<sup>&#x02265;0 </sup><italic>gives the score of mapping pairs of nodes onto each other</italic>.</p><p>This definition allows a quite flexible modeling of scores, which may be used to express mismatches and gaps, and which can also be based on additional information, such as, for example, edge weights. Typically, the <italic>&#x003c3;</italic>-part of the scoring function will be based on pairwise similarity of the objects represented by the nodes and will assign, say, similar proteins in two protein-protein interaction networks a high score, whereas the <italic>&#x003c4;</italic>-part will reward conserved interactions between pairs of nodes. Note that the definition is similar to structural alignment scoring functions as, for example, used to compare RNA molecules [<xref ref-type="bibr" rid="B15">15</xref>]. Figure <xref ref-type="fig" rid="F1">1</xref> illustrates the definitions.</p><fig position="float" id="F1"><label>Figure 1</label><caption><p><bold>Network alignment <italic>a</italic></bold>. A dashed arrow from a node <italic>i </italic>&#x02208; <italic>V</italic><sub>1 </sub>from the first network <italic>G</italic><sub>1 </sub>= (<italic>V</italic><sub>1</sub>, <italic>E</italic><sub>1</sub>) to a node <italic>j </italic>&#x02208; <italic>V</italic><sub>2 </sub>from the second network <italic>G</italic><sub>2 </sub>= (<italic>V</italic><sub>2</sub>, <italic>E</italic><sub>2</sub>) indicates that <italic>a</italic>(<italic>i</italic>) = <italic>j</italic>. Unmapped vertices are mapped to gaps. The score of the alignment depends on the values given in <italic>&#x003c3; </italic>and <italic>&#x003c4;</italic>. For simplicity, we assume that <italic>&#x003c3;</italic>(<italic>i</italic>, <italic>j</italic>) = 1 for all <italic>i </italic>&#x02208; <italic>V</italic><sub>1 </sub>and <italic>j </italic>&#x02208; <italic>V</italic><sub>2 </sub>and that <italic>&#x003c4;</italic>(<italic>i</italic>, <italic>j</italic>, <italic>k</italic>, <italic>l</italic>) = 1 if (<italic>i</italic>, <italic>k</italic>) &#x02208; <italic>E</italic><sub>1 </sub>and (<italic>j</italic>, <italic>l</italic>) &#x02208; <italic>E</italic><sub>2 </sub>and <italic>&#x003c4;</italic>(<italic>i</italic>, <italic>j</italic>, <italic>k</italic>, <italic>l</italic>) = 0 otherwise. This leads to a score of 4 + 5 = 9 in the example.</p></caption><graphic xlink:href="1471-2105-10-S1-S59-1"/></fig><p>Given these definitions, we are able to define the network alignment problem formally:</p><p><bold>Definition 3 </bold>(Pairwise global network alignment). <italic>Given two networks G</italic><sub>1 </sub>= (<italic>V</italic><sub>1</sub>, <italic>E</italic><sub>1</sub>) <italic>and G</italic><sub>2 </sub>= (<italic>V</italic><sub>2</sub>, <italic>E</italic><sub>2</sub>) <italic>and a scoring function s as defined in Def. 2, the </italic>pairwise global network alignment problem <italic>asks for a highest-scoring alignment A</italic>* <italic>of G</italic><sub>1 </sub><italic>and G</italic><sub>2</sub>, <italic>that is</italic>, <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M3" name="1471-2105-10-S1-S59-i3" overflow="scroll"><mml:semantics><mml:mrow><mml:msup><mml:mi>A</mml:mi><mml:mo>&#x02217;</mml:mo></mml:msup><mml:mo>=</mml:mo><mml:mi>arg</mml:mi><mml:mo>&#x02061;</mml:mo><mml:msub><mml:mrow><mml:mi>max</mml:mi><mml:mo>&#x02061;</mml:mo></mml:mrow><mml:mrow><mml:mi>A</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi mathvariant="script">A</mml:mi></mml:mrow></mml:msub><mml:mi>s</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>A</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:semantics></mml:math></inline-formula><italic>s</italic>(<italic>A</italic>), <italic>where </italic><inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M4" name="1471-2105-10-S1-S59-i4" overflow="scroll"><mml:semantics><mml:mi mathvariant="script">A</mml:mi></mml:semantics></mml:math></inline-formula><italic>denotes the set of all possible alignments of G</italic><sub>1 </sub><italic>and G</italic><sub>2</sub>.</p><p><bold>Theorem 1</bold>. <italic>The pairwise global network alignment problem as defined in Def. 3 is NP-hard</italic>.</p><p><italic>Proof</italic>. It is easy to see that the pairwise network alignment problem is in <italic>NP</italic>, since a non-deterministic algorithm needs only guess the best alignment <italic>a</italic>. We prove <italic>NP</italic>-hardness by a simple reduction from the maximum common subgraph problem. A common subgraph of two graphs <italic>G</italic><sub>1 </sub>= (<italic>V</italic><sub>1</sub>, <italic>E</italic><sub>1</sub>) and <italic>G</italic><sub>2 </sub>= (<italic>V</italic><sub>2</sub>, <italic>E</italic><sub>2</sub>) is characterized by subsets <italic>E</italic><sub>1</sub>' &#x02286; <italic>E</italic><sub>1 </sub>and <italic>E</italic><sub>2</sub>' &#x02286; <italic>E</italic><sub>2 </sub>such that the two subgraphs <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M5" name="1471-2105-10-S1-S59-i5" overflow="scroll"><mml:semantics><mml:mrow><mml:msub><mml:msup><mml:mi>G</mml:mi><mml:mo>&#x02032;</mml:mo></mml:msup><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:semantics></mml:math></inline-formula> = (<italic>V</italic><sub>1</sub>', <italic>E</italic><sub>1</sub>') and <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M6" name="1471-2105-10-S1-S59-i6" overflow="scroll"><mml:semantics><mml:mrow><mml:msub><mml:msup><mml:mi>G</mml:mi><mml:mo>&#x02032;</mml:mo></mml:msup><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:semantics></mml:math></inline-formula> = (<italic>V</italic><sub>2</sub>', <italic>E</italic><sub>2</sub>') are isomorphic, where <italic>V</italic><sub>1</sub>' and <italic>V</italic><sub>2</sub>' denote the vertices that are the endpoints of edges in <italic>E</italic><sub>1</sub>' and <italic>E</italic><sub>2</sub>', respectively. A maximum common subgraph is a common subgraph with the maximum number of edges, and its computation is a well-known <italic>NP</italic>-hard problem [<xref ref-type="bibr" rid="B16">16</xref>].</p><p>We can solve the maximum subgraph problem with an algorithm for network alignment by simply using the following scoring function:</p><p><disp-formula><italic>&#x003c3;</italic>(<italic>i</italic>, <italic>j</italic>) = 0 for all <italic>i </italic>&#x02208; <italic>V</italic><sub>1</sub>, <italic>j </italic>&#x02208; <italic>V</italic><sub>2</sub></disp-formula></p><p>and</p><p><disp-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M7" name="1471-2105-10-S1-S59-i7" overflow="scroll">                     <mml:semantics>                        <mml:mrow>                           <mml:mi>&#x003c4;</mml:mi>                           <mml:mo stretchy="false">(</mml:mo>                           <mml:mi>i</mml:mi>                           <mml:mo>,</mml:mo>                           <mml:mi>j</mml:mi>                           <mml:mo>,</mml:mo>                           <mml:mi>k</mml:mi>                           <mml:mo>,</mml:mo>                           <mml:mi>l</mml:mi>                           <mml:mo stretchy="false">)</mml:mo>                           <mml:mo>=</mml:mo>                           <mml:mrow>                              <mml:mo>{</mml:mo>                              <mml:mrow>                                 <mml:mtable columnalign="left">                                    <mml:mtr columnalign="left">                                       <mml:mtd columnalign="left">                                          <mml:mn>1</mml:mn>                                       </mml:mtd>                                       <mml:mtd columnalign="left">                                          <mml:mrow>                                             <mml:mtable>                                                <mml:mtr>                                                   <mml:mtd>                                                      <mml:mrow>                                                         <mml:mtext>for&#x000a0;</mml:mtext>                                                         <mml:mo stretchy="false">(</mml:mo>                                                         <mml:mi>i</mml:mi>                                                         <mml:mo>,</mml:mo>                                                         <mml:mi>k</mml:mi>                                                         <mml:mo stretchy="false">)</mml:mo>                                                         <mml:mo>&#x02208;</mml:mo>                                                         <mml:msub>                                                            <mml:mi>E</mml:mi>                                                            <mml:mn>1</mml:mn>                                                         </mml:msub>                                                      </mml:mrow>                                                   </mml:mtd>                                                   <mml:mtd>                                                      <mml:mrow>                                                         <mml:mtext>and</mml:mtext>                                                      </mml:mrow>                                                   </mml:mtd>                                                   <mml:mtd>                                                      <mml:mrow>                                                         <mml:mo stretchy="false">(</mml:mo>                                                         <mml:mi>j</mml:mi>                                                         <mml:mo>,</mml:mo>                                                         <mml:mi>l</mml:mi>                                                         <mml:mo stretchy="false">)</mml:mo>                                                         <mml:mo>&#x02208;</mml:mo>                                                         <mml:msub>                                                            <mml:mi>E</mml:mi>                                                            <mml:mn>2</mml:mn>                                                         </mml:msub>                                                      </mml:mrow>                                                   </mml:mtd>                                                </mml:mtr>                                             </mml:mtable>                                          </mml:mrow>                                       </mml:mtd>                                    </mml:mtr>                                    <mml:mtr columnalign="left">                                       <mml:mtd columnalign="left">                                          <mml:mn>0</mml:mn>                                       </mml:mtd>                                       <mml:mtd columnalign="left">                                          <mml:mrow>                                             <mml:mtext>otherwise</mml:mtext>                                             <mml:mo>.</mml:mo>                                          </mml:mrow>                                       </mml:mtd>                                    </mml:mtr>                                 </mml:mtable>                              </mml:mrow>                           </mml:mrow>                        </mml:mrow>                                             </mml:semantics>                  </mml:math></disp-formula></p><p>A best network alignment will then correspond to a maximum common subgraph.&#x000a0;&#x000a0;&#x000a0;&#x025a1;</p><p>The above definition of network alignment is very close to the notion of <italic>trace </italic>as introduced by Kececioglu for classical sequence alignment [<xref ref-type="bibr" rid="B14">14</xref>]. We give an analogous definition for the alignment of networks:</p><p><bold>Definition 4 </bold>(Alignment graph). <italic>Given two networks G</italic><sub>1 </sub>= (<italic>V</italic><sub>1</sub>, <italic>E</italic><sub>1</sub>) <italic>and G</italic><sub>2 </sub>= (<italic>V</italic><sub>2</sub>, <italic>E</italic><sub>2</sub>), <italic>the </italic>alignment graph <italic>A is a complete bipartite edge-weighted graph with vertex set V</italic><sub>1 </sub>&#x0222a; <italic>V</italic><sub>2</sub>. <italic>The weight of an edge e </italic>= (<italic>i</italic>, <italic>j</italic>) <italic>with i </italic>&#x02208; <italic>V</italic><sub>1 </sub><italic>and j </italic>&#x02208; <italic>V</italic><sub>2 </sub><italic>is w</italic>(<italic>e</italic>) = <italic>&#x003c3;</italic>(<italic>i</italic>, <italic>j</italic>) <italic>and represents the gain of aligning the endpoints of the edge</italic>.</p><p>Figure <xref ref-type="fig" rid="F2">2</xref> shows the alignment graph for the instance given in Fig. <xref ref-type="fig" rid="F1">1</xref>. In analogy to the sequence case, we say that a network alignment <italic>a realizes </italic>an edge (<italic>i</italic>, <italic>j</italic>) in <italic>A </italic>if <italic>a</italic>(<italic>i</italic>) = <italic>j</italic>. Similar to the trace formulation we strive to establish a connection between an alignment <italic>a </italic>and the alignment graph <italic>A</italic>. As the order of the vertices does not play a role, this connection is precisely characterized by the graph-theoretical concept of <italic>matching</italic>. A matching in a graph is a subset of its edges such that no two chosen edges share a common endpoint.</p><fig position="float" id="F2"><label>Figure 2</label><caption><p><bold>Alignment graph</bold>. Alignment graph <italic>A </italic>for the alignment <italic>a </italic>from Fig. 1. Heavier alignment edges are realized by <italic>a</italic>.</p></caption><graphic xlink:href="1471-2105-10-S1-S59-2"/></fig><p><bold>Observation 1</bold>. <italic>There is a one-to-one correspondence between matchings in the alignment graph and network alignments</italic>.</p><p>The alignment graph provides an alternative way to represent an alignment of the nodes in a network. Yet, in the basic version we are unable to deal with structural conservation. Therefore we introduce the concept of <italic>structural matches</italic>, which have already been used for structural alignment, where they are referred to as <italic>interaction matches </italic>[<xref ref-type="bibr" rid="B15">15</xref>].</p><p><bold>Definition 5 </bold>(Structural match). <italic>A </italic>structural match <italic>is a pair of alignment edges </italic>(<italic>i</italic>, <italic>j</italic>), (<italic>k</italic>, <italic>l</italic>) <italic>in the alignment graph. We say that a network alignment </italic>realizes <italic>a match </italic>(<italic>i</italic>, <italic>j</italic>), (<italic>k</italic>, <italic>l</italic>) <italic>if it realizes both alignment edges </italic>(<italic>i</italic>, <italic>j</italic>) <italic>and </italic>(<italic>k</italic>, <italic>l</italic>).</p><p>We are now able to reformulate the pairwise global network alignment problem as a combinatorial problem in the alignment graph. Let &#x0003e; denote an arbitrary order of the edges in <italic>A</italic>.</p><p><bold>Definition 6 </bold>(Maximum structural matching). <italic>Given two networks G</italic><sub>1 </sub>= (<italic>V</italic><sub>1</sub>, <italic>E</italic><sub>1</sub>) <italic>and G</italic><sub>2 </sub>= (<italic>V</italic><sub>2</sub>, <italic>E</italic><sub>2</sub>) <italic>and a scoring function s, the structural score of a matching M in the alignment graph A is given by</italic></p><p><disp-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M8" name="1471-2105-10-S1-S59-i8" overflow="scroll">                     <mml:semantics>                        <mml:mrow>                           <mml:mi>s</mml:mi>                           <mml:mo stretchy="false">(</mml:mo>                           <mml:mi>M</mml:mi>                           <mml:mo stretchy="false">)</mml:mo>                           <mml:mo>=</mml:mo>                           <mml:mstyle displaystyle="true">                              <mml:munder>                                 <mml:mo>&#x02211;</mml:mo>                                 <mml:mrow>                                    <mml:mo stretchy="false">(</mml:mo>                                    <mml:mi>i</mml:mi>                                    <mml:mo>,</mml:mo>                                    <mml:mi>j</mml:mi>                                    <mml:mo stretchy="false">)</mml:mo>                                    <mml:mo>&#x02208;</mml:mo>                                    <mml:mi>M</mml:mi>                                 </mml:mrow>                              </mml:munder>                              <mml:mrow>                                 <mml:mi>&#x003c3;</mml:mi>                                 <mml:mo stretchy="false">(</mml:mo>                                 <mml:mi>i</mml:mi>                                 <mml:mo>,</mml:mo>                                 <mml:mi>j</mml:mi>                                 <mml:mo stretchy="false">)</mml:mo>                              </mml:mrow>                           </mml:mstyle>                           <mml:mo>=</mml:mo>                           <mml:mstyle displaystyle="true">                              <mml:munder>                                 <mml:mo>&#x02211;</mml:mo>                                 <mml:mrow>                                    <mml:mo stretchy="false">(</mml:mo>                                    <mml:mi>i</mml:mi>                                    <mml:mo>,</mml:mo>                                    <mml:mi>j</mml:mi>                                    <mml:mo stretchy="false">)</mml:mo>                                    <mml:mo>&#x02208;</mml:mo>                                    <mml:mi>M</mml:mi>                                 </mml:mrow>                              </mml:munder>                              <mml:mrow>                                 <mml:mstyle displaystyle="true">                                    <mml:munder>                                       <mml:mo>&#x02211;</mml:mo>                                       <mml:mrow>                                          <mml:mtable>                                             <mml:mtr>                                                <mml:mtd>                                                   <mml:mrow>                                                      <mml:mo stretchy="false">(</mml:mo>                                                      <mml:mi>k</mml:mi>                                                      <mml:mo>,</mml:mo>                                                      <mml:mi>l</mml:mi>                                                      <mml:mo stretchy="false">)</mml:mo>                                                      <mml:mo>&#x02208;</mml:mo>                                                      <mml:mi>M</mml:mi>                                                   </mml:mrow>                                                </mml:mtd>                                             </mml:mtr>                                             <mml:mtr>                                                <mml:mtd>                                                   <mml:mrow>                                                      <mml:mo stretchy="false">(</mml:mo>                                                      <mml:mi>k</mml:mi>                                                      <mml:mo>,</mml:mo>                                                      <mml:mi>l</mml:mi>                                                      <mml:mo stretchy="false">)</mml:mo>                                                      <mml:mo>&#x0003e;</mml:mo>                                                      <mml:mo stretchy="false">(</mml:mo>                                                      <mml:mi>i</mml:mi>                                                      <mml:mo>,</mml:mo>                                                      <mml:mi>j</mml:mi>                                                      <mml:mo stretchy="false">)</mml:mo>                                                   </mml:mrow>                                                </mml:mtd>                                             </mml:mtr>                                          </mml:mtable>                                       </mml:mrow>                                    </mml:munder>                                    <mml:mrow>                                       <mml:mi>&#x003c4;</mml:mi>                                       <mml:mo stretchy="false">(</mml:mo>                                       <mml:mi>i</mml:mi>                                       <mml:mo>,</mml:mo>                                       <mml:mi>j</mml:mi>                                       <mml:mo>,</mml:mo>                                       <mml:mi>k</mml:mi>                                       <mml:mo>,</mml:mo>                                       <mml:mi>l</mml:mi>                                       <mml:mo stretchy="false">)</mml:mo>                                    </mml:mrow>                                 </mml:mstyle>                              </mml:mrow>                           </mml:mstyle>                           <mml:mo>.</mml:mo>                        </mml:mrow>                                             </mml:semantics>                  </mml:math></disp-formula></p><p><italic>The </italic>maximum structural matching problem <italic>asks for a highest-scoring structural matching</italic>.</p><p>Observation 1 straightforwardly extends to the structural case and yields the following result.</p><p><bold>Lemma 1. </bold><italic>Consider a network alignment a and the matching M it realizes in the alignment graph. Then we have s</italic>(<italic>a</italic>) = <italic>s</italic>(<italic>M</italic>).</p><p>This allows us to concentrate on the alignment graph to find the best pairwise global network alignment. In the next section, we present an integer linear programming approach to determine a maximum structural matching in a bipartite graph.</p><p>Note that our definition of alignment graph is different, but in a sense equivalent, to the <italic>global alignment graph </italic>concept used in the <sc>PATHBLAST</sc> algorithm [<xref ref-type="bibr" rid="B4">4</xref>] and first introduced in [<xref ref-type="bibr" rid="B3">3</xref>]. The following observation relates the two concepts for the case of pairwise alignment; the multiple case is analogous. The global alignment graph contains weighted nodes for pairs of nodes in the original networks &#x02013; which correspond to the alignment edges in our bipartite alignment graph &#x02013; and weighted edges represent conserved interactions, gaps, or mismatches &#x02013; which correspond to structural matches in our definition. Weights of nodes and edges correspond to the weights of alignment edges and structural matches, respectively. Determining clique-like heavy subgraphs in the global alignment graph &#x02013; for which several heuristics have been presented &#x02013; is equivalent to our definition of network alignment as a maximum structural matching in our alignment graph. We nevertheless prefer our alternative definition, because it allows us to employ the well-studied field of matchings in bipartite graphs as the next sections will show.</p></sec><sec><title>Integer linear programming formulations for network alignment</title><p>We can straightforwardly cast the maximum structural matching problem as a non-linear integer program.</p><p>For each edge (<italic>i</italic>, <italic>j</italic>) &#x02208; <italic>V</italic><sub>1 </sub>&#x000d7; <italic>V</italic><sub>2 </sub>of the alignment graph, we define a binary variable <italic>x</italic><sub><italic>ij </italic></sub>with the interpretation <italic>x</italic><sub><italic>ij </italic></sub>= 1 if (<italic>i</italic>, <italic>j</italic>) is part of the structural matching and <italic>x</italic><sub><italic>ij </italic></sub>= 0 otherwise. Let <italic>&#x003b4;</italic>(<italic>v</italic>) denote the set of edges incident to vertex <italic>v</italic>. The formulation is then</p><p><disp-formula id="bmcM1"><label>(1)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M9" name="1471-2105-10-S1-S59-i9" overflow="scroll">                     <mml:semantics>                        <mml:mrow>                           <mml:mi>max</mml:mi>                           <mml:mo>&#x02061;</mml:mo>                           <mml:mstyle displaystyle="true">                              <mml:munder>                                 <mml:mo>&#x02211;</mml:mo>                                 <mml:mrow>                                    <mml:mo stretchy="false">(</mml:mo>                                    <mml:mi>i</mml:mi>                                    <mml:mo>,</mml:mo>                                    <mml:mi>j</mml:mi>                                    <mml:mo stretchy="false">)</mml:mo>                                    <mml:mo>&#x02208;</mml:mo>                                    <mml:msub>                                       <mml:mi>V</mml:mi>                                       <mml:mn>1</mml:mn>                                    </mml:msub>                                    <mml:mo>&#x000d7;</mml:mo>                                    <mml:msub>                                       <mml:mi>V</mml:mi>                                       <mml:mn>2</mml:mn>                                    </mml:msub>                                 </mml:mrow>                              </mml:munder>                              <mml:mrow>                                 <mml:mi>&#x003c3;</mml:mi>                                 <mml:mo stretchy="false">(</mml:mo>                                 <mml:mi>i</mml:mi>                                 <mml:mo>,</mml:mo>                                 <mml:mi>j</mml:mi>                                 <mml:mo stretchy="false">)</mml:mo>                                 <mml:msub>                                    <mml:mi>x</mml:mi>                                    <mml:mrow>                                       <mml:mi>i</mml:mi>                                       <mml:mi>j</mml:mi>                                    </mml:mrow>                                 </mml:msub>                              </mml:mrow>                           </mml:mstyle>                           <mml:mo>+</mml:mo>                           <mml:mstyle displaystyle="true">                              <mml:munder>                                 <mml:mo>&#x02211;</mml:mo>                                 <mml:mrow>                                    <mml:mo stretchy="false">(</mml:mo>                                    <mml:mi>i</mml:mi>                                    <mml:mo>,</mml:mo>                                    <mml:mi>j</mml:mi>                                    <mml:mo stretchy="false">)</mml:mo>                                    <mml:mo>&#x02208;</mml:mo>                                    <mml:msub>                                       <mml:mi>V</mml:mi>                                       <mml:mn>1</mml:mn>                                    </mml:msub>                                    <mml:mo>&#x000d7;</mml:mo>                                    <mml:msub>                                       <mml:mi>V</mml:mi>                                       <mml:mn>2</mml:mn>                                    </mml:msub>                                 </mml:mrow>                              </mml:munder>                              <mml:mrow>                                 <mml:mstyle displaystyle="true">                                    <mml:munder>                                       <mml:mo>&#x02211;</mml:mo>                                       <mml:mrow>                                          <mml:mo stretchy="false">(</mml:mo>                                          <mml:mi>k</mml:mi>                                          <mml:mo>,</mml:mo>                                          <mml:mi>l</mml:mi>                                          <mml:mo stretchy="false">)</mml:mo>                                          <mml:mo>&#x02208;</mml:mo>                                          <mml:msub>                                             <mml:mi>V</mml:mi>                                             <mml:mn>1</mml:mn>                                          </mml:msub>                                          <mml:mo>&#x000d7;</mml:mo>                                          <mml:msub>                                             <mml:mi>V</mml:mi>                                             <mml:mn>2</mml:mn>                                          </mml:msub>                                       </mml:mrow>                                    </mml:munder>                                    <mml:mrow>                                       <mml:mi>&#x003c4;</mml:mi>                                       <mml:mo stretchy="false">(</mml:mo>                                       <mml:mi>i</mml:mi>                                       <mml:mo>,</mml:mo>                                       <mml:mi>j</mml:mi>                                       <mml:mo>,</mml:mo>                                       <mml:mi>k</mml:mi>                                       <mml:mo>,</mml:mo>                                       <mml:mi>l</mml:mi>                                       <mml:mo stretchy="false">)</mml:mo>                                       <mml:msub>                                          <mml:mi>x</mml:mi>                                          <mml:mrow>                                             <mml:mi>i</mml:mi>                                             <mml:mi>j</mml:mi>                                          </mml:mrow>                                       </mml:msub>                                       <mml:msub>                                          <mml:mi>x</mml:mi>                                          <mml:mrow>                                             <mml:mi>k</mml:mi>                                             <mml:mi>l</mml:mi>                                          </mml:mrow>                                       </mml:msub>                                    </mml:mrow>                                 </mml:mstyle>                              </mml:mrow>                           </mml:mstyle>                        </mml:mrow>                                             </mml:semantics>                  </mml:math></disp-formula></p><p><disp-formula id="bmcM2"><label>(2)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M10" name="1471-2105-10-S1-S59-i10" overflow="scroll">                     <mml:semantics>                        <mml:mrow>                           <mml:mtable>                              <mml:mtr>                                 <mml:mtd>                                    <mml:mrow>                                       <mml:mtext>s</mml:mtext>                                       <mml:mo>.</mml:mo>                                       <mml:mtext>t</mml:mtext>                                       <mml:mo>.</mml:mo>                                       <mml:mstyle displaystyle="true">                                          <mml:munder>                                             <mml:mo>&#x02211;</mml:mo>                                             <mml:mrow>                                                <mml:mo stretchy="false">(</mml:mo>                                                <mml:mi>i</mml:mi>                                                <mml:mo>,</mml:mo>                                                <mml:mi>j</mml:mi>                                                <mml:mo stretchy="false">)</mml:mo>                                                <mml:mo>&#x02208;</mml:mo>                                                <mml:mi>&#x003b4;</mml:mi>                                                <mml:mo stretchy="false">(</mml:mo>                                                <mml:mi>v</mml:mi>                                                <mml:mo stretchy="false">)</mml:mo>                                             </mml:mrow>                                          </mml:munder>                                          <mml:mrow>                                             <mml:msub>                                                <mml:mi>x</mml:mi>                                                <mml:mrow>                                                   <mml:mi>i</mml:mi>                                                   <mml:mi>j</mml:mi>                                                </mml:mrow>                                             </mml:msub>                                          </mml:mrow>                                       </mml:mstyle>                                       <mml:mo>&#x02264;</mml:mo>                                       <mml:mn>1</mml:mn>                                    </mml:mrow>                                 </mml:mtd>                                 <mml:mtd>                                    <mml:mrow>                                       <mml:mo>&#x02200;</mml:mo>                                       <mml:mi>v</mml:mi>                                       <mml:mo>&#x02208;</mml:mo>                                       <mml:msub>                                          <mml:mi>V</mml:mi>                                          <mml:mn>1</mml:mn>                                       </mml:msub>                                       <mml:mo>&#x0222a;</mml:mo>                                       <mml:msub>                                          <mml:mi>V</mml:mi>                                          <mml:mn>2</mml:mn>                                       </mml:msub>                                    </mml:mrow>                                 </mml:mtd>                              </mml:mtr>                           </mml:mtable>                        </mml:mrow>                                             </mml:semantics>                  </mml:math></disp-formula></p><p><disp-formula id="bmcM3"><label>(3)</label><italic>x</italic><sub><italic>ij </italic></sub>&#x02208; {0, 1}&#x000a0;&#x000a0;&#x000a0;&#x02200;(<italic>i</italic>, <italic>j</italic>) &#x02208; <italic>V</italic><sub>1 </sub>&#x000d7; <italic>V</italic><sub>2</sub></disp-formula></p><p>Inequalities (2) make sure that the choice of alignment edges corresponds to a matching in the bipartite graph and go back to Birkhoff's theorem [<xref ref-type="bibr" rid="B17">17</xref>]. Linearization leads to the following <italic>integer linear program </italic>(ILP), which forms the basis of our Lagrangian relaxation approach. We define variables <italic>y</italic><sub><italic>ijkl </italic></sub>= <italic>x</italic><sub><italic>ij</italic></sub><italic>x</italic><sub><italic>kl </italic></sub>and obtain</p><p><disp-formula id="bmcM4"><label>(4)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M11" name="1471-2105-10-S1-S59-i11" overflow="scroll">                     <mml:semantics>                        <mml:mrow>                           <mml:mi>max</mml:mi>                           <mml:mo>&#x02061;</mml:mo>                           <mml:mstyle displaystyle="true">                              <mml:munder>                                 <mml:mo>&#x02211;</mml:mo>                                 <mml:mrow>                                    <mml:mo stretchy="false">(</mml:mo>                                    <mml:mi>i</mml:mi>                                    <mml:mo>,</mml:mo>                                    <mml:mi>j</mml:mi>                                    <mml:mo stretchy="false">)</mml:mo>                                    <mml:mo>&#x02208;</mml:mo>                                    <mml:msub>                                       <mml:mi>V</mml:mi>                                       <mml:mn>1</mml:mn>                                    </mml:msub>                                    <mml:mo>&#x000d7;</mml:mo>                                    <mml:msub>                                       <mml:mi>V</mml:mi>                                       <mml:mn>2</mml:mn>                                    </mml:msub>                                 </mml:mrow>                              </mml:munder>                              <mml:mrow>                                 <mml:mi>&#x003c3;</mml:mi>                                 <mml:mo stretchy="false">(</mml:mo>                                 <mml:mi>i</mml:mi>                                 <mml:mo>,</mml:mo>                                 <mml:mi>j</mml:mi>                                 <mml:mo stretchy="false">)</mml:mo>                                 <mml:msub>                                    <mml:mi>x</mml:mi>                                    <mml:mrow>                                       <mml:mi>i</mml:mi>                                       <mml:mi>j</mml:mi>                                    </mml:mrow>                                 </mml:msub>                              </mml:mrow>                           </mml:mstyle>                           <mml:mo>+</mml:mo>                           <mml:mstyle displaystyle="true">                              <mml:munder>                                 <mml:mo>&#x02211;</mml:mo>                                 <mml:mrow>                                    <mml:mo stretchy="false">(</mml:mo>                                    <mml:mi>i</mml:mi>                                    <mml:mo>,</mml:mo>                                    <mml:mi>j</mml:mi>                                    <mml:mo stretchy="false">)</mml:mo>                                    <mml:mo>&#x02208;</mml:mo>                                    <mml:msub>                                       <mml:mi>V</mml:mi>                                       <mml:mn>1</mml:mn>                                    </mml:msub>                                    <mml:mo>&#x000d7;</mml:mo>                                    <mml:msub>                                       <mml:mi>V</mml:mi>                                       <mml:mn>2</mml:mn>                                    </mml:msub>                                 </mml:mrow>                              </mml:munder>                              <mml:mrow>                                 <mml:mstyle displaystyle="true">                                    <mml:munder>                                       <mml:mo>&#x02211;</mml:mo>                                       <mml:mrow>                                          <mml:mo stretchy="false">(</mml:mo>                                          <mml:mi>k</mml:mi>                                          <mml:mo>,</mml:mo>                                          <mml:mi>l</mml:mi>                                          <mml:mo stretchy="false">)</mml:mo>                                          <mml:mo>&#x02208;</mml:mo>                                          <mml:msub>                                             <mml:mi>V</mml:mi>                                             <mml:mn>1</mml:mn>                                          </mml:msub>                                          <mml:mo>&#x000d7;</mml:mo>                                          <mml:msub>                                             <mml:mi>V</mml:mi>                                             <mml:mn>2</mml:mn>                                          </mml:msub>                                       </mml:mrow>                                    </mml:munder>                                    <mml:mrow>                                       <mml:mi>&#x003c4;</mml:mi>                                       <mml:mo stretchy="false">(</mml:mo>                                       <mml:mi>i</mml:mi>                                       <mml:mo>,</mml:mo>                                       <mml:mi>j</mml:mi>                                       <mml:mo>,</mml:mo>                                       <mml:mi>k</mml:mi>                                       <mml:mo>,</mml:mo>                                       <mml:mi>l</mml:mi>                                       <mml:mo stretchy="false">)</mml:mo>                                       <mml:msub>                                          <mml:mi>y</mml:mi>                                          <mml:mrow>                                             <mml:mi>i</mml:mi>                                             <mml:mi>j</mml:mi>                                             <mml:mi>k</mml:mi>                                             <mml:mi>l</mml:mi>                                          </mml:mrow>                                       </mml:msub>                                    </mml:mrow>                                 </mml:mstyle>                              </mml:mrow>                           </mml:mstyle>                        </mml:mrow>                                             </mml:semantics>                  </mml:math></disp-formula></p><p><disp-formula id="bmcM5"><label>(5)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M12" name="1471-2105-10-S1-S59-i12" overflow="scroll">                     <mml:semantics>                        <mml:mrow>                           <mml:mtable>                              <mml:mtr>                                 <mml:mtd>                                    <mml:mrow>                                       <mml:mtext>s</mml:mtext>                                       <mml:mo>.</mml:mo>                                       <mml:mtext>t</mml:mtext>                                       <mml:mo>.</mml:mo>                                       <mml:mstyle displaystyle="true">                                          <mml:munder>                                             <mml:mo>&#x02211;</mml:mo>                                             <mml:mrow>                                                <mml:mo stretchy="false">(</mml:mo>                                                <mml:mi>i</mml:mi>                                                <mml:mo>,</mml:mo>                                                <mml:mi>j</mml:mi>                                                <mml:mo stretchy="false">)</mml:mo>                                                <mml:mo>&#x02208;</mml:mo>                                                <mml:mi>&#x003b4;</mml:mi>                                                <mml:mo stretchy="false">(</mml:mo>                                                <mml:mi>v</mml:mi>                                                <mml:mo stretchy="false">)</mml:mo>                                             </mml:mrow>                                          </mml:munder>                                          <mml:mrow>                                             <mml:msub>                                                <mml:mi>x</mml:mi>                                                <mml:mrow>                                                   <mml:mi>i</mml:mi>                                                   <mml:mi>j</mml:mi>                                                </mml:mrow>                                             </mml:msub>                                          </mml:mrow>                                       </mml:mstyle>                                       <mml:mo>&#x02264;</mml:mo>                                       <mml:mn>1</mml:mn>                                    </mml:mrow>                                 </mml:mtd>                                 <mml:mtd>                                    <mml:mrow>                                       <mml:mo>&#x02200;</mml:mo>                                       <mml:mi>v</mml:mi>                                       <mml:mo>&#x02208;</mml:mo>                                       <mml:msub>                                          <mml:mi>V</mml:mi>                                          <mml:mn>1</mml:mn>                                       </mml:msub>                                       <mml:mo>&#x0222a;</mml:mo>                                       <mml:msub>                                          <mml:mi>V</mml:mi>                                          <mml:mn>2</mml:mn>                                       </mml:msub>                                    </mml:mrow>                                 </mml:mtd>                              </mml:mtr>                           </mml:mtable>                        </mml:mrow>                                             </mml:semantics>                  </mml:math></disp-formula></p><p><disp-formula id="bmcM6"><label>(6)</label><italic>y</italic><sub><italic>ijkl </italic></sub>&#x02264; <italic>x</italic><sub><italic>ij</italic></sub>&#x000a0;&#x000a0;&#x000a0;&#x02200;(<italic>i</italic>, <italic>j</italic>, <italic>k</italic>, <italic>l</italic>) &#x02208; (<italic>V</italic><sub>1 </sub>&#x000d7; <italic>V</italic><sub>2</sub>)<sup>2</sup></disp-formula></p><p><disp-formula id="bmcM7"><label>(7)</label><italic>y</italic><sub><italic>ijkl </italic></sub>&#x02264; <italic>x</italic><sub><italic>kl</italic></sub>&#x000a0;&#x000a0;&#x000a0;&#x02200;(<italic>i</italic>, <italic>j</italic>, <italic>k</italic>, <italic>l</italic>) &#x02208; (<italic>V</italic><sub>1 </sub>&#x000d7; <italic>V</italic><sub>2</sub>)<sup>2</sup></disp-formula></p><p><disp-formula id="bmcM8"><label>(8)</label><italic>x</italic><sub><italic>ij </italic></sub>&#x02208; {0, 1}&#x000a0;&#x000a0;&#x000a0;&#x02200;(<italic>i</italic>, <italic>j</italic>) &#x02208; <italic>V</italic><sub>1 </sub>&#x000d7; <italic>V</italic><sub>2</sub></disp-formula></p><p><disp-formula id="bmcM9"><label>(9)</label><italic>y</italic><sub><italic>ijkl </italic></sub>&#x02208; {0, 1}&#x000a0;&#x000a0;&#x000a0;&#x02200;(<italic>i</italic>, <italic>j</italic>, <italic>k</italic>, <italic>l</italic>) &#x02208; (<italic>V</italic><sub>1 </sub>&#x000d7; <italic>V</italic><sub>2</sub>)<sup>2</sup></disp-formula></p><p>We now apply <italic>variable splitting </italic>or <italic>Lagrangian decomposition</italic>, a well-known technique in mathematical programming [<xref ref-type="bibr" rid="B18">18</xref>], to build a good basis for a Lagrangian approach. In computational biology, this technique has already been successfully applied to the maximum contact map overlap problem in computational structural proteomics [<xref ref-type="bibr" rid="B19">19</xref>] and to structural RNA alignment [<xref ref-type="bibr" rid="B15">15</xref>].</p><p>We therefore split each structural variable <italic>y</italic><sub><italic>ijkl </italic></sub>into two "directed" variables <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M13" name="1471-2105-10-S1-S59-i13" overflow="scroll"><mml:semantics><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>y</mml:mi><mml:mo>&#x02192;</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi><mml:mi>k</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:semantics></mml:math></inline-formula> and <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M14" name="1471-2105-10-S1-S59-i14" overflow="scroll"><mml:semantics><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>y</mml:mi><mml:mo>&#x02192;</mml:mo></mml:mover><mml:mrow><mml:mi>k</mml:mi><mml:mi>l</mml:mi><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:semantics></mml:math></inline-formula> and make sure that they adopt the same value. Likewise, we define new weights <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M15" name="1471-2105-10-S1-S59-i15" overflow="scroll"><mml:semantics><mml:mover accent="true"><mml:mi>&#x003c4;</mml:mi><mml:mo>&#x02192;</mml:mo></mml:mover></mml:semantics></mml:math></inline-formula> for the directed structural variables with the property</p><p><disp-formula id="bmcM10"><label>(10)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M16" name="1471-2105-10-S1-S59-i16" overflow="scroll">                     <mml:semantics>                        <mml:mrow>                           <mml:mover accent="true">                              <mml:mi>&#x003c4;</mml:mi>                              <mml:mo>&#x02192;</mml:mo>                           </mml:mover>                           <mml:mo stretchy="false">(</mml:mo>                           <mml:mi>i</mml:mi>                           <mml:mo>,</mml:mo>                           <mml:mi>j</mml:mi>                           <mml:mo>,</mml:mo>                           <mml:mi>k</mml:mi>                           <mml:mo>,</mml:mo>                           <mml:mi>l</mml:mi>                           <mml:mo stretchy="false">)</mml:mo>                           <mml:mo>+</mml:mo>                           <mml:mover accent="true">                              <mml:mi>&#x003c4;</mml:mi>                              <mml:mo>&#x02192;</mml:mo>                           </mml:mover>                           <mml:mo stretchy="false">(</mml:mo>                           <mml:mi>k</mml:mi>                           <mml:mo>,</mml:mo>                           <mml:mi>l</mml:mi>                           <mml:mo>,</mml:mo>                           <mml:mi>i</mml:mi>                           <mml:mo>,</mml:mo>                           <mml:mi>j</mml:mi>                           <mml:mo stretchy="false">)</mml:mo>                           <mml:mo>=</mml:mo>                           <mml:mi>&#x003c4;</mml:mi>                           <mml:mo stretchy="false">(</mml:mo>                           <mml:mi>i</mml:mi>                           <mml:mo>,</mml:mo>                           <mml:mi>j</mml:mi>                           <mml:mo>,</mml:mo>                           <mml:mi>k</mml:mi>                           <mml:mo>,</mml:mo>                           <mml:mi>l</mml:mi>                           <mml:mo stretchy="false">)</mml:mo>                           <mml:mo>,</mml:mo>                        </mml:mrow>                                             </mml:semantics>                  </mml:math></disp-formula></p><p>setting <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M17" name="1471-2105-10-S1-S59-i17" overflow="scroll"><mml:semantics><mml:mrow><mml:mover accent="true"><mml:mi>&#x003c4;</mml:mi><mml:mo>&#x02192;</mml:mo></mml:mover><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mi>l</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mover accent="true"><mml:mi>&#x003c4;</mml:mi><mml:mo>&#x02192;</mml:mo></mml:mover><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mi>l</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>&#x003c4;</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mi>l</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:mfrac></mml:mrow></mml:semantics></mml:math></inline-formula>. The resulting integer linear program is then:</p><p><disp-formula id="bmcM11"><label>(11)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M18" name="1471-2105-10-S1-S59-i18" overflow="scroll">                     <mml:semantics>                        <mml:mrow>                           <mml:mi>max</mml:mi>                           <mml:mo>&#x02061;</mml:mo>                           <mml:mstyle displaystyle="true">                              <mml:munder>                                 <mml:mo>&#x02211;</mml:mo>                                 <mml:mrow>                                    <mml:mo stretchy="false">(</mml:mo>                                    <mml:mi>i</mml:mi>                                    <mml:mo>,</mml:mo>                                    <mml:mi>j</mml:mi>                                    <mml:mo stretchy="false">)</mml:mo>                                    <mml:mo>&#x02208;</mml:mo>                                    <mml:msub>                                       <mml:mi>V</mml:mi>                                       <mml:mn>1</mml:mn>                                    </mml:msub>                                    <mml:mo>&#x000d7;</mml:mo>                                    <mml:msub>                                       <mml:mi>V</mml:mi>                                       <mml:mn>2</mml:mn>                                    </mml:msub>                                 </mml:mrow>                              </mml:munder>                              <mml:mrow>                                 <mml:mi>&#x003c3;</mml:mi>                                 <mml:mo stretchy="false">(</mml:mo>                                 <mml:mi>i</mml:mi>                                 <mml:mo>,</mml:mo>                                 <mml:mi>j</mml:mi>                                 <mml:mo stretchy="false">)</mml:mo>                                 <mml:msub>                                    <mml:mi>x</mml:mi>                                    <mml:mrow>                                       <mml:mi>i</mml:mi>                                       <mml:mi>j</mml:mi>                                    </mml:mrow>                                 </mml:msub>                              </mml:mrow>                           </mml:mstyle>                           <mml:mo>+</mml:mo>                           <mml:mstyle displaystyle="true">                              <mml:munder>                                 <mml:mo>&#x02211;</mml:mo>                                 <mml:mrow>                                    <mml:mo stretchy="false">(</mml:mo>                                    <mml:mi>i</mml:mi>                                    <mml:mo>,</mml:mo>                                    <mml:mi>j</mml:mi>                                    <mml:mo stretchy="false">)</mml:mo>                                    <mml:mo>&#x02208;</mml:mo>                                    <mml:msub>                                       <mml:mi>V</mml:mi>                                       <mml:mn>1</mml:mn>                                    </mml:msub>                                    <mml:mo>&#x000d7;</mml:mo>                                    <mml:msub>                                       <mml:mi>V</mml:mi>                                       <mml:mn>2</mml:mn>                                    </mml:msub>                                 </mml:mrow>                              </mml:munder>                              <mml:mrow>                                 <mml:mstyle displaystyle="true">                                    <mml:munder>                                       <mml:mo>&#x02211;</mml:mo>                                       <mml:mrow>                                          <mml:mo stretchy="false">(</mml:mo>                                          <mml:mi>k</mml:mi>                                          <mml:mo>,</mml:mo>                                          <mml:mi>l</mml:mi>                                          <mml:mo stretchy="false">)</mml:mo>                                          <mml:mo>&#x02208;</mml:mo>                                          <mml:msub>                                             <mml:mi>V</mml:mi>                                             <mml:mn>1</mml:mn>                                          </mml:msub>                                          <mml:mo>&#x000d7;</mml:mo>                                          <mml:msub>                                             <mml:mi>V</mml:mi>                                             <mml:mn>2</mml:mn>                                          </mml:msub>                                       </mml:mrow>                                    </mml:munder>                                    <mml:mrow>                                       <mml:mover accent="true">                                          <mml:mi>&#x003c4;</mml:mi>                                          <mml:mo>&#x02192;</mml:mo>                                       </mml:mover>                                       <mml:mo stretchy="false">(</mml:mo>                                       <mml:mi>i</mml:mi>                                       <mml:mo>,</mml:mo>                                       <mml:mi>j</mml:mi>                                       <mml:mo>,</mml:mo>                                       <mml:mi>k</mml:mi>                                       <mml:mo>,</mml:mo>                                       <mml:mi>l</mml:mi>                                       <mml:mo stretchy="false">)</mml:mo>                                       <mml:msub>                                          <mml:mover accent="true">                                             <mml:mi>y</mml:mi>                                             <mml:mo>&#x02192;</mml:mo>                                          </mml:mover>                                          <mml:mrow>                                             <mml:mi>i</mml:mi>                                             <mml:mi>j</mml:mi>                                             <mml:mi>k</mml:mi>                                             <mml:mi>l</mml:mi>                                          </mml:mrow>                                       </mml:msub>                                    </mml:mrow>                                 </mml:mstyle>                              </mml:mrow>                           </mml:mstyle>                        </mml:mrow>                                             </mml:semantics>                  </mml:math></disp-formula></p><p><disp-formula id="bmcM12"><label>(12)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M19" name="1471-2105-10-S1-S59-i19" overflow="scroll">                     <mml:semantics>                        <mml:mrow>                           <mml:mtable>                              <mml:mtr>                                 <mml:mtd>                                    <mml:mrow>                                       <mml:mtext>s</mml:mtext>                                       <mml:mo>.</mml:mo>                                       <mml:mtext>t</mml:mtext>                                       <mml:mo>.</mml:mo>                                       <mml:mstyle displaystyle="true">                                          <mml:munder>                                             <mml:mo>&#x02211;</mml:mo>                                             <mml:mrow>                                                <mml:mo stretchy="false">(</mml:mo>                                                <mml:mi>i</mml:mi>                                                <mml:mo>,</mml:mo>                                                <mml:mi>j</mml:mi>                                                <mml:mo stretchy="false">)</mml:mo>                                                <mml:mo>&#x02208;</mml:mo>                                                <mml:mi>&#x003b4;</mml:mi>                                                <mml:mo stretchy="false">(</mml:mo>                                                <mml:mi>v</mml:mi>                                                <mml:mo stretchy="false">)</mml:mo>                                             </mml:mrow>                                          </mml:munder>                                          <mml:mrow>                                             <mml:msub>                                                <mml:mi>x</mml:mi>                                                <mml:mrow>                                                   <mml:mi>i</mml:mi>                                                   <mml:mi>j</mml:mi>                                                </mml:mrow>                                             </mml:msub>                                          </mml:mrow>                                       </mml:mstyle>                                       <mml:mo>&#x02264;</mml:mo>                                       <mml:mn>1</mml:mn>                                    </mml:mrow>                                 </mml:mtd>                                 <mml:mtd>                                    <mml:mrow>                                       <mml:mo>&#x02200;</mml:mo>                                       <mml:mi>v</mml:mi>                                       <mml:mo>&#x02208;</mml:mo>                                       <mml:msub>                                          <mml:mi>V</mml:mi>                                          <mml:mn>1</mml:mn>                                       </mml:msub>                                       <mml:mo>&#x0222a;</mml:mo>                                       <mml:msub>                                          <mml:mi>V</mml:mi>                                          <mml:mn>2</mml:mn>                                       </mml:msub>                                    </mml:mrow>                                 </mml:mtd>                              </mml:mtr>                           </mml:mtable>                        </mml:mrow>                                             </mml:semantics>                  </mml:math></disp-formula></p><p><disp-formula id="bmcM13"><label>(13)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M20" name="1471-2105-10-S1-S59-i20" overflow="scroll">                     <mml:semantics>                        <mml:mrow>                           <mml:mtable>                              <mml:mtr>                                 <mml:mtd>                                    <mml:mrow>                                       <mml:msub>                                          <mml:mover accent="true">                                             <mml:mi>y</mml:mi>                                             <mml:mo>&#x02192;</mml:mo>                                          </mml:mover>                                          <mml:mrow>                                             <mml:mi>i</mml:mi>                                             <mml:mi>j</mml:mi>                                             <mml:mi>k</mml:mi>                                             <mml:mi>l</mml:mi>                                          </mml:mrow>                                       </mml:msub>                                       <mml:mo>&#x02264;</mml:mo>                                       <mml:msub>                                          <mml:mi>x</mml:mi>                                          <mml:mrow>                                             <mml:mi>i</mml:mi>                                             <mml:mi>j</mml:mi>                                          </mml:mrow>                                       </mml:msub>                                    </mml:mrow>                                 </mml:mtd>                                 <mml:mtd>                                    <mml:mrow>                                       <mml:mo>&#x02200;</mml:mo>                                       <mml:mo stretchy="false">(</mml:mo>                                       <mml:mi>i</mml:mi>                                       <mml:mo>,</mml:mo>                                       <mml:mi>j</mml:mi>                                       <mml:mo>,</mml:mo>                                       <mml:mi>k</mml:mi>                                       <mml:mo>,</mml:mo>                                       <mml:mi>l</mml:mi>                                       <mml:mo stretchy="false">)</mml:mo>                                       <mml:mo>&#x02208;</mml:mo>                                       <mml:msup>                                          <mml:mrow>                                             <mml:mo stretchy="false">(</mml:mo>                                             <mml:msub>                                                <mml:mi>V</mml:mi>                                                <mml:mn>1</mml:mn>                                             </mml:msub>                                             <mml:mo>&#x000d7;</mml:mo>                                             <mml:msub>                                                <mml:mi>V</mml:mi>                                                <mml:mn>2</mml:mn>                                             </mml:msub>                                             <mml:mo stretchy="false">)</mml:mo>                                          </mml:mrow>                                          <mml:mn>2</mml:mn>                                       </mml:msup>                                    </mml:mrow>                                 </mml:mtd>                              </mml:mtr>                           </mml:mtable>                        </mml:mrow>                                             </mml:semantics>                  </mml:math></disp-formula></p><p><disp-formula id="bmcM14"><label>(14)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M21" name="1471-2105-10-S1-S59-i21" overflow="scroll">                     <mml:semantics>                        <mml:mrow>                           <mml:mtable>                              <mml:mtr>                                 <mml:mtd>                                    <mml:mrow>                                       <mml:msub>                                          <mml:mover accent="true">                                             <mml:mi>y</mml:mi>                                             <mml:mo>&#x02192;</mml:mo>                                          </mml:mover>                                          <mml:mrow>                                             <mml:mi>i</mml:mi>                                             <mml:mi>j</mml:mi>                                             <mml:mi>k</mml:mi>                                             <mml:mi>l</mml:mi>                                          </mml:mrow>                                       </mml:msub>                                       <mml:mo>=</mml:mo>                                       <mml:msub>                                          <mml:mover accent="true">                                             <mml:mi>y</mml:mi>                                             <mml:mo>&#x02192;</mml:mo>                                          </mml:mover>                                          <mml:mrow>                                             <mml:mi>k</mml:mi>                                             <mml:mi>l</mml:mi>                                             <mml:mi>i</mml:mi>                                             <mml:mi>j</mml:mi>                                          </mml:mrow>                                       </mml:msub>                                    </mml:mrow>                                 </mml:mtd>                                 <mml:mtd>                                    <mml:mrow>                                       <mml:mo>&#x02200;</mml:mo>                                       <mml:mo stretchy="false">(</mml:mo>                                       <mml:mi>i</mml:mi>                                       <mml:mo>,</mml:mo>                                       <mml:mi>j</mml:mi>                                       <mml:mo>,</mml:mo>                                       <mml:mi>k</mml:mi>                                       <mml:mo>,</mml:mo>                                       <mml:mi>l</mml:mi>                                       <mml:mo stretchy="false">)</mml:mo>                                       <mml:mo>&#x02208;</mml:mo>                                       <mml:msup>                                          <mml:mrow>                                             <mml:mo stretchy="false">(</mml:mo>                                             <mml:msub>                                                <mml:mi>V</mml:mi>                                                <mml:mn>1</mml:mn>                                             </mml:msub>                                             <mml:mo>&#x000d7;</mml:mo>                                             <mml:msub>                                                <mml:mi>V</mml:mi>                                                <mml:mn>2</mml:mn>                                             </mml:msub>                                             <mml:mo stretchy="false">)</mml:mo>                                          </mml:mrow>                                          <mml:mn>2</mml:mn>                                       </mml:msup>                                    </mml:mrow>                                 </mml:mtd>                              </mml:mtr>                           </mml:mtable>                        </mml:mrow>                                             </mml:semantics>                  </mml:math></disp-formula></p><p><disp-formula id="bmcM15"><label>(15)</label><italic>x</italic><sub><italic>ij </italic></sub>&#x02208; {0, 1}&#x000a0;&#x000a0;&#x000a0;&#x02200;(<italic>i</italic>, <italic>j</italic>) &#x02208; <italic>V</italic><sub>1 </sub>&#x000d7; <italic>V</italic><sub>2</sub></disp-formula></p><p><disp-formula id="bmcM16"><label>(16)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M22" name="1471-2105-10-S1-S59-i22" overflow="scroll">                     <mml:semantics>                        <mml:mrow>                           <mml:mtable>                              <mml:mtr>                                 <mml:mtd>                                    <mml:mrow>                                       <mml:msub>                                          <mml:mover accent="true">                                             <mml:mi>y</mml:mi>                                             <mml:mo>&#x02192;</mml:mo>                                          </mml:mover>                                          <mml:mrow>                                             <mml:mi>i</mml:mi>                                             <mml:mi>j</mml:mi>                                             <mml:mi>k</mml:mi>                                             <mml:mi>l</mml:mi>                                          </mml:mrow>                                       </mml:msub>                                       <mml:mo>&#x02208;</mml:mo>                                       <mml:mo>{</mml:mo>                                       <mml:mn>0</mml:mn>                                       <mml:mo>,</mml:mo>                                       <mml:mn>1</mml:mn>                                       <mml:mo>}</mml:mo>                                    </mml:mrow>                                 </mml:mtd>                                 <mml:mtd>                                    <mml:mrow>                                       <mml:mo>&#x02200;</mml:mo>                                       <mml:mo stretchy="false">(</mml:mo>                                       <mml:mi>i</mml:mi>                                       <mml:mo>,</mml:mo>                                       <mml:mi>j</mml:mi>                                       <mml:mo>,</mml:mo>                                       <mml:mi>k</mml:mi>                                       <mml:mo>,</mml:mo>                                       <mml:mi>l</mml:mi>                                       <mml:mo stretchy="false">)</mml:mo>                                       <mml:mo>&#x02208;</mml:mo>                                       <mml:msup>                                          <mml:mrow>                                             <mml:mo stretchy="false">(</mml:mo>                                             <mml:msub>                                                <mml:mi>V</mml:mi>                                                <mml:mn>1</mml:mn>                                             </mml:msub>                                             <mml:mo>&#x000d7;</mml:mo>                                             <mml:msub>                                                <mml:mi>V</mml:mi>                                                <mml:mn>2</mml:mn>                                             </mml:msub>                                             <mml:mo stretchy="false">)</mml:mo>                                          </mml:mrow>                                          <mml:mn>2</mml:mn>                                       </mml:msup>                                    </mml:mrow>                                 </mml:mtd>                              </mml:mtr>                           </mml:mtable>                        </mml:mrow>                                             </mml:semantics>                  </mml:math></disp-formula></p><p>The following result allows us to concentrate on solving the ILP (11)&#x02013;(16).</p><p><bold>Theorem 2. </bold><italic>A feasible solution respecting the constraints of ILP (11)&#x02013;(16) corresponds to a structural matching in the alignment graph whose score is equal to the score of the objective function</italic>.</p><p><italic>Proof</italic>. Let (<italic>x</italic>, <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M23" name="1471-2105-10-S1-S59-i23" overflow="scroll"><mml:semantics><mml:mover accent="true"><mml:mi>y</mml:mi><mml:mo>&#x02192;</mml:mo></mml:mover></mml:semantics></mml:math></inline-formula>) be a feasible solution of the ILP. Clearly, <italic>x </italic>represents a network alignment. Now consider a variable <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M24" name="1471-2105-10-S1-S59-i13" overflow="scroll"><mml:semantics><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>y</mml:mi><mml:mo>&#x02192;</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi><mml:mi>k</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:semantics></mml:math></inline-formula> with <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M25" name="1471-2105-10-S1-S59-i13" overflow="scroll"><mml:semantics><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>y</mml:mi><mml:mo>&#x02192;</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi><mml:mi>k</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:semantics></mml:math></inline-formula> = 1. Inequality (13) ensures that the first half of the match, namely, (<italic>i</italic>, <italic>j</italic>), is realized, whereas the second half is taken care of by equality (14) in combination with inequality (13). Thus, the solution corresponds to a structural matching, the score of which, due to property (10), clearly equals the score of (11). For the other direction of the proof, setting the variables <italic>x </italic>and <italic>y </italic>according to the characteristic vectors of a structural matching does not violate any of the constraints. Again, it is easy to see that the structural score of the matching and the objective function value coincide.&#x000a0;&#x000a0;&#x000a0;&#x025a1;</p></sec><sec><title>Lagrangian relaxation for network alignment</title><p>Inspired by recent successes in solving similar integer linear programs using Lagrangian relaxation, we propose to employ this approach to find provably optimal and near-optimal solutions of ILP (11)&#x02013;(16).</p><p>Therefore, we relax constraint (14) and obtain the following <italic>relaxed problem</italic>:</p><p><disp-formula id="bmcM17"><label>(17)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M26" name="1471-2105-10-S1-S59-i24" overflow="scroll">                     <mml:semantics>                        <mml:mrow>                           <mml:mi>max</mml:mi>                           <mml:mo>&#x02061;</mml:mo>                           <mml:mstyle displaystyle="true">                              <mml:munder>                                 <mml:mo>&#x02211;</mml:mo>                                 <mml:mrow>                                    <mml:mo stretchy="false">(</mml:mo>                                    <mml:mi>i</mml:mi>                                    <mml:mo>,</mml:mo>                                    <mml:mi>j</mml:mi>                                    <mml:mo stretchy="false">)</mml:mo>                                    <mml:mo>&#x02208;</mml:mo>                                    <mml:msub>                                       <mml:mi>V</mml:mi>                                       <mml:mn>1</mml:mn>                                    </mml:msub>                                    <mml:mo>&#x000d7;</mml:mo>                                    <mml:msub>                                       <mml:mi>V</mml:mi>                                       <mml:mn>2</mml:mn>                                    </mml:msub>                                 </mml:mrow>                              </mml:munder>                              <mml:mrow>                                 <mml:mi>&#x003c3;</mml:mi>                                 <mml:mo stretchy="false">(</mml:mo>                                 <mml:mi>i</mml:mi>                                 <mml:mo>,</mml:mo>                                 <mml:mi>j</mml:mi>                                 <mml:mo stretchy="false">)</mml:mo>                                 <mml:msub>                                    <mml:mi>x</mml:mi>                                    <mml:mrow>                                       <mml:mi>i</mml:mi>                                       <mml:mi>j</mml:mi>                                    </mml:mrow>                                 </mml:msub>                              </mml:mrow>                           </mml:mstyle>                           <mml:mo>+</mml:mo>                           <mml:mstyle displaystyle="true">                              <mml:munder>                                 <mml:mo>&#x02211;</mml:mo>                                 <mml:mrow>                                    <mml:mo stretchy="false">(</mml:mo>                                    <mml:mi>i</mml:mi>                                    <mml:mo>,</mml:mo>                                    <mml:mi>j</mml:mi>                                    <mml:mo stretchy="false">)</mml:mo>                                    <mml:mo>&#x02208;</mml:mo>                                    <mml:msub>                                       <mml:mi>V</mml:mi>                                       <mml:mn>1</mml:mn>                                    </mml:msub>                                    <mml:mo>&#x000d7;</mml:mo>                                    <mml:msub>                                       <mml:mi>V</mml:mi>                                       <mml:mn>2</mml:mn>                                    </mml:msub>                                 </mml:mrow>                              </mml:munder>                              <mml:mrow>                                 <mml:mstyle displaystyle="true">                                    <mml:munder>                                       <mml:mo>&#x02211;</mml:mo>                                       <mml:mrow>                                          <mml:mo stretchy="false">(</mml:mo>                                          <mml:mi>k</mml:mi>                                          <mml:mo>,</mml:mo>                                          <mml:mi>l</mml:mi>                                          <mml:mo stretchy="false">)</mml:mo>                                          <mml:mo>&#x02208;</mml:mo>                                          <mml:msub>                                             <mml:mi>V</mml:mi>                                             <mml:mn>1</mml:mn>                                          </mml:msub>                                          <mml:mo>&#x000d7;</mml:mo>                                          <mml:msub>                                             <mml:mi>V</mml:mi>                                             <mml:mn>2</mml:mn>                                          </mml:msub>                                       </mml:mrow>                                    </mml:munder>                                    <mml:mrow>                                       <mml:mover accent="true">                                          <mml:mi>&#x003c4;</mml:mi>                                          <mml:mo>&#x02192;</mml:mo>                                       </mml:mover>                                       <mml:mo stretchy="false">(</mml:mo>                                       <mml:mi>i</mml:mi>                                       <mml:mo>,</mml:mo>                                       <mml:mi>j</mml:mi>                                       <mml:mo>,</mml:mo>                                       <mml:mi>k</mml:mi>                                       <mml:mo>,</mml:mo>                                       <mml:mi>l</mml:mi>                                       <mml:mo stretchy="false">)</mml:mo>                                       <mml:msub>                                          <mml:mover accent="true">                                             <mml:mi>y</mml:mi>                                             <mml:mo>&#x02192;</mml:mo>                                          </mml:mover>                                          <mml:mrow>                                             <mml:mi>i</mml:mi>                                             <mml:mi>j</mml:mi>                                             <mml:mi>k</mml:mi>                                             <mml:mi>l</mml:mi>                                          </mml:mrow>                                       </mml:msub>                                    </mml:mrow>                                 </mml:mstyle>                                 <mml:mo>+</mml:mo>                                 <mml:mstyle displaystyle="true">                                    <mml:munder>                                       <mml:mo>&#x02211;</mml:mo>                                       <mml:mrow>                                          <mml:mo stretchy="false">(</mml:mo>                                          <mml:mi>i</mml:mi>                                          <mml:mo>,</mml:mo>                                          <mml:mi>j</mml:mi>                                          <mml:mo stretchy="false">)</mml:mo>                                          <mml:mo>&#x02208;</mml:mo>                                          <mml:msub>                                             <mml:mi>V</mml:mi>                                             <mml:mn>1</mml:mn>                                          </mml:msub>                                          <mml:mo>&#x000d7;</mml:mo>                                          <mml:msub>                                             <mml:mi>V</mml:mi>                                             <mml:mn>2</mml:mn>                                          </mml:msub>                                       </mml:mrow>                                    </mml:munder>                                    <mml:mrow>                                       <mml:mstyle displaystyle="true">                                          <mml:munder>                                             <mml:mo>&#x02211;</mml:mo>                                             <mml:mrow>                                                <mml:mo stretchy="false">(</mml:mo>                                                <mml:mi>k</mml:mi>                                                <mml:mo>,</mml:mo>                                                <mml:mi>l</mml:mi>                                                <mml:mo stretchy="false">)</mml:mo>                                                <mml:mo>&#x02208;</mml:mo>                                                <mml:msub>                                                   <mml:mi>V</mml:mi>                                                   <mml:mn>1</mml:mn>                                                </mml:msub>                                                <mml:mo>&#x000d7;</mml:mo>                                                <mml:msub>                                                   <mml:mi>V</mml:mi>                                                   <mml:mn>2</mml:mn>                                                </mml:msub>                                             </mml:mrow>                                          </mml:munder>                                          <mml:mrow>                                             <mml:msub>                                                <mml:mi>&#x003bb;</mml:mi>                                                <mml:mrow>                                                   <mml:mi>i</mml:mi>                                                   <mml:mi>j</mml:mi>                                                   <mml:mi>k</mml:mi>                                                   <mml:mi>l</mml:mi>                                                </mml:mrow>                                             </mml:msub>                                             <mml:mo stretchy="false">(</mml:mo>                                             <mml:msub>                                                <mml:mover accent="true">                                                   <mml:mi>y</mml:mi>                                                   <mml:mo>&#x02192;</mml:mo>                                                </mml:mover>                                                <mml:mrow>                                                   <mml:mi>i</mml:mi>                                                   <mml:mi>j</mml:mi>                                                   <mml:mi>k</mml:mi>                                                   <mml:mi>l</mml:mi>                                                </mml:mrow>                                             </mml:msub>                                             <mml:mo>&#x02212;</mml:mo>                                             <mml:msub>                                                <mml:mover accent="true">                                                   <mml:mi>y</mml:mi>                                                   <mml:mo>&#x02192;</mml:mo>                                                </mml:mover>                                                <mml:mrow>                                                   <mml:mi>k</mml:mi>                                                   <mml:mi>l</mml:mi>                                                   <mml:mi>i</mml:mi>                                                   <mml:mi>j</mml:mi>                                                </mml:mrow>                                             </mml:msub>                                             <mml:mo stretchy="false">)</mml:mo>                                          </mml:mrow>                                       </mml:mstyle>                                    </mml:mrow>                                 </mml:mstyle>                              </mml:mrow>                           </mml:mstyle>                        </mml:mrow>                                             </mml:semantics>                  </mml:math></disp-formula></p><p><disp-formula id="bmcM18"><label>(18)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M27" name="1471-2105-10-S1-S59-i25" overflow="scroll">                     <mml:semantics>                        <mml:mrow>                           <mml:mtable>                              <mml:mtr>                                 <mml:mtd>                                    <mml:mrow>                                       <mml:mtext>s</mml:mtext>                                       <mml:mo>.</mml:mo>                                       <mml:mtext>t</mml:mtext>                                       <mml:mo>.</mml:mo>                                       <mml:mstyle displaystyle="true">                                          <mml:munder>                                             <mml:mo>&#x02211;</mml:mo>                                             <mml:mrow>                                                <mml:mo stretchy="false">(</mml:mo>                                                <mml:mi>i</mml:mi>                                                <mml:mo>,</mml:mo>                                                <mml:mi>j</mml:mi>                                                <mml:mo stretchy="false">)</mml:mo>                                                <mml:mo>&#x02208;</mml:mo>                                                <mml:mi>&#x003b4;</mml:mi>                                                <mml:mo stretchy="false">(</mml:mo>                                                <mml:mi>v</mml:mi>                                                <mml:mo stretchy="false">)</mml:mo>                                             </mml:mrow>                                          </mml:munder>                                          <mml:mrow>                                             <mml:msub>                                                <mml:mi>x</mml:mi>                                                <mml:mrow>                                                   <mml:mi>i</mml:mi>                                                   <mml:mi>j</mml:mi>                                                </mml:mrow>                                             </mml:msub>                                          </mml:mrow>                                       </mml:mstyle>                                       <mml:mo>&#x02264;</mml:mo>                                       <mml:mn>1</mml:mn>                                    </mml:mrow>                                 </mml:mtd>                                 <mml:mtd>                                    <mml:mrow>                                       <mml:mo>&#x02200;</mml:mo>                                       <mml:mi>v</mml:mi>                                       <mml:mo>&#x02208;</mml:mo>                                       <mml:msub>                                          <mml:mi>V</mml:mi>                                          <mml:mn>1</mml:mn>                                       </mml:msub>                                       <mml:mo>&#x0222a;</mml:mo>                                       <mml:msub>                                          <mml:mi>V</mml:mi>                                          <mml:mn>2</mml:mn>                                       </mml:msub>                                    </mml:mrow>                                 </mml:mtd>                              </mml:mtr>                           </mml:mtable>                        </mml:mrow>                                             </mml:semantics>                  </mml:math></disp-formula></p><p><disp-formula id="bmcM19"><label>(19)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M28" name="1471-2105-10-S1-S59-i26" overflow="scroll">                     <mml:semantics>                        <mml:mrow>                           <mml:mtable>                              <mml:mtr>                                 <mml:mtd>                                    <mml:mrow>                                       <mml:msub>                                          <mml:mover accent="true">                                             <mml:mi>y</mml:mi>                                             <mml:mo>&#x02192;</mml:mo>                                          </mml:mover>                                          <mml:mrow>                                             <mml:mi>i</mml:mi>                                             <mml:mi>j</mml:mi>                                             <mml:mi>k</mml:mi>                                             <mml:mi>l</mml:mi>                                          </mml:mrow>                                       </mml:msub>                                       <mml:mo>&#x02264;</mml:mo>                                       <mml:msub>                                          <mml:mi>x</mml:mi>                                          <mml:mrow>                                             <mml:mi>i</mml:mi>                                             <mml:mi>j</mml:mi>                                          </mml:mrow>                                       </mml:msub>                                    </mml:mrow>                                 </mml:mtd>                                 <mml:mtd>                                    <mml:mrow>                                       <mml:mo>&#x02200;</mml:mo>                                       <mml:mo stretchy="false">(</mml:mo>                                       <mml:mi>i</mml:mi>                                       <mml:mo>,</mml:mo>                                       <mml:mi>j</mml:mi>                                       <mml:mo>,</mml:mo>                                       <mml:mi>k</mml:mi>                                       <mml:mo>,</mml:mo>                                       <mml:mi>l</mml:mi>                                       <mml:mo stretchy="false">)</mml:mo>                                       <mml:mo>&#x02208;</mml:mo>                                       <mml:msup>                                          <mml:mrow>                                             <mml:mo stretchy="false">(</mml:mo>                                             <mml:msub>                                                <mml:mi>V</mml:mi>                                                <mml:mn>1</mml:mn>                                             </mml:msub>                                             <mml:mo>&#x000d7;</mml:mo>                                             <mml:msub>                                                <mml:mi>V</mml:mi>                                                <mml:mn>2</mml:mn>                                             </mml:msub>                                             <mml:mo stretchy="false">)</mml:mo>                                          </mml:mrow>                                          <mml:mn>2</mml:mn>                                       </mml:msup>                                    </mml:mrow>                                 </mml:mtd>                              </mml:mtr>                           </mml:mtable>                        </mml:mrow>                                             </mml:semantics>                  </mml:math></disp-formula></p><p><disp-formula id="bmcM20"><label>(20)</label><italic>x</italic><sub><italic>ij </italic></sub>&#x02208; {0, 1}&#x000a0;&#x000a0;&#x000a0;&#x02200;(<italic>i</italic>, <italic>j</italic>) &#x02208; <italic>V</italic><sub>1 </sub>&#x000d7; <italic>V</italic><sub>2</sub></disp-formula></p><p><disp-formula id="bmcM21"><label>(21)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M29" name="1471-2105-10-S1-S59-i27" overflow="scroll">                     <mml:semantics>                        <mml:mrow>                           <mml:mtable>                              <mml:mtr>                                 <mml:mtd>                                    <mml:mrow>                                       <mml:msub>                                          <mml:mover accent="true">                                             <mml:mi>y</mml:mi>                                             <mml:mo>&#x02192;</mml:mo>                                          </mml:mover>                                          <mml:mrow>                                             <mml:mi>i</mml:mi>                                             <mml:mi>j</mml:mi>                                             <mml:mi>k</mml:mi>                                             <mml:mi>l</mml:mi>                                          </mml:mrow>                                       </mml:msub>                                       <mml:mo>&#x02208;</mml:mo>                                       <mml:mo>{</mml:mo>                                       <mml:mn>0</mml:mn>                                       <mml:mo>,</mml:mo>                                       <mml:mn>1</mml:mn>                                       <mml:mo>}</mml:mo>                                    </mml:mrow>                                 </mml:mtd>                                 <mml:mtd>                                    <mml:mrow>                                       <mml:mo>&#x02200;</mml:mo>                                       <mml:mo stretchy="false">(</mml:mo>                                       <mml:mi>i</mml:mi>                                       <mml:mo>,</mml:mo>                                       <mml:mi>j</mml:mi>                                       <mml:mo>,</mml:mo>                                       <mml:mi>k</mml:mi>                                       <mml:mo>,</mml:mo>                                       <mml:mi>l</mml:mi>                                       <mml:mo stretchy="false">)</mml:mo>                                       <mml:mo>&#x02208;</mml:mo>                                       <mml:msup>                                          <mml:mrow>                                             <mml:mo stretchy="false">(</mml:mo>                                             <mml:msub>                                                <mml:mi>V</mml:mi>                                                <mml:mn>1</mml:mn>                                             </mml:msub>                                             <mml:mo>&#x000d7;</mml:mo>                                             <mml:msub>                                                <mml:mi>V</mml:mi>                                                <mml:mn>2</mml:mn>                                             </mml:msub>                                             <mml:mo stretchy="false">)</mml:mo>                                          </mml:mrow>                                          <mml:mn>2</mml:mn>                                       </mml:msup>                                    </mml:mrow>                                 </mml:mtd>                              </mml:mtr>                           </mml:mtable>                        </mml:mrow>                                             </mml:semantics>                  </mml:math></disp-formula></p><p>Here, vector <italic>&#x003bb; </italic>contains the <italic>Lagrangian multipliers</italic>, which penalize the violation of (14). We exploit the fact that, in our case, <italic>&#x003bb;</italic><sub><italic>ijkl </italic></sub>= -<italic>&#x003bb;</italic><sub><italic>klij </italic></sub>and rewrite (17) as</p><p><disp-formula id="bmcM22"><label>(22)</label><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M30" name="1471-2105-10-S1-S59-i28" overflow="scroll">                     <mml:semantics>                        <mml:mrow>                           <mml:mi>max</mml:mi>                           <mml:mo>&#x02061;</mml:mo>                           <mml:mstyle displaystyle="true">                              <mml:munder>                                 <mml:mo>&#x02211;</mml:mo>                                 <mml:mrow>                                    <mml:mo stretchy="false">(</mml:mo>                                    <mml:mi>i</mml:mi>                                    <mml:mo>,</mml:mo>                                    <mml:mi>j</mml:mi>                                    <mml:mo stretchy="false">)</mml:mo>                                    <mml:mo>&#x02208;</mml:mo>                                    <mml:msub>                                       <mml:mi>V</mml:mi>                                       <mml:mn>1</mml:mn>                                    </mml:msub>                                    <mml:mo>&#x000d7;</mml:mo>                                    <mml:msub>                                       <mml:mi>V</mml:mi>                                       <mml:mn>2</mml:mn>                                    </mml:msub>                                 </mml:mrow>                              </mml:munder>                              <mml:mrow>                                 <mml:mi>&#x003c3;</mml:mi>                                 <mml:mo stretchy="false">(</mml:mo>                                 <mml:mi>i</mml:mi>                                 <mml:mo>,</mml:mo>                                 <mml:mi>j</mml:mi>                                 <mml:mo stretchy="false">)</mml:mo>                                 <mml:msub>                                    <mml:mi>x</mml:mi>                                    <mml:mrow>                                       <mml:mi>i</mml:mi>                                       <mml:mi>j</mml:mi>                                    </mml:mrow>                                 </mml:msub>                              </mml:mrow>                           </mml:mstyle>                           <mml:mo>+</mml:mo>                           <mml:mstyle displaystyle="true">                              <mml:munder>                                 <mml:mo>&#x02211;</mml:mo>                                 <mml:mrow>                                    <mml:mo stretchy="false">(</mml:mo>                                    <mml:mi>i</mml:mi>                                    <mml:mo>,</mml:mo>                                    <mml:mi>j</mml:mi>                                    <mml:mo stretchy="false">)</mml:mo>                                    <mml:mo>&#x02208;</mml:mo>                                    <mml:msub>                                       <mml:mi>V</mml:mi>                                       <mml:mn>1</mml:mn>                                    </mml:msub>                                    <mml:mo>&#x000d7;</mml:mo>                                    <mml:msub>                                       <mml:mi>V</mml:mi>                                       <mml:mn>2</mml:mn>                                    </mml:msub>                                 </mml:mrow>                              </mml:munder>                              <mml:mrow>                                 <mml:mstyle displaystyle="true">                                    <mml:munder>                                       <mml:mo>&#x02211;</mml:mo>                                       <mml:mrow>                                          <mml:mo stretchy="false">(</mml:mo>                                          <mml:mi>k</mml:mi>                                          <mml:mo>,</mml:mo>                                          <mml:mi>l</mml:mi>                                          <mml:mo stretchy="false">)</mml:mo>                                          <mml:mo>&#x02208;</mml:mo>                                          <mml:msub>                                             <mml:mi>V</mml:mi>                                             <mml:mn>1</mml:mn>                                          </mml:msub>                                          <mml:mo>&#x000d7;</mml:mo>                                          <mml:msub>                                             <mml:mi>V</mml:mi>                                             <mml:mn>2</mml:mn>                                          </mml:msub>                                       </mml:mrow>                                    </mml:munder>                                    <mml:mrow>                                       <mml:mo stretchy="false">(</mml:mo>                                       <mml:mover accent="true">                                          <mml:mi>&#x003c4;</mml:mi>                                          <mml:mo>&#x02192;</mml:mo>                                       </mml:mover>                                       <mml:mo stretchy="false">(</mml:mo>                                       <mml:mi>i</mml:mi>                                       <mml:mo>,</mml:mo>                                       <mml:mi>j</mml:mi>                                       <mml:mo>,</mml:mo>                                       <mml:mi>k</mml:mi>                                       <mml:mo>,</mml:mo>                                       <mml:mi>l</mml:mi>                                       <mml:mo stretchy="false">)</mml:mo>                                       <mml:mo>+</mml:mo>                                       <mml:msub>                                          <mml:mi>&#x003bb;</mml:mi>                                          <mml:mrow>                                             <mml:mi>i</mml:mi>                                             <mml:mi>j</mml:mi>                                             <mml:mi>k</mml:mi>                                             <mml:mi>l</mml:mi>                                          </mml:mrow>                                       </mml:msub>                                       <mml:mo stretchy="false">)</mml:mo>                                       <mml:msub>                                          <mml:mover accent="true">                                             <mml:mi>y</mml:mi>                                             <mml:mo>&#x02192;</mml:mo>                                          </mml:mover>                                          <mml:mrow>                                             <mml:mi>i</mml:mi>                                             <mml:mi>j</mml:mi>                                             <mml:mi>k</mml:mi>                                             <mml:mi>l</mml:mi>                                          </mml:mrow>                                       </mml:msub>                                    </mml:mrow>                                 </mml:mstyle>                              </mml:mrow>                           </mml:mstyle>                           <mml:mo>.</mml:mo>                        </mml:mrow>                                             </mml:semantics>                  </mml:math></disp-formula></p><p>A fundamental result in mathematical optimization says that for each choice of penalty terms <italic>&#x003bb;</italic>, each solution of the relaxed problem provides an upper bound for the original problem. Naturally, we are interested in the tightest such bound.</p><p>The penalty vectors in (22) change the weights of the structural matches and, intuitively, can be used to force pairs of complementary directed structural match variables to agree on their choices. We employ <italic>subgradient optimization </italic>for this task and find the Lagrangian multipliers that yield the lowest upper bound. Subgradient optimization is an iterative process that involves solving the relaxed problem over and over again, see, for example [<xref ref-type="bibr" rid="B20">20</xref>] for a detailed description of the method. The following result implies that we can do this efficiently.</p><p><bold>Theorem 3. </bold><italic>The relaxed problem can be reduced to the bipartite matching problem and can be solved in polynomial time</italic>.</p><p><italic>Proof</italic>. The proof is similar to the one given in [<xref ref-type="bibr" rid="B19">19</xref>] for the contact map overlap problem and rests upon the observation that each directed structural match variable can be assigned unambiguously to an alignment variable &#x02013; unlike in the undirected, original case. We can therefore concentrate on the alignment variables <italic>x</italic>. If such a variable <italic>x</italic><sub><italic>ij </italic></sub>is zero, then its contribution to the objective function is zero as well, since all incident directed structural match variables <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M31" name="1471-2105-10-S1-S59-i13" overflow="scroll"><mml:semantics><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>y</mml:mi><mml:mo>&#x02192;</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi><mml:mi>k</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:semantics></mml:math></inline-formula> are forced to zero due to constraint (19). If, on the other hand, an edge (<italic>i</italic>, <italic>j</italic>) is part of the solution, we can compute its contribution to the objective function, or its <italic>profit</italic>, in polynomial time as follows: we assign the weight <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M32" name="1471-2105-10-S1-S59-i15" overflow="scroll"><mml:semantics><mml:mover accent="true"><mml:mi>&#x003c4;</mml:mi><mml:mo>&#x02192;</mml:mo></mml:mover></mml:semantics></mml:math></inline-formula>(<italic>i</italic>, <italic>j</italic>, <italic>k</italic>, <italic>l</italic>) + <italic>&#x003bb;</italic><sub><italic>ijkl </italic></sub>to each edge (<italic>l</italic>, <italic>m</italic>) in the alignment graph and compute the profit <italic>p</italic><sub><italic>ij </italic></sub>of edge (<italic>i</italic>, <italic>j</italic>) via a maximum bipartite matching according to these weights. The resulting matching corresponds to the best case that may happen if alignment edge (<italic>i</italic>, <italic>j</italic>) is part of the solution.</p><p>To compute the overall best solution, we choose those alignment edges that give the best network alignment according to their profits <italic>p</italic>. Again, this is a bipartite matching problem, which can be solved in polynomial time.&#x000a0;&#x000a0;&#x000a0;&#x025a1;</p><p>Theorem 3 gives us a good upper bound. In order to find good lower bounds, we analyze the network alignment given by the solution of each relaxed problem and compute the best <italic>structural completion</italic>, yielding a feasible solution for the original problem. Given a matching <italic>M</italic>, we simply add all structural matches (<italic>i</italic>, <italic>j</italic>), (<italic>k</italic>, <italic>l</italic>) with both (<italic>i</italic>, <italic>j</italic>) &#x02208; <italic>M </italic>and (<italic>k</italic>, <italic>l</italic>) &#x02208; <italic>M</italic>.</p><p>Let <italic>u</italic>*, <italic>l</italic>* be the best upper and lower bounds found by our algorithm, respectively, and let (<italic>x</italic>*, <italic>y</italic>*) be the best solution it finds. Our algorithm for network alignment is then as follows:</p><p>1 <italic>Initialization</italic>;</p><p>2 <italic>&#x003bb; </italic>= 0; <italic>u</italic>* = &#x0221e;; <italic>l</italic>* = -&#x0221e;;</p><p>3 <italic>Main Loop</italic>;</p><p>4 <bold>repeat</bold></p><p>5&#x000a0;&#x000a0;&#x000a0;<italic>x </italic>= solution of relaxed problem with value <italic>u</italic>;</p><p>6&#x000a0;&#x000a0;&#x000a0;adapt Lagrangian multipliers;</p><p>7&#x000a0;&#x000a0;&#x000a0;compute structural completion (<italic>x</italic>, <italic>y</italic>) of <italic>x </italic>with value <italic>l</italic>;</p><p>8&#x000a0;&#x000a0;&#x000a0;<bold>if </bold><italic>u </italic>&#x0003c;<italic>u</italic>* <bold>then </bold><italic>u</italic>* = <italic>u</italic>;</p><p>9&#x000a0;&#x000a0;&#x000a0;<bold>if </bold><italic>l </italic>&#x0003e; <italic>l</italic>* <bold>then</bold></p><p>10&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;<italic>l</italic>* = <italic>l</italic>;</p><p>11&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;(<italic>x</italic>*, <italic>y</italic>*) = (<italic>x</italic>, <italic>y</italic>);</p><p>12 <bold>until </bold><italic>l</italic>* = <italic>u</italic>* <italic>or some termination criteria are met</italic>;</p><p>As the structural matching problem is <italic>NP</italic>-hard, there will, in the general case, be a duality gap unless <italic>P </italic>equals <italic>NP</italic>. In other words, there will be instances for which <italic>u</italic>* and <italic>l</italic>* will not coincide. Therefore we define some additional termination criteria like, for example, a maximal number of iterations. Although the possible duality gap makes our algorithm heuristic in nature, it nevertheless comes with a quality guarantee due to the computation of the upper bound. Often this bound is quite good, and then it is fair to say that our algorithm efficiently computes provably near-optimal solutions. In addition, it is straightforward to embed the Lagrangian approach into a branch-and-bound framework resulting in a truly exact approach for the network alignment problem, which will then, of course, take exponential time to finish for some instances.</p></sec></sec><sec><title>Results and discussion</title><p>We have implemented that Lagrangian algorithm for network alignment described in the previous section and offer it as the freely available software tool <sc>NATALIE</sc> within the P<sc>LANET</sc> L<sc>ISA</sc> framework. P<sc>LANET</sc> L<sc>ISA</sc> is a library of algorithms for computational structural and systems biology, which has initially been created to facilitate computational structural comparisons of RNA molecules and proteins [<xref ref-type="bibr" rid="B21">21</xref>]. In its basic version, <sc>NATALIE</sc> reads in two graphs in GraphML format [<xref ref-type="bibr" rid="B22">22</xref>] as well as additional information that determine the <italic>&#x003c3;</italic>- and <italic>&#x003c4;</italic>-parts in the scoring function depending on the application.</p><p>The purpose of this paper is to introduce the new method; we have not yet performed a detailed comparative study including other tools, which we plan to carry out as future work. We present, however, preliminary results from two ongoing projects that utilize the <sc>NATALIE</sc> algorithm. These studies demonstrate that the method works well in practice and has a high potential to become a very competitive tool in the area of network alignment.</p><sec><title>First proof of concept: comparison of protein-protein interaction networks</title><p>In a cooperation with the Knowledge Management in Bioinformatics group of the Humboldt-Universit&#x000e4;t Berlin we use <sc>NATALIE</sc> to align protein-protein interaction networks based on orthology information about proteins in different species.</p><p>We analyze data from the following four species: <italic>Homo sapiens</italic>, <italic>Mus musculus</italic>, <italic>Drosophila melanogaster</italic>, and <italic>Saccharomyces cerevisiae</italic>. The PPI networks were obtained using data from several open databases and their origin is described in [<xref ref-type="bibr" rid="B11">11</xref>]. Candidates for orthologous proteins between the species were determined using protein enzyme classes, InterPro domains, and a minimum sequence identity threshold of <italic>&#x003b1; </italic>= 0.4, see again [<xref ref-type="bibr" rid="B11">11</xref>] for details. In a prototypical experiment, we compare the network of <italic>H. sapiens </italic>against all other networks using a simple scoring function. Table <xref ref-type="table" rid="T1">1</xref> provides information about the network sizes, where <italic>n </italic>and <italic>m </italic>denote the number of nodes and edges in the networks, and the average number of potential orthologs for a sequence identity threshold of <italic>&#x003b1; </italic>= 0.4 as compared to the network of <italic>H. sapiens</italic>. We use the following scoring function and align the three pairs of PPI networks. We set</p><p><disp-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M33" name="1471-2105-10-S1-S59-i29" overflow="scroll">                     <mml:semantics>                        <mml:mrow>                           <mml:mtable>                              <mml:mtr>                                 <mml:mtd>                                    <mml:mrow>                                       <mml:mi>&#x003c3;</mml:mi>                                       <mml:mo stretchy="false">(</mml:mo>                                       <mml:mi>i</mml:mi>                                       <mml:mo>,</mml:mo>                                       <mml:mi>j</mml:mi>                                       <mml:mo stretchy="false">)</mml:mo>                                       <mml:mo>=</mml:mo>                                       <mml:mrow>                                          <mml:mo>{</mml:mo>                                          <mml:mrow>                                             <mml:mtable columnalign="left">                                                <mml:mtr columnalign="left">                                                   <mml:mtd columnalign="left">                                                      <mml:mn>0</mml:mn>                                                   </mml:mtd>                                                   <mml:mtd columnalign="left">                                                      <mml:mrow>                                                         <mml:mtext>if&#x000a0;protein&#x000a0;</mml:mtext>                                                         <mml:mi>i</mml:mi>                                                         <mml:mtext>&#x000a0;and&#x000a0;</mml:mtext>                                                         <mml:mi>j</mml:mi>                                                         <mml:mtext>&#x000a0;are&#x000a0;orthologous&#x000a0;candidates</mml:mtext>                                                      </mml:mrow>                                                   </mml:mtd>                                                </mml:mtr>                                                <mml:mtr columnalign="left">                                                   <mml:mtd columnalign="left">                                                      <mml:mrow>                                                         <mml:mo>&#x02212;</mml:mo>                                                         <mml:mi>&#x0221e;</mml:mi>                                                      </mml:mrow>                                                   </mml:mtd>                                                   <mml:mtd columnalign="left">                                                      <mml:mrow>                                                         <mml:mtext>otherwise</mml:mtext>                                                      </mml:mrow>                                                   </mml:mtd>                                                </mml:mtr>                                             </mml:mtable>                                          </mml:mrow>                                       </mml:mrow>                                    </mml:mrow>                                 </mml:mtd>                              </mml:mtr>                              <mml:mtr>                                 <mml:mtd>                                    <mml:mrow>                                       <mml:mi>&#x003c4;</mml:mi>                                       <mml:mo stretchy="false">(</mml:mo>                                       <mml:mi>i</mml:mi>                                       <mml:mo>,</mml:mo>                                       <mml:mi>j</mml:mi>                                       <mml:mo>,</mml:mo>                                       <mml:mi>k</mml:mi>                                       <mml:mo>,</mml:mo>                                       <mml:mi>l</mml:mi>                                       <mml:mo stretchy="false">)</mml:mo>                                       <mml:mo>=</mml:mo>                                       <mml:mrow>                                          <mml:mo>{</mml:mo>                                          <mml:mrow>                                             <mml:mtable columnalign="left">                                                <mml:mtr columnalign="left">                                                   <mml:mtd columnalign="left">                                                      <mml:mn>1</mml:mn>                                                   </mml:mtd>                                                   <mml:mtd columnalign="left">                                                      <mml:mrow>                                                         <mml:mtext>if&#x000a0;both&#x000a0;interactions&#x000a0;</mml:mtext>                                                         <mml:mo stretchy="false">(</mml:mo>                                                         <mml:mi>i</mml:mi>                                                         <mml:mo>,</mml:mo>                                                         <mml:mi>k</mml:mi>                                                         <mml:mo stretchy="false">)</mml:mo>                                                         <mml:mtext>&#x000a0;and&#x000a0;</mml:mtext>                                                         <mml:mo stretchy="false">(</mml:mo>                                                         <mml:mi>j</mml:mi>                                                         <mml:mo>,</mml:mo>                                                         <mml:mi>l</mml:mi>                                                         <mml:mo stretchy="false">)</mml:mo>                                                         <mml:mtext>&#x000a0;exist</mml:mtext>                                                      </mml:mrow>                                                   </mml:mtd>                                                </mml:mtr>                                                <mml:mtr columnalign="left">                                                   <mml:mtd columnalign="left">                                                      <mml:mn>0</mml:mn>                                                   </mml:mtd>                                                   <mml:mtd columnalign="left">                                                      <mml:mrow>                                                         <mml:mtext>otherwise</mml:mtext>                                                         <mml:mo>.</mml:mo>                                                      </mml:mrow>                                                   </mml:mtd>                                                </mml:mtr>                                             </mml:mtable>                                          </mml:mrow>                                       </mml:mrow>                                    </mml:mrow>                                 </mml:mtd>                              </mml:mtr>                           </mml:mtable>                        </mml:mrow>                                             </mml:semantics>                  </mml:math></disp-formula></p><table-wrap position="float" id="T1"><label>Table 1</label><caption><p>Number of potential orthologs. Average number of potential orthologs as compared to <italic>H. sapiens</italic>.</p></caption><table frame="hsides" rules="groups"><thead><tr><td align="left">Species</td><td align="left"><italic>n</italic></td><td align="left"><italic>m</italic></td><td align="left">&#x02205; cand. compared to <italic>H. sapiens</italic></td></tr></thead><tbody><tr><td align="left"><italic>H. sapiens</italic></td><td align="left">9 695</td><td align="left">34 979</td><td align="left">n/a</td></tr><tr><td align="left"><italic>M. musculus</italic></td><td align="left">3 247</td><td align="left">3 116</td><td align="left">5.47</td></tr><tr><td align="left"><italic>D. melanogaster</italic></td><td align="left">10 232</td><td align="left">41 332</td><td align="left">2.87</td></tr><tr><td align="left"><italic>S. cerevisiae</italic></td><td align="left">5 864</td><td align="left">25 527</td><td align="left">2.85</td></tr></tbody></table></table-wrap><p>This scoring function simply counts the number of conserved interactions of proteins that are potentially orthologous. We limit the CPU time to 1 h and yield the results summarized in Tab. <xref ref-type="table" rid="T2">2</xref>.</p><table-wrap position="float" id="T2"><label>Table 2</label><caption><p>Comparison of H. sapiens against other species. Results of comparing the PPI network of <italic>H. sapiens </italic>against other species. The entries in the table denote the instance, the value of the best solution found, the value of the upper bound, and the resulting quality guarantee.</p></caption><table frame="hsides" rules="groups"><thead><tr><td align="left"><italic>H. sapiens </italic>vs.</td><td align="left">best solution</td><td align="left">upper bound</td><td align="left">guarantee</td></tr></thead><tbody><tr><td align="left"><italic>M. musculus</italic></td><td align="left">1 087</td><td align="left">1 087</td><td align="left">100.00%</td></tr><tr><td align="left"><italic>D. melanogaster</italic></td><td align="left">284</td><td align="left">285</td><td align="left">99.65%</td></tr><tr><td align="left"><italic>S. cerevisiae</italic></td><td align="left">431</td><td align="left">431</td><td align="left">100.00%</td></tr></tbody></table></table-wrap><p>Clearly, more elaborate scoring schemes may yield biologically more meaningful solutions. This simple experiment demonstrates, however, that the Lagrangian algorithm performs very well even on large data. All solutions but the alignment computed for <italic>D. melanogaster </italic>are provably optimal and even this alignment is very close to optimal. Figure <xref ref-type="fig" rid="F3">3</xref> shows the alignment computed between the PPI networks of <italic>Mus musculus </italic>and <italic>Homo sapiens</italic>.</p><fig position="float" id="F3"><label>Figure 3</label><caption><p><bold>Exemplary alignment of two larger PPI networks</bold>. A maximum common protein-protein interaction network with respect to the number of conserved interactions in (a) <italic>Homo sapiens </italic>and (b) <italic>Mus Musculus</italic>.</p></caption><graphic xlink:href="1471-2105-10-S1-S59-3"/></fig></sec><sec><title>Second proof of concept: classification of metabolic subnetworks</title><p>A common way to represent the topology of a metabolic network is its <italic>stoichiometric matrix</italic>, which characterizes the system of homogeneous linear equations that describe the network of biochemical reactions at steady state. Together with the Computational Systems Biochemistry group at Charit&#x000e9;, Berlin, we investigate randomization models for a given metabolic network.</p><p>We therefore consider environments of different sizes for each reaction in the network and classify the resulting subnetworks according to their <italic>topological equivalence</italic>. Two reaction environments are topologically equivalent if the induced stoichiometric submatrices are permutation-equivalent, that is, one can be transformed into the other only by permuting its rows and columns. Then, randomized networks can be generated by swapping reaction environments that exhibit the same topology.</p><p>We employ a result by Colbourn [<xref ref-type="bibr" rid="B23">23</xref>] and determine permutation-equivalence via computing whether two corresponding labeled graphs are isomorphic. Since two graphs are isomorphic if and only if their maximum common subgraph equals the input graphs, we can use <sc>NATALIE</sc> to do the computations. We compute the equivalence classes of reaction environments of sizes <italic>s </italic>&#x02208; {1, 2, 3} of the metabolic networks of <italic>E. coli </italic>and <italic>S. cerevisiae</italic>, which were obtained from the Systems Biology Research group at UCSD. The graphs that correspond to the stoichiometric matrices of these reaction environments are typically quite small and have rarely more than twenty vertices. Table <xref ref-type="table" rid="T3">3</xref> shows the number of pairwise comparisons that had to be computed:</p><table-wrap position="float" id="T3"><label>Table 3</label><caption><p>Classification of metabolic subnetworks. Number of comparisons for the classification of metabolic subnetworks depending on different reaction environment sizes <italic>s</italic>.</p></caption><table frame="hsides" rules="groups"><thead><tr><td align="left"><italic>s</italic></td><td align="left"><italic>E. coli</italic></td><td align="left"><italic>S. cerevisiae</italic></td></tr></thead><tbody><tr><td align="left">1</td><td align="left">114 172</td><td align="left">87 863</td></tr><tr><td align="left">2</td><td align="left">423 956</td><td align="left">490 528</td></tr><tr><td align="left">3</td><td align="left">78 680 948</td><td align="left">122 067 031</td></tr></tbody></table></table-wrap><p>For each comparison, <sc>NATALIE</sc> has to decide whether the two subnetworks are topologically equivalent or not. Although, in the current version, it takes about two weeks to do the computations, <sc>NATALIE</sc> finds the correct answer for all of the more than 200 million comparisons and thus correctly computes the equivalence classes. In this application, the quality guarantee of the Lagrangian approach is indispensable, and the same results could not have been computed with a purely heuristic method. Yet, they could have been obtained probably much faster using a tailor-made algorithm for detecting graph isomorphisms. We plan, however, to develop a similarity metric between stoichiometric matrices based on the maximum common subgraph of their corresponding labeled graphs and have therefore used our novel approach, which has been proven efficient enough for this application. The details of this study will be described elsewhere.</p></sec></sec><sec><title>Conclusion</title><p>We believe that the maximum structural matching formulation and our algorithmic contribution is a first step towards a very competitive framework for network alignment, query, and comparison problems. We see perspectives for many interesting research directions. As the formulation as well as the algorithm can deal with multiple alignments, we plan to adapt the concepts to the multiple case. For practical purposes, a progressive alignment method seems to be appropriate for which an adequate consensus concept has to be developed. Moreover, the analogy to classical sequence alignment suggests to investigate <italic>local network alignments</italic>, where a first step consists in computing maximum <italic>connected </italic>motifs.</p><p>As the formulation is very flexible, it can easily be adapted to any type of undirected or directed, labeled or unlabeled, and weighted or unweighted network. It can be used for answering network queries as well as for detecting repeated motifs in a single network.</p><p>Clearly, a good search procedure is only one component in a successful alignment framework. The analogy to sequence alignment suggests that a lot of further research has to go into development and evaluation of suitable scoring functions and into statistical analysis of the results. This more statistically-oriented line of research will be different for each of the numerous applications for network alignment in computational biology. Currently, we address these topics in the ongoing projects, the alignment of PPI networks and the comparison of metabolic networks. Likewise, a visualization of the results is an important research topic. Here, we envision an integration into the <sc>CYTOSCAPE</sc> software [<xref ref-type="bibr" rid="B24">24</xref>].</p></sec><sec><title>Competing interests</title><p>The author declares that they have no competing interests.</p></sec></body><back><ack><sec><title>Acknowledgements</title><p>GWK thanks the Knowledge Management in Bioinformatics group of Humboldt-Universit&#x000e4;t Berlin and, in particular, Samira Jaeger for providing the PPI network comparison data and conversion into <sc>NATALIE</sc> format and the Computational Systems Biochemistry group at Charit&#x000e9;, Berlin, and, in particular, Carola Huthmacher, for providing the data for the computation of stoichiometric equivalence of metabolic subnetworks.</p><p>This article has been published as part of <italic>BMC Bioinformatics </italic>Volume 10 Supplement 1, 2009: Proceedings of The Seventh Asia Pacific Bioinformatics Conference (APBC) 2009. The full contents of the supplement are available online at <ext-link ext-link-type="uri" xlink:href="http://www.biomedcentral.com/1471-2105/10?issue=S1"/></p></sec></ack><ref-list><ref id="B1"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Sharan</surname><given-names>R</given-names></name><name><surname>Ideker</surname><given-names>T</given-names></name></person-group><article-title>Modeling cellular machinery through biological network comparison</article-title><source>Nat Biotechnol</source><year>2006</year><volume>24</volume><fpage>427</fpage><lpage>433</lpage><pub-id pub-id-type="pmid">16601728</pub-id></citation></ref><ref id="B2"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Srinivasan</surname><given-names>BS</given-names></name><name><surname>Shah</surname><given-names>NH</given-names></name><name><surname>Flannick</surname><given-names>JA</given-names></name><name><surname>Abeliuk</surname><given-names>E</given-names></name><name><surname>Novak</surname><given-names>AF</given-names></name><name><surname>Batzoglou</surname><given-names>S</given-names></name></person-group><article-title>Current progress in network research: toward reference networks for key model organisms</article-title><source>Brief Bioinform</source><year>2007</year><volume>8</volume><fpage>318</fpage><lpage>332</lpage><pub-id pub-id-type="pmid">17728341</pub-id></citation></ref><ref id="B3"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Ogata</surname><given-names>H</given-names></name><name><surname>Fujibuchi</surname><given-names>W</given-names></name><name><surname>Goto</surname><given-names>S</given-names></name><name><surname>Kanehisa</surname><given-names>M</given-names></name></person-group><article-title>A heuristic graph comparison algorithm and its application to detect functionally related enzyme clusters</article-title><source>Nucleic Acids Res</source><year>2000</year><volume>28</volume><fpage>4021</fpage><lpage>4028</lpage><pub-id pub-id-type="pmid">11024183</pub-id></citation></ref><ref id="B4"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Kelley</surname><given-names>BP</given-names></name><name><surname>Sharan</surname><given-names>R</given-names></name><name><surname>Karp</surname><given-names>RM</given-names></name><name><surname>Sittler</surname><given-names>T</given-names></name><name><surname>Root</surname><given-names>DE</given-names></name><name><surname>Stockwell</surname><given-names>BR</given-names></name><name><surname>Ideker</surname><given-names>T</given-names></name></person-group><article-title>Conserved pathways within bacteria and yeast as revealed by global protein network alignment</article-title><source>Proc Natl Acad Sci USA</source><year>2003</year><volume>100</volume><fpage>11394</fpage><lpage>11399</lpage><pub-id pub-id-type="pmid">14504397</pub-id></citation></ref><ref id="B5"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Sharan</surname><given-names>R</given-names></name><name><surname>Ideker</surname><given-names>T</given-names></name><name><surname>Kelley</surname><given-names>B</given-names></name><name><surname>Shamir</surname><given-names>R</given-names></name><name><surname>Karp</surname><given-names>RM</given-names></name></person-group><article-title>Identification of protein complexes by comparative analysis of yeast and bacterial protein interaction data</article-title><source>J Comput Biol</source><year>2005</year><volume>12</volume><fpage>835</fpage><lpage>846</lpage><pub-id pub-id-type="pmid">16108720</pub-id></citation></ref><ref id="B6"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Koyut&#x000fc;rk</surname><given-names>M</given-names></name><name><surname>Kim</surname><given-names>Y</given-names></name><name><surname>Topkara</surname><given-names>U</given-names></name><name><surname>Subramaniam</surname><given-names>S</given-names></name><name><surname>Szpankowski</surname><given-names>W</given-names></name><name><surname>Grama</surname><given-names>A</given-names></name></person-group><article-title>Pairwise alignment of protein interaction networks</article-title><source>J Comput Biol</source><year>2006</year><volume>13</volume><fpage>182</fpage><lpage>199</lpage><pub-id pub-id-type="pmid">16597234</pub-id></citation></ref><ref id="B7"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Narayanan</surname><given-names>M</given-names></name><name><surname>Karp</surname><given-names>RM</given-names></name></person-group><article-title>Comparing Protein Interaction Networks via a Graph Match-and-Split Algorithm</article-title><source>J Comput Biol</source><year>2007</year><volume>14</volume><fpage>892</fpage><lpage>907</lpage><pub-id pub-id-type="pmid">17803369</pub-id></citation></ref><ref id="B8"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Singh</surname><given-names>R</given-names></name><name><surname>Xu</surname><given-names>J</given-names></name><name><surname>Berger</surname><given-names>B</given-names></name></person-group><person-group person-group-type="editor"><name><surname>Speed T, Huang H</surname></name></person-group><article-title>Pairwise global alignment of protein interaction networks by matching neighborhood toplogy</article-title><source>Proc 11th Intern Conf Research in Comp Molec Biol (RECOMB 2007)</source><year>2007</year><volume>4453</volume><publisher-name>LNBI, Springer</publisher-name><fpage>16</fpage><lpage>31</lpage></citation></ref><ref id="B9"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Sharan</surname><given-names>R</given-names></name><name><surname>Suthram</surname><given-names>S</given-names></name><name><surname>Kelley</surname><given-names>RM</given-names></name><name><surname>Kuhn</surname><given-names>T</given-names></name><name><surname>McCuine</surname><given-names>S</given-names></name><name><surname>Uetz</surname><given-names>P</given-names></name><name><surname>Sittler</surname><given-names>T</given-names></name><name><surname>Karp</surname><given-names>RM</given-names></name><name><surname>Ideker</surname><given-names>T</given-names></name></person-group><article-title>Conserved patterns of protein interaction in multiple species</article-title><source>Proc Natl Acad Sci USA</source><year>2005</year><volume>102</volume><fpage>1974</fpage><lpage>1979</lpage><pub-id pub-id-type="pmid">15687504</pub-id></citation></ref><ref id="B10"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Koyut&#x000fc;rk</surname><given-names>M</given-names></name><name><surname>Kim</surname><given-names>Y</given-names></name><name><surname>Subramaniam</surname><given-names>S</given-names></name><name><surname>Szpankowski</surname><given-names>W</given-names></name><name><surname>Grama</surname><given-names>A</given-names></name></person-group><article-title>Detecting conserved interaction patterns in biological networks</article-title><source>J Comput Biol</source><year>2006</year><volume>13</volume><fpage>1299</fpage><lpage>1322</lpage><pub-id pub-id-type="pmid">17037960</pub-id></citation></ref><ref id="B11"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Jaeger</surname><given-names>S</given-names></name><name><surname>Leser</surname><given-names>U</given-names></name></person-group><person-group person-group-type="editor"><name><surname>Falter C, et al</surname></name></person-group><article-title>High-Precision Function Prediction using Conserved Interactions</article-title><source>Proc German Conference on Bioinformatics (GCB 07) LNI</source><year>2007</year><volume>115</volume><publisher-name>LNBI, GI</publisher-name><fpage>146</fpage><lpage>162</lpage></citation></ref><ref id="B12"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Flannick</surname><given-names>J</given-names></name><name><surname>Novak</surname><given-names>A</given-names></name><name><surname>Srinivasan</surname><given-names>BS</given-names></name><name><surname>McAdams</surname><given-names>HH</given-names></name><name><surname>Batzoglou</surname><given-names>S</given-names></name></person-group><article-title>Graemlin: general and robust alignment of multiple large interaction networks</article-title><source>Genome Res</source><year>2006</year><volume>16</volume><fpage>1169</fpage><lpage>1181</lpage><pub-id pub-id-type="pmid">16899655</pub-id></citation></ref><ref id="B13"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Singh</surname><given-names>R</given-names></name><name><surname>Xu</surname><given-names>J</given-names></name><name><surname>Berger</surname><given-names>B</given-names></name></person-group><article-title>Global alignment of multiple protein interaction networks with application to functional orthology detection</article-title><source>Proc Natl Acad Sci USA</source><year>2008</year><volume>105</volume><fpage>12763</fpage><lpage>12768</lpage><pub-id pub-id-type="pmid">18725631</pub-id></citation></ref><ref id="B14"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Kececioglu</surname><given-names>JD</given-names></name></person-group><article-title>The Maximum Weight Trace Problem in Multiple Sequence Alignment</article-title><source>Proc 4th Annual Symposium on Combinatorial Pattern Matching (CPM 93)</source><year>1993</year><volume>684</volume><publisher-name>LNCS, Springer-Verlag</publisher-name><fpage>106</fpage><lpage>119</lpage></citation></ref><ref id="B15"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Bauer</surname><given-names>M</given-names></name><name><surname>Klau</surname><given-names>GW</given-names></name><name><surname>Reinert</surname><given-names>K</given-names></name></person-group><article-title>Accurate Multiple Sequence-Structure Alignment of RNA Sequences Using Combinatorial Optimization</article-title><source>BMC Bioinformatics</source><year>2007</year><volume>8</volume><pub-id pub-id-type="pmid">17662141</pub-id></citation></ref><ref id="B16"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Garey</surname><given-names>MR</given-names></name><name><surname>Johnson</surname><given-names>DS</given-names></name></person-group><source>Computers and Intractability: A Guide to the Theory of NP-Completeness</source><year>1979</year><publisher-name>W.H. Freeman</publisher-name></citation></ref><ref id="B17"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Birkhoff</surname><given-names>G</given-names></name></person-group><article-title>Tres observaciones sobre el algebra lineal</article-title><source>Revista Facultad de Ciencias Exactas, Puras y Aplicadas Universidad Nacional de Tucuman, Serie A (Matematicas y Fisica Teorica)</source><year>1946</year><volume>5</volume><fpage>147</fpage><lpage>151</lpage></citation></ref><ref id="B18"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Guignard</surname><given-names>M</given-names></name><name><surname>Kim</surname><given-names>S</given-names></name></person-group><article-title>Lagrangean decomposition: A model yielding stronger Lagrangean bounds</article-title><source>Mathematical Programming</source><year>1987</year><volume>39</volume><fpage>215</fpage><lpage>228</lpage></citation></ref><ref id="B19"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Caprara</surname><given-names>A</given-names></name><name><surname>Lancia</surname><given-names>G</given-names></name><name><surname>Carr</surname><given-names>B</given-names></name><name><surname>Walenz</surname><given-names>B</given-names></name><name><surname>Istrail</surname><given-names>S</given-names></name></person-group><article-title>1001 optimal PDB structure alignments: Integer Programming methods for finding the maximum contact map overlap</article-title><source>J Comput Biol</source><year>2004</year><volume>11</volume><fpage>27</fpage><lpage>52</lpage><pub-id pub-id-type="pmid">15072687</pub-id></citation></ref><ref id="B20"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Bertsimas</surname><given-names>D</given-names></name><name><surname>Tsitsiklis</surname><given-names>JN</given-names></name></person-group><source>Introduction to Linear Optimization</source><year>1997</year><publisher-name>Athena Scientific</publisher-name></citation></ref><ref id="B21"><citation citation-type="other"><person-group person-group-type="author"><name><surname>Klau</surname><given-names>GW</given-names></name><etal></etal></person-group><source>[web page]</source><ext-link ext-link-type="uri" xlink:href="http://www.planet-lisa.net"/><comment>[[Accessed 3 Oct 2008]].</comment></citation></ref><ref id="B22"><citation citation-type="other"><person-group person-group-type="author"><collab>GraphML Working Group</collab></person-group><source>[web page]</source><ext-link ext-link-type="uri" xlink:href="http://graphml.graphdrawing.org"/><comment>[[Accessed 3 Oct 2008]].</comment></citation></ref><ref id="B23"><citation citation-type="other"><person-group person-group-type="author"><name><surname>Colbourn</surname><given-names>CJ</given-names></name></person-group><article-title>Isomorphism Complete Problems on Matrices</article-title><source>Proc West Coast Conference on Combinatorics, Graph Theory, and Computing</source><year>1979</year><fpage>101</fpage><lpage>107</lpage></citation></ref><ref id="B24"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Shannon</surname><given-names>P</given-names></name><name><surname>Markiel</surname><given-names>A</given-names></name><name><surname>Ozier</surname><given-names>O</given-names></name><name><surname>Baliga</surname><given-names>NS</given-names></name><name><surname>Wang</surname><given-names>JT</given-names></name><name><surname>Ramage</surname><given-names>D</given-names></name><name><surname>Amin</surname><given-names>N</given-names></name><name><surname>Schwikowski</surname><given-names>B</given-names></name><name><surname>Ideker</surname><given-names>T</given-names></name></person-group><article-title>Cytoscape: a software environment for integrated models of biomolecular interaction networks</article-title><source>Genome Res</source><year>2003</year><volume>13</volume><fpage>2498</fpage><lpage>2504</lpage><pub-id pub-id-type="pmid">14597658</pub-id></citation></ref></ref-list></back></article>