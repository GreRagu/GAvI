<!DOCTYPE article PUBLIC "-//NLM//DTD Journal Archiving and Interchange DTD v2.3 20070202//EN" "archivearticle.dtd"><article xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:mml="http://www.w3.org/1998/Math/MathML" article-type="research-article" xml:lang="EN"><?properties open_access?><front><journal-meta><journal-id journal-id-type="nlm-ta">Int J Biomed Imaging</journal-id><journal-id journal-id-type="publisher-id">IJBI</journal-id><journal-title>International Journal of Biomedical Imaging</journal-title><issn pub-type="ppub">1687-4188</issn><issn pub-type="epub">1687-4196</issn><publisher><publisher-name>Hindawi Publishing Corporation</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="pmid">19197391</article-id><article-id pub-id-type="pmc">2635067</article-id><article-id pub-id-type="doi">10.1155/2008/174283</article-id><article-categories><subj-group subj-group-type="heading"><subject>Research Article</subject></subj-group></article-categories><title-group><article-title>A Reconstruction Approach for Imaging in  3D Cone Beam Vector Field Tomography</article-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Schuster</surname><given-names>T.</given-names></name><xref ref-type="aff" rid="I1"><sup>1</sup></xref><xref ref-type="corresp" rid="cor1">*</xref></contrib><contrib contrib-type="author"><name><surname>Theis</surname><given-names>D.</given-names></name><xref ref-type="aff" rid="I2"><sup>2</sup></xref></contrib><contrib contrib-type="author"><name><surname>Louis</surname><given-names>A. K.</given-names></name><xref ref-type="aff" rid="I2"><sup>2</sup></xref></contrib></contrib-group><aff id="I1"><sup>1</sup>Department of Mechanical Engineering, Helmut Schmidt University, Holstenhofweg 85, 22043 Hamburg, Germany</aff><aff id="I2"><sup>2</sup>Department of Applied Mathematics, Saarland University, P.O. Box 15 11 50, 66041 Saarbr&#x000fc;cken, Germany</aff><author-notes><corresp id="cor1">*T. Schuster: <email>schuster@hsu-hh.de</email></corresp><fn fn-type="other"><p>Recommended by J. C. Chen</p></fn></author-notes><pub-date pub-type="ppub"><year>2008</year></pub-date><pub-date pub-type="epub"><day>3</day><month>2</month><year>2009</year></pub-date><volume>2008</volume><elocation-id>174283</elocation-id><history><date date-type="received"><day>4</day><month>7</month><year>2008</year></date><date date-type="accepted"><day>15</day><month>9</month><year>2008</year></date></history><permissions><copyright-statement>Copyright &#x000a9; 2008 T. Schuster et al.</copyright-statement><copyright-year>2008</copyright-year><license license-type="open-access"><p>This is an open access article distributed under the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</p></license></permissions><abstract><p>3D cone beam vector field tomography (VFT) aims for reconstructing and visualizing the velocity field of a moving fluid by measuring line integrals of projections of the vector field. The data are obtained by ultrasound measurements along a scanning curve which surrounds the object. From a mathematical point of view, we have to deal with the inversion of the vectorial cone beam transform. Since the vectorial cone beam transform of any gradient vector field with compact support is identically equal to zero, we can only hope to reconstruct the solenoidal part of an arbitrary vector field. In this paper we will at first summarize important properties of the cone beam transform for three-dimensional solenoidal vector fields and then propose a solution approach based on the method of approximate inverse. In this context, we intensively make use of results from scalar 3D computerized tomography. The findings presented in the paper will continuously be illustrated by pictures from first numerical experiments done with exact, simulated data.</p></abstract></article-meta></front><body><sec sec-type="section" id="sec1"><title>1. INTRODUCTION</title><p>Vector field tomography (VFT) deals with the problem of reconstructing a vector field, forexample, a velocity field of an incompressible, moving fluid, from lineintegrals of projections of the field. VFT has various applications in photoelasticity,oceanography, nondestructive testing, and medical imaging, where we may thinkof tumor detection by reconstructing and visualizing blood flow which is knownto be more irregular and more intense around tumors than in normal tissue, see[<xref ref-type="bibr" rid="B1">1</xref>]. The integral datacan be measured using ultrasound signals when we assume that the Doppler shiftof the frequency is approximately proportional to the velocity of the particlein the fluid which causes the shift. This is a reasonable assumption if theparticle velocity is significantly smaller than the speed of sound within themedium under consideration.</p><p>Although this seems to be quite simple at first sightit will become clear after the definition of the cone beam transform for vectorfields that only the projection of the vector field onto the line ofintegration can be measured. This enormous loss of information is the reasonwhy we can only hope to recover the solenoidal part of the vector field fromour measurements, a fact which has for example been shown in [<xref ref-type="bibr" rid="B2">2</xref>].</p><p>Ultrasound devices may be utilized as a supportivemethod in preliminary examinations for tumor detection by reconstructing andvisualizing blood flow which has already been suggested in 1977 by Wells et al. [<xref ref-type="bibr" rid="B3">3</xref>]. This may help toreduce the radiation dose of a patient tremendously. Thinking of mammography,it is known that the pressure which is put on the breast during the examinationmay crush small existing tumors and allow them to spread more easily. Thisdanger could also be avoided or at least reduced by using ultrasound forpreventive medical examinations. It should be noted that these deliberationsare subject to the condition that the algorithms and the medical equipmentbased on ultrasound work as reliable and fast as current X-ray techniques.</p><p>A possible measurement setup where the scanning curve &#x00393; is a circle in the plane {<italic>x</italic><sub>3</sub> = 0} is depicted in <xref ref-type="fig" rid="fig1">Figure 1</xref>. This defines exactlythe geometry used in our first numerical experiments which are presented in thelast section of this work. A lot oftheoretical and numerical results have been achieved over the last few yearsfor the parallel geometry. Juhlin [<xref ref-type="bibr" rid="B4">4</xref>] suggested a measurement setup which is suited to fullyreconstruct solenoidal fields in two dimensions. Mathematical properties ofthis model can be found in Sparr et al. [<xref ref-type="bibr" rid="B5">5</xref>]. The singular value decomposition for the 2D fan-beam Radon transform of tensorfields has been presented in an article by  Kazantsev and Bukhgeim [<xref ref-type="bibr" rid="B6">6</xref>]. Desbat and Wernsd&#x000f6;rfer[<xref ref-type="bibr" rid="B7">7</xref>] developed aniterative method. For 3D Doppler tomography, Schuster established an inversionscheme of filtered backprojection type [<xref ref-type="bibr" rid="B8">8</xref>, <xref ref-type="bibr" rid="B9">9</xref>] relying on the method of approximate inverse. Togetherwith Rieder [<xref ref-type="bibr" rid="B10">10</xref>], heobtained convergence with rates and stability with respect to noisy data forthis method.</p><p>As in scalar 3D computerized tomography, the <italic>conebeam transform</italic> is of special interest from a practical point of view. It isdefined for a tensor field of rank <italic>m</italic> by<disp-formula id="eq1"><label>(1)</label><mml:math id="M1"><mml:mrow><mml:mtable columnalign="left"><mml:mtr><mml:mtd><mml:mrow><mml:msub><mml:mrow><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">D</mml:mi></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">f</mml:mi></mml:mrow></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mn>,</mml:mn><mml:mi>&#x003c9;</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mstyle><mml:mrow><mml:msubsup><mml:mrow><mml:mstyle displaystyle="true"><mml:mrow><mml:mo>&#x0222b;</mml:mo></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mi>&#x0221e;</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mstyle><mml:mo minsize="1em" maxsize="1em">&#x02329;</mml:mo><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">f</mml:mi></mml:mrow></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mo>+</mml:mo><mml:mi>t</mml:mi><mml:mi>&#x003c9;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:msup><mml:mrow><mml:mi>&#x003c9;</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msup><mml:mo minsize="1em" maxsize="1em">&#x0232a;</mml:mo><mml:mtext>d</mml:mtext><mml:mi>t</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi/></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mstyle><mml:mrow><mml:msubsup><mml:mrow><mml:mstyle displaystyle="true"><mml:mrow><mml:mo>&#x0222b;</mml:mo></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mi>&#x0221e;</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mstyle><mml:msub><mml:mrow><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">f</mml:mi></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>&#x022ef;</mml:mo><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mo>+</mml:mo><mml:mi>t</mml:mi><mml:mi>&#x003c9;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:msup><mml:mrow><mml:mi>&#x003c9;</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:mo>&#x022ef;</mml:mo><mml:msup><mml:mrow><mml:mi>&#x003c9;</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:mtext>d</mml:mtext><mml:mi>t</mml:mi><mml:mn>,</mml:mn></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula> where <italic>&#x003b1;</italic> &#x02208; &#x00393; is a source point on the scanning curve <inline-formula><mml:math id="M2"><mml:mrow><mml:mi>&#x00393;</mml:mi><mml:mo>&#x02282;</mml:mo><mml:msup><mml:mrow><mml:mi>&#x0211d;</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msup><mml:mo>&#x02216;</mml:mo><mml:mover><mml:mrow><mml:mi mathvariant="normal">&#x003a9;</mml:mi></mml:mrow><mml:mrow><mml:mo>&#x000af;</mml:mo></mml:mrow></mml:mover></mml:mrow></mml:math></inline-formula> which surrounds the object &#x003a9;, <italic>&#x003c9;</italic> &#x02208; <italic>S</italic><sup><italic>n</italic>&#x02212;1</sup> is the unit vector of direction of the lineand <bold>f</bold> is a tensor field of rank <italic>m</italic> with compact support in the open domain &#x003a9;. Tensor fields of rank <italic>m</italic> = 0 are scalar functions <italic>f</italic>(<italic>x</italic>),  tensor fields of rank <italic>m</italic> = 1 are vector fields <bold>f</bold>(<italic>x</italic>) in &#x0211d;<sup><italic>n</italic></sup>. In (<xref ref-type="disp-formula" rid="eq1">1</xref>) we use Einstein's summation rule, that means we sum up over equalindices <italic>i</italic><sub><italic>j</italic></sub>,  where 1 &#x02264; <italic>i</italic><sub><italic>j</italic></sub> &#x02264; <italic>n</italic>.</p><p>A lot of theory has been developed for the common caseof tensor fields of arbitrary rank. To facilitate notation and to direct thereaders' attention to the cases important for practical applications we confinethe following remarks to the <italic>scalar cone beam transform</italic> as well as the <italic>conebeam transform for vector fields</italic> in <italic>n</italic> dimensions. In the following, scalar fieldswill be denoted by <italic>f</italic> whereas vector fields will be writtenbold-faced, such as <bold>f</bold>.</p><p>Setting <italic>m</italic> = 0 in (<xref ref-type="disp-formula" rid="eq1">1</xref>) we obtain the well-known <italic>(scalar)cone beam transform</italic><disp-formula id="eq2"><label>(2)</label><mml:math id="M3"><mml:mrow><mml:msub><mml:mrow><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">D</mml:mi></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mn>,</mml:mn><mml:mi>&#x003c9;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mstyle><mml:mrow><mml:msubsup><mml:mrow><mml:mstyle displaystyle="true"><mml:mrow><mml:mo>&#x0222b;</mml:mo></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mi>&#x0221e;</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mstyle><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mo>+</mml:mo><mml:mi>t</mml:mi><mml:mi>&#x003c9;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mtext>d</mml:mtext><mml:mi>t</mml:mi></mml:mrow></mml:math></disp-formula>of a scalar field <italic>f</italic> : &#x0211d;<sup><italic>n</italic></sup> &#x02283; &#x003a9; &#x02192; &#x0211d;. For <italic>m</italic> = 1 formula (<xref ref-type="disp-formula" rid="eq1">1</xref>) is the <italic>cone beam transform forvector fields </italic><bold>f</bold> : &#x0211d;<sup><italic>n</italic></sup> &#x02283; &#x003a9; &#x02192; &#x0211d;<sup><italic>n</italic></sup>,  which in 3D is also often referred to as the <italic>Doppler transform</italic>. It reads as <disp-formula id="eq3"><label>(3)</label><mml:math id="M4"><mml:mrow><mml:msub><mml:mrow><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">D</mml:mi></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">f</mml:mi></mml:mrow></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mn>,</mml:mn><mml:mi>&#x003c9;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mstyle><mml:mrow><mml:msubsup><mml:mrow><mml:mstyle displaystyle="true"><mml:mrow><mml:mo>&#x0222b;</mml:mo></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mi>&#x0221e;</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mstyle><mml:mo minsize="1em" maxsize="1em">&#x02329;</mml:mo><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">f</mml:mi></mml:mrow></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mo>+</mml:mo><mml:mi>t</mml:mi><mml:mi>&#x003c9;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mi>&#x003c9;</mml:mi><mml:mo minsize="1em" maxsize="1em">&#x0232a;</mml:mo><mml:mtext>d</mml:mtext><mml:mi>t</mml:mi><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula> Hence the mathematical problemof 3D cone beam VFT consists of inverting <bold>D</bold><sub>1</sub><bold>f</bold> = <italic>g</italic> for given measurements <italic>g</italic> &#x02208; &#x0211d;,  that is reconstructing a three-dimensional vector field <bold>f</bold> from one-dimensional, that is, scalar, data <italic>g</italic>. In contrast to <bold>D</bold><sub>0</sub> an inversion formula for <bold>D</bold><sub>1</sub> is not known by now and an inversion schemefor the cone beam transform for vector fields has not been established so far.</p><p>From (<xref ref-type="disp-formula" rid="eq3">3</xref>) it can be seen that only the integral of theprojections of the vector field along the ray of integration can be obtainedfrom the measurements, which is emphasized in <xref ref-type="fig" rid="fig2">Figure 2</xref>. Considering anultrasound wave starting from the source point <italic>&#x003b1;</italic> on the scanning curve &#x00393; only the projection of the green sample vectoronto the line of integration can be measured. The projection is illustrated bythe red arrow. This also means that any vector orthogonal to the ultrasoundwave does not contribute to the integral at all, a property which is depictedby the unit circle and the corresponding sample vectors orthogonal to <italic>&#x003c9;</italic>. As a consequence, a full reconstruction of an arbitrary vector field isimpossible with the underlying measurement geometry. As already mentioned in the abstract of ourpaper, we can only hope to reconstruct the solenoidal part of an arbitraryvector field since the vectorial cone beam transform of any gradient vectorfield with compact support is identically equal to zero. This can easily beseen from the following short computation for a gradient field <bold>f</bold>(<italic>x</italic>) = &#x02207;<italic>&#x003d5;</italic>(<italic>x</italic>) = (&#x02202;<sub><italic>x</italic><sub>1</sub></sub><italic>&#x003d5;</italic>(<italic>x</italic>),&#x02026;, &#x02202;<sub><italic>x</italic><sub><italic>n</italic></sub></sub><italic>&#x003d5;</italic>(<italic>x</italic>))<sup>&#x022a4;</sup>, <italic>&#x003d5;</italic> : &#x0211d;<sup><italic>n</italic></sup> &#x02283; &#x003a9; &#x02192; &#x0211d;,  with compact support <disp-formula id="eq001"><label>(4)</label><mml:math id="M5"><mml:mrow><mml:mtable columnalign="left"><mml:mtr><mml:mtd><mml:msub><mml:mrow><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">D</mml:mi></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">f</mml:mi></mml:mrow></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mn>,</mml:mn><mml:mi>&#x003c9;</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">D</mml:mi></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mrow><mml:mo minsize="0.75em" maxsize="0.75em">(</mml:mo><mml:mrow><mml:mo>&#x02207;</mml:mo><mml:mi>&#x003d5;</mml:mi></mml:mrow><mml:mo minsize="0.75em" maxsize="0.75em">)</mml:mo></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mn>,</mml:mn><mml:mi>&#x003c9;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mstyle><mml:mrow><mml:msubsup><mml:mrow><mml:mstyle displaystyle="true"><mml:mrow><mml:mo>&#x0222b;</mml:mo></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mi>&#x0221e;</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mstyle><mml:mo>&#x02207;</mml:mo><mml:mi>&#x003d5;</mml:mi><mml:mrow><mml:mo minsize="0.75em" maxsize="0.75em">(</mml:mo><mml:mrow><mml:mi>&#x003b1;</mml:mi><mml:mo>+</mml:mo><mml:mi>t</mml:mi><mml:mi>&#x003c9;</mml:mi></mml:mrow><mml:mo minsize="0.75em" maxsize="0.75em">)</mml:mo></mml:mrow><mml:mi>&#x003c9;</mml:mi><mml:mi>&#x02009;</mml:mi><mml:mtext>d</mml:mtext><mml:mi>t</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi/></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:msubsup><mml:mrow><mml:mo minsize="1em" maxsize="1em">[</mml:mo><mml:mrow><mml:mi>&#x003d5;</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mo>+</mml:mo><mml:mi>t</mml:mi><mml:mi>&#x003c9;</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo minsize="1em" maxsize="1em">]</mml:mo></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mi>&#x0221e;</mml:mi></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mn>0.</mml:mn></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula></p><p>The method of <italic>approximate inverse</italic> introduced byLouis and Maass [<xref ref-type="bibr" rid="B11">11</xref>]delivers a mathematical framework for coping with inverse problems in anefficient way. The method computes a smoothed version of the solution <bold>f</bold> with the help of so-called <italic>mollifiers</italic>. These are smooth approximations to delta functions. Using a duality argumentthe method then consists of evaluations of inner products of the given data <italic>g</italic> with <italic>reconstruction kernels</italic>. Onefeature of the method is, that invariances of the underlying operator can beused to speed up the computation time tremendously. This method wassuccessfully applied to the reconstruction problem in 3D computerizedtomography, that is, (<xref ref-type="disp-formula" rid="eq2">2</xref>), see [<xref ref-type="bibr" rid="B12">12</xref>]. We use these results to extend the method of approximateinverse to (<xref ref-type="disp-formula" rid="eq3">3</xref>).</p><p>We summarize the contents of the paper. First we stateessential mathematical properties of (<xref ref-type="disp-formula" rid="eq1">1</xref>) for the special cases of <italic>m</italic> = 0 and <italic>m</italic> = 1. The interested reader will find generalizations of the presented theorems tosymmetric, covariant tensor fields of any rank and in any dimension in[<xref ref-type="bibr" rid="B13">13</xref>], especially theextension of Grangeat's formula which has been proven for (<xref ref-type="disp-formula" rid="eq1">1</xref>) in case <italic>n</italic> = 3, <italic>m</italic> = 0 (see (<xref ref-type="disp-formula" rid="eq2">2</xref>)) in [<xref ref-type="bibr" rid="B14">14</xref>]. Then we outline how the method of approximateinverse can be used for (<xref ref-type="disp-formula" rid="eq2">2</xref>) to solve <bold>D</bold><sub>0</sub> <italic> f</italic> = <italic>g</italic> and present its application to (<xref ref-type="disp-formula" rid="eq3">3</xref>) to solve <bold>D</bold><sub>1</sub><bold>f</bold> = <italic>g</italic>. Furthermore, an approach is presented, how reconstruction kernels for <bold>D</bold><sub>1</sub> from (<xref ref-type="disp-formula" rid="eq3">3</xref>) can be calculated with the help ofknown reconstruction kernels for the scalar cone beam transform <bold>D</bold><sub>0</sub>. Some pictures from numerical experiments show that this approach is very promising.</p></sec><sec sec-type="section" id="sec2"><title>2. MATHEMATICAL PROPERTIES OF <bold>D</bold><sub>0</sub> AND <bold>D</bold><sub>1</sub></title><p>Let <disp-formula id="eq002"><label>(5)</label><mml:math id="M6"><mml:mrow><mml:msup><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo minsize="1em" maxsize="1em">(</mml:mo><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mrow><mml:mi>&#x0211d;</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msup><mml:mo minsize="1em" maxsize="1em">)</mml:mo><mml:mo>:=</mml:mo><mml:mo minsize="1em" maxsize="1em">{</mml:mo><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">f</mml:mi></mml:mrow></mml:mstyle><mml:mo>:</mml:mo><mml:mi>X</mml:mi><mml:mo>&#x02192;</mml:mo><mml:msup><mml:mrow><mml:mi>&#x0211d;</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msup><mml:mo>:</mml:mo><mml:mo minsize="1em" maxsize="1em">&#x02225;</mml:mo><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">f</mml:mi></mml:mrow></mml:mstyle><mml:msub><mml:mrow><mml:mo minsize="1em" maxsize="1em">&#x02225;</mml:mo></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msubsup><mml:mrow><mml:mo minsize="0.75em" maxsize="0.75em">&#x02329;</mml:mo><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">f</mml:mi></mml:mrow></mml:mstyle><mml:mn>,</mml:mn><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">f</mml:mi></mml:mrow></mml:mstyle><mml:mo minsize="0.75em" maxsize="0.75em">&#x0232a;</mml:mo></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo>&#x0003c;</mml:mo><mml:mi>&#x0221e;</mml:mi><mml:mo minsize="1em" maxsize="1em">}</mml:mo></mml:mrow></mml:math></disp-formula> denote the space of squareintegrable functions from <italic>X</italic> &#x02282; &#x0211d;<sup><italic>n</italic></sup> to &#x0211d;<sup><italic>n</italic></sup> where the <italic>L</italic><sup>2</sup>-inner product of two functions is given as <disp-formula id="eq003"><label>(6)</label><mml:math id="M7"><mml:mrow><mml:msub><mml:mrow><mml:mo minsize="0.75em" maxsize="0.75em">&#x02329;</mml:mo><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">f</mml:mi></mml:mrow></mml:mstyle><mml:mn>,</mml:mn><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">g</mml:mi></mml:mrow></mml:mstyle><mml:mo minsize="0.75em" maxsize="0.75em">&#x0232a;</mml:mo></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mstyle><mml:mrow><mml:msub><mml:mrow><mml:mstyle displaystyle="true"><mml:mrow><mml:mo>&#x0222b;</mml:mo></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mi>X</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:msub><mml:mrow><mml:mo minsize="1em" maxsize="1em">&#x02329;</mml:mo><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">f</mml:mi></mml:mrow></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">g</mml:mi></mml:mrow></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo minsize="1em" maxsize="1em">&#x0232a;</mml:mo></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>&#x0211d;</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:msub><mml:mtext>d</mml:mtext><mml:mi>x</mml:mi><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula> Fundamental properties of (<xref ref-type="disp-formula" rid="eq2">2</xref>) and (<xref ref-type="disp-formula" rid="eq3">3</xref>) are summarized in the following theorem, which is the result ofstraightforward calculations.</p><p><statement id="thm1"><title>Theorem 1</title><p><italic>Let</italic> &#x003a9;<sup><italic>n</italic></sup> := {<italic>x</italic> &#x02208; &#x0211d;<sup><italic>n</italic></sup> : |<italic>x</italic>| &#x0003c; 1} <italic>with</italic> &#x02202;&#x003a9;<sup><italic>n</italic></sup> = <italic>S</italic><sup><italic>n</italic>&#x02212;1</sup> <italic>the reconstruction region, that is, theregion in which the object</italic> &#x003a9; <italic>is contained. The mappings</italic><disp-formula id="eq004"><label>(7)</label><mml:math id="M8"><mml:mrow><mml:mtable columnalign="left"><mml:mtr><mml:mtd><mml:msub><mml:mrow><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">D</mml:mi></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mo>:</mml:mo><mml:msup><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo minsize="1em" maxsize="1em">(</mml:mo><mml:msup><mml:mrow><mml:mi>&#x003a9;</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msup><mml:mo minsize="1em" maxsize="1em">)</mml:mo><mml:mo>&#x02192;</mml:mo><mml:msup><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo minsize="1em" maxsize="1em">(</mml:mo><mml:mi mathvariant="normal">&#x00393;</mml:mi><mml:mo>&#x000d7;</mml:mo><mml:msup><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo minsize="1em" maxsize="1em">)</mml:mo><mml:mo>,</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mrow><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">D</mml:mi></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mo>:</mml:mo><mml:msup><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo minsize="1em" maxsize="1em">(</mml:mo><mml:msup><mml:mrow><mml:mi>&#x003a9;</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mrow><mml:mi>&#x0211d;</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msup><mml:mo minsize="1em" maxsize="1em">)</mml:mo><mml:mo>&#x02192;</mml:mo><mml:msup><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo minsize="1em" maxsize="1em">(</mml:mo><mml:mi mathvariant="normal">&#x00393;</mml:mi><mml:mo>&#x000d7;</mml:mo><mml:msup><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo minsize="1em" maxsize="1em">)</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula> <italic>are linear and bounded if</italic><disp-formula id="eq005"><label>(8)</label><mml:math id="M9"><mml:mrow><mml:mstyle><mml:mrow><mml:msub><mml:mrow><mml:mstyle displaystyle="true"><mml:mrow><mml:mo>&#x0222b;</mml:mo></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mi>&#x00393;</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:msup><mml:mrow><mml:mo minsize="1em" maxsize="1em">(</mml:mo><mml:mo minsize="0.75em" maxsize="0.75em">|</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mo minsize="0.75em" maxsize="0.75em">|</mml:mo><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn><mml:mo minsize="1em" maxsize="1em">)</mml:mo></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msup><mml:mtext>d</mml:mtext><mml:mi>&#x003b1;</mml:mi><mml:mo>&#x0003c;</mml:mo><mml:mi>&#x0221e;</mml:mi><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula><italic>The adjoints (<italic>backprojections</italic>)</italic> <bold>D</bold><sub>0</sub><sup>&#x02217;</sup> : <italic>L</italic><sup>2</sup>(&#x00393; &#x000d7; <italic>S</italic><sup><italic>n</italic>&#x02212;1</sup>) &#x02192; <italic>L</italic><sup>2</sup>(&#x003a9;<sup><italic>n</italic></sup>) <italic>and</italic> <bold>D</bold><sub>1</sub><sup>&#x02217;</sup> : <italic>L</italic><sup>2</sup>(&#x00393; &#x000d7; <italic>S</italic><sup><italic>n</italic>&#x02212;1</sup>) &#x02192; <italic>L</italic><sup>2</sup>(&#x003a9;<sup><italic>n</italic></sup>, &#x0211d;<sup><italic>n</italic></sup>) <italic>are given by</italic><disp-formula id="eq006"><label>(9)</label><mml:math id="M10"><mml:mrow><mml:mtable columnalign="left"><mml:mtr><mml:mtd><mml:msubsup><mml:mrow><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">D</mml:mi></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mo>&#x02217;</mml:mo></mml:mrow></mml:msubsup><mml:mi>g</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mstyle><mml:mrow><mml:msub><mml:mrow><mml:mstyle displaystyle="true"><mml:mrow><mml:mo>&#x0222b;</mml:mo></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mi>&#x00393;</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:mo minsize="1.5em" maxsize="1.5em">{</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>x</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:msup><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msup><mml:mi>g</mml:mi><mml:mo minsize="1.5em" maxsize="1.5em">(</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mn>,</mml:mn><mml:mfrac><mml:mrow><mml:mi>x</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003b1;</mml:mi></mml:mrow><mml:mrow><mml:mo minsize="0.75em" maxsize="0.75em">|</mml:mo><mml:mi>x</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mo minsize="0.75em" maxsize="0.75em">|</mml:mo></mml:mrow></mml:mfrac><mml:mo minsize="1.5em" maxsize="1.5em">)</mml:mo><mml:mo minsize="1.5em" maxsize="1.5em">}</mml:mo><mml:mtext>d</mml:mtext><mml:mi>&#x003b1;</mml:mi><mml:mn>,</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msubsup><mml:mrow><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">D</mml:mi></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mo>&#x02217;</mml:mo></mml:mrow></mml:msubsup><mml:mi>g</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mstyle><mml:mrow><mml:msub><mml:mrow><mml:mstyle displaystyle="true"><mml:mrow><mml:mo>&#x0222b;</mml:mo></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mi>&#x00393;</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:mo minsize="1.5em" maxsize="1.5em">{</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>x</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:msup><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msup><mml:mi>g</mml:mi><mml:mo minsize="1.5em" maxsize="1.5em">(</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mn>,</mml:mn><mml:mfrac><mml:mrow><mml:mi>x</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003b1;</mml:mi></mml:mrow><mml:mrow><mml:mo minsize="0.75em" maxsize="0.75em">|</mml:mo><mml:mi>x</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mo minsize="0.75em" maxsize="0.75em">|</mml:mo></mml:mrow></mml:mfrac><mml:mo minsize="1.5em" maxsize="1.5em">)</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo minsize="1.5em" maxsize="1.5em">}</mml:mo><mml:mtext>d</mml:mtext><mml:mi>&#x003b1;</mml:mi><mml:mo>.</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula></p></statement></p><p>For <italic>n</italic> = 3,  we obtain the well-known cone beam transform <bold>D</bold><sub>0</sub> with the corresponding backprojection operator <bold>D</bold><sub>0</sub><sup>&#x02217;</sup> of scalar fields which is thoroughlyinvestigated in 3D computerized tomography as well as the mathematical model of3D cone beam vector tomography and the backprojection reads as <disp-formula id="eq4"><label>(10)</label><mml:math id="M11"><mml:mrow><mml:msubsup><mml:mrow><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">D</mml:mi></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mo>&#x02217;</mml:mo></mml:mrow></mml:msubsup><mml:mi>g</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mstyle><mml:mrow><mml:msub><mml:mrow><mml:mstyle displaystyle="true"><mml:mrow><mml:mo>&#x0222b;</mml:mo></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mi>&#x00393;</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:mo stretchy="false">|</mml:mo><mml:mi>x</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:msup><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mi>g</mml:mi><mml:mo minsize="1.5em" maxsize="1.5em">(</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mn>,</mml:mn><mml:mfrac><mml:mrow><mml:mi>x</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003b1;</mml:mi></mml:mrow><mml:mrow><mml:mo minsize="0.75em" maxsize="0.75em">|</mml:mo><mml:mi>x</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mo minsize="0.75em" maxsize="0.75em">|</mml:mo></mml:mrow></mml:mfrac><mml:mo minsize="1.5em" maxsize="1.5em">)</mml:mo><mml:mfrac><mml:mrow><mml:mi>x</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003b1;</mml:mi></mml:mrow><mml:mrow><mml:mo minsize="0.75em" maxsize="0.75em">|</mml:mo><mml:mi>x</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mo minsize="0.75em" maxsize="0.75em">|</mml:mo></mml:mrow></mml:mfrac><mml:mtext>d</mml:mtext><mml:mi>&#x003b1;</mml:mi><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula><bold>D</bold><sub>1</sub><sup>&#x02217;</sup><italic>g</italic>(<italic>x</italic>) represents an integration over all linesintersecting <italic>x</italic>. The result can be seen as an average over all directions connecting a sourcepoint <italic>&#x003b1;</italic> and <italic>x</italic>.</p><p>One of the crucial tools when computing reconstructionkernels in scalar cone beam tomography is the formula of Grangeat [<xref ref-type="bibr" rid="B14">14</xref>]. We proved a generalizationof that formula which is valid for any symmetric, covariant tensor field ofrank <italic>m</italic> in <italic>n</italic> dimensions in [<xref ref-type="bibr" rid="B13">13</xref>] but our presentation willbe restricted to <bold>D</bold><sub>0</sub> and <bold>D</bold><sub>1</sub>.</p><p><statement id="thm2"><title>Theorem 2  (Schuster [<xref ref-type="bibr" rid="B13">13</xref>] based on Hamaker et al. [<xref ref-type="bibr" rid="B15">15</xref>]). </title><p><italic>Assume</italic> <italic>n</italic> &#x02265; 2, <italic>f</italic> &#x02208; <italic>&#x1d49e;</italic><sub>0</sub><sup>(<italic>n</italic>&#x02212;2)</sup>(&#x003a9;<sup><italic>n</italic></sup>),  <italic>and</italic> <bold>f</bold> &#x02208; <italic>&#x1d49e;</italic><sub>0</sub><sup>(<italic>n</italic>&#x02212;2)</sup>(&#x003a9;<sup><italic>n</italic></sup>, &#x0211d;<sup><italic>n</italic></sup>). <italic>Then,</italic> <disp-formula id="eq5"><label>(11)</label><mml:math id="M12"><mml:mrow><mml:mtable columnalign="left"><mml:mtr><mml:mtd><mml:mi/></mml:mtd><mml:mtd><mml:mrow><mml:mfrac><mml:mrow><mml:msup><mml:mrow><mml:mo>&#x02202;</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup></mml:mrow><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:msup><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup></mml:mrow></mml:mfrac><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">R</mml:mi></mml:mrow></mml:mstyle><mml:mi>f</mml:mi><mml:mo minsize="1em" maxsize="1em">(</mml:mo><mml:mi>&#x003c9;</mml:mi><mml:mn>,</mml:mn><mml:mo minsize="0.75em" maxsize="0.75em">&#x02329;</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mn>,</mml:mn><mml:mi>&#x003c9;</mml:mi><mml:mo minsize="0.75em" maxsize="0.75em">&#x0232a;</mml:mo><mml:mo minsize="1em" maxsize="1em">)</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi/></mml:mtd><mml:mtd><mml:mrow><mml:mi>&#x02003;</mml:mi><mml:mi>&#x02003;</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mo>&#x02212;</mml:mo><mml:msup><mml:mrow><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mstyle><mml:mrow><mml:msub><mml:mrow><mml:mstyle displaystyle="true"><mml:mrow><mml:mo>&#x0222b;</mml:mo></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:msub><mml:mrow><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">D</mml:mi></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mn>,</mml:mn><mml:mi>&#x003b8;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:msup><mml:mrow><mml:mi>&#x003b4;</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo minsize="1em" maxsize="1em">(</mml:mo><mml:mo minsize="0.75em" maxsize="0.75em">&#x02329;</mml:mo><mml:mi>&#x003c9;</mml:mi><mml:mn>,</mml:mn><mml:mi>&#x003b8;</mml:mi><mml:mo minsize="0.75em" maxsize="0.75em">&#x0232a;</mml:mo><mml:mo minsize="1em" maxsize="1em">)</mml:mo><mml:mtext>d</mml:mtext><mml:mi>S</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula><disp-formula id="eq6"><label>(12)</label><mml:math id="M13"><mml:mrow><mml:mtable columnalign="left"><mml:mtr><mml:mtd><mml:mi/></mml:mtd><mml:mtd><mml:mrow><mml:mfrac><mml:mrow><mml:msup><mml:mrow><mml:mo>&#x02202;</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup></mml:mrow><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:msup><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup></mml:mrow></mml:mfrac><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">R</mml:mi></mml:mrow></mml:mstyle><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>&#x003b1;</mml:mi></mml:mrow></mml:msub><mml:mo minsize="1em" maxsize="1em">(</mml:mo><mml:mi>&#x003c9;</mml:mi><mml:mn>,</mml:mn><mml:mo minsize="0.75em" maxsize="0.75em">&#x02329;</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mn>,</mml:mn><mml:mi>&#x003c9;</mml:mi><mml:mo minsize="0.75em" maxsize="0.75em">&#x0232a;</mml:mo><mml:mo minsize="1em" maxsize="1em">)</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi/></mml:mtd><mml:mtd><mml:mrow><mml:mi>&#x02003;</mml:mi><mml:mi>&#x02003;</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mo>&#x02212;</mml:mo><mml:msup><mml:mrow><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mstyle><mml:mrow><mml:msub><mml:mrow><mml:mstyle displaystyle="true"><mml:mrow><mml:mo>&#x0222b;</mml:mo></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:msub><mml:mrow><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">D</mml:mi></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">f</mml:mi></mml:mrow></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mn>,</mml:mn><mml:mi>&#x003b8;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:msup><mml:mrow><mml:mi>&#x003b4;</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo minsize="1em" maxsize="1em">(</mml:mo><mml:mo minsize="0.75em" maxsize="0.75em">&#x02329;</mml:mo><mml:mi>&#x003c9;</mml:mi><mml:mn>,</mml:mn><mml:mi>&#x003b8;</mml:mi><mml:mo minsize="0.75em" maxsize="0.75em">&#x0232a;</mml:mo><mml:mo minsize="1em" maxsize="1em">)</mml:mo><mml:mtext>d</mml:mtext><mml:mi>S</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mn>,</mml:mn></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula> <italic>where </italic> <italic>&#x003b1;</italic> &#x02208; &#x00393;, <italic>&#x003c9;</italic> &#x02208; <italic>S</italic><sup><italic>n</italic>&#x02212;1</sup>, d<italic>S</italic> <italic>denotes the surfacemeasure on</italic> <italic>S</italic><sup><italic>n</italic>&#x02212;1</sup>, <bold>R</bold> <italic>is the <italic>n</italic>-dimensional <italic>Radon transform</italic> defined by</italic><disp-formula id="eq007"><label>(13)</label><mml:math id="M14"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">R</mml:mi></mml:mrow></mml:mstyle><mml:mi>f</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mn>,</mml:mn><mml:mi>s</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mstyle><mml:mrow><mml:msub><mml:mrow><mml:mstyle displaystyle="true"><mml:mrow><mml:mo>&#x0222b;</mml:mo></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mo minsize="0.75em" maxsize="0.75em">&#x02329;</mml:mo><mml:mi>x</mml:mi><mml:mn>,</mml:mn><mml:mi>&#x003b8;</mml:mi><mml:mo minsize="0.75em" maxsize="0.75em">&#x0232a;</mml:mo><mml:mo>=</mml:mo><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mtext>d</mml:mtext><mml:mi>x</mml:mi><mml:mn>,</mml:mn></mml:mrow></mml:math></disp-formula><italic>and</italic><disp-formula id="eq008"><label>(14)</label><mml:math id="M15"><mml:mrow><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>&#x003b1;</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mo minsize="1em" maxsize="1em">&#x02329;</mml:mo><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">f</mml:mi></mml:mrow></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>x</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:msup><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo minsize="1em" maxsize="1em">&#x0232a;</mml:mo></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>&#x0211d;</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:msub></mml:mrow></mml:math></disp-formula><italic>is the projection of</italic> <bold>f</bold> <italic>onto</italic> (<italic>x</italic> &#x02212; <italic>&#x003b1;</italic>)/ |<italic>x</italic> &#x02212; <italic>&#x003b1;</italic>|.</p></statement></p><p>In the following, we want to limit ourpresentation to <italic>n</italic> = 3.Then formula (<xref ref-type="disp-formula" rid="eq6">12</xref>) reads as <disp-formula id="eq7"><label>(15)</label><mml:math id="M16"><mml:mrow><mml:mtable columnalign="left"><mml:mtr><mml:mtd><mml:mrow><mml:mfrac><mml:mrow><mml:mo>&#x02202;</mml:mo></mml:mrow><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:mi>s</mml:mi></mml:mrow></mml:mfrac><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">R</mml:mi></mml:mrow></mml:mstyle><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>&#x003b1;</mml:mi></mml:mrow></mml:msub><mml:mo minsize="1em" maxsize="1em">(</mml:mo><mml:mi>&#x003c9;</mml:mi><mml:mn>,</mml:mn><mml:mo minsize="0.75em" maxsize="0.75em">&#x02329;</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mn>,</mml:mn><mml:mi>&#x003c9;</mml:mi><mml:mo minsize="0.75em" maxsize="0.75em">&#x0232a;</mml:mo><mml:mo minsize="1em" maxsize="1em">)</mml:mo></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mstyle><mml:mrow><mml:msub><mml:mrow><mml:mstyle displaystyle="true"><mml:mrow><mml:mo>&#x0222b;</mml:mo></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:msub><mml:mrow><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">D</mml:mi></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">f</mml:mi></mml:mrow></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mn>,</mml:mn><mml:mi>&#x003b8;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:msup><mml:mrow><mml:mi>&#x003b4;</mml:mi></mml:mrow><mml:mrow><mml:mo>'</mml:mo></mml:mrow></mml:msup><mml:mo minsize="1em" maxsize="1em">(</mml:mo><mml:mo minsize="0.75em" maxsize="0.75em">&#x02329;</mml:mo><mml:mi>&#x003c9;</mml:mi><mml:mn>,</mml:mn><mml:mi>&#x003b8;</mml:mi><mml:mo minsize="0.75em" maxsize="0.75em">&#x0232a;</mml:mo><mml:mo minsize="1em" maxsize="1em">)</mml:mo><mml:mtext>d</mml:mtext><mml:mi>S</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi/></mml:mtd><mml:mtd><mml:mrow><mml:mo>=</mml:mo><mml:mstyle><mml:mrow><mml:msub><mml:mrow><mml:mstyle displaystyle="true"><mml:mrow><mml:mo>&#x0222b;</mml:mo></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>&#x02229;</mml:mo><mml:mo minsize="0.75em" maxsize="0.75em">{</mml:mo><mml:mo minsize="0.75em" maxsize="0.75em">&#x02329;</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mn>,</mml:mn><mml:mi>&#x003c9;</mml:mi><mml:mo minsize="0.75em" maxsize="0.75em">&#x0232a;</mml:mo><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo minsize="0.75em" maxsize="0.75em">}</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:mo minsize="1em" maxsize="1em">&#x02329;</mml:mo><mml:msub><mml:mrow><mml:mo>&#x02207;</mml:mo></mml:mrow><mml:mrow><mml:mi>y</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">D</mml:mi></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">f</mml:mi></mml:mrow></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mn>,</mml:mn><mml:mi>y</mml:mi><mml:mo>=</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mi>&#x003c9;</mml:mi><mml:mo minsize="1em" maxsize="1em">&#x0232a;</mml:mo><mml:mtext>d</mml:mtext><mml:mi>S</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula></p><p>In the scalar case a solver for <bold>D</bold><sub>0</sub> can be constructed with the help of (<xref ref-type="disp-formula" rid="eq5">11</xref>) for <italic>n</italic> = 3. This is done by inverting the Radon transform <bold>R</bold> which is possible if the condition ofTuy-Kirillov is satisfied. It tells that we have full knowledge of <bold>R</bold><italic>g</italic>(<italic>&#x003c9;</italic>, <italic>s</italic>) for all <italic>&#x003c9;</italic>, <italic>s</italic> and any scalar function <italic>g</italic> : &#x003a9;<sup>3</sup> &#x02192; &#x0211d;,  if any plane intersecting the object &#x003a9; &#x02286; &#x003a9;<sup>3</sup> does also have at least one intersection pointwith the scanning curve &#x00393; and this intersection must benontransversally. This works fine for <bold>D</bold><sub>0</sub> since then <italic>f</italic>(<italic>x</italic>) is independent of <italic>&#x003b1;</italic> but unfortunately that does not help in caseof <bold>D</bold><sub>1</sub> (and analogous transforms for tensor fields aswell, see [<xref ref-type="bibr" rid="B13">13</xref>]), sincethere the object function <italic>f</italic><sub><italic>&#x003b1;</italic></sub> = &#x02329;<bold>f</bold>(<italic>x</italic>), (<italic>x</italic> &#x02212; <italic>&#x003b1;</italic>)/|<italic>x</italic> &#x02212; <italic>&#x003b1;</italic>|&#x0232a;<sub>&#x0211d;<sup>3</sup></sub> of <bold>R</bold> depends on and hence changes with <italic>&#x003b1;</italic>,  see (<xref ref-type="disp-formula" rid="eq7">15</xref>). Thus we seek an alternative way of solving <bold>D</bold><sub>1</sub><bold>f</bold> = <italic>g</italic> for vector fields <bold>f</bold>.</p></sec><sec sec-type="section" id="sec3"><title>3. APPROXIMATION OF RECONSTRUCTION KERNELSIN VECTOR FIELD TOMOGRAPHY</title><p>As already said, an inversion formula for <bold>D</bold><sub>1</sub> is not known by now and an inversion schemefor the cone beam transform for vector fields has not been established so far. So, the aim of this paper is to deduce a completely new method forthree-dimensional cone beam VFT. A comparison with existing algorithms isdifficult since there are no inversion methods for the vectorial cone beamtransform to the authors' best knowledge. Nevertheless, some famous algorithmswill certainly come to the reader's mind when thinking of tomography. Thewell-known FDK algorithm (Feldkamp et al. see [<xref ref-type="bibr" rid="B16">16</xref>]) is detailed on [<xref ref-type="bibr" rid="B17">17</xref>, page 128]. From thisdescription it immediately becomes clear that the algorithm does not work for <bold>D</bold><sub>1</sub>. The integrand of the cone beam transform for vector fields strongly depends onthe direction <italic>&#x003c9;</italic>,  a fact which is explicitly disregarded by the FDK algorithm. The methods ofNorton (see [<xref ref-type="bibr" rid="B18">18</xref>, <xref ref-type="bibr" rid="B19">19</xref>]) and Prince[<xref ref-type="bibr" rid="B20">20</xref>] are specificallysuited to solve 2D, respectively, 3D problems for vector fields in parallelgeometry. They both use transforms different from <bold>D</bold><sub>1</sub>. The generalization of Norton's approach to 3D vector tomography ofDoppler-transformed fields in parallel geometry was a challenging problem forLade et al. in [<xref ref-type="bibr" rid="B21">21</xref>]. Regrettably, neither approach can be adapted to VFT using the cone beamgeometry. Finally, no Fourier slice theorem for VFT is known, not even forstandard 3D cone beam tomography, so Fourier methods are not an alternative.</p><p>The method of <italic>approximate inverse</italic>, which wasestablished by Louis and Maass [<xref ref-type="bibr" rid="B11">11</xref>]in 1990, leads to an algorithm of filtered backprojection type if invariancesand some appropriate approximations are used. This has been shown for examplein [<xref ref-type="bibr" rid="B22">22</xref>, <xref ref-type="bibr" rid="B23">23</xref>] or [<xref ref-type="bibr" rid="B12">12</xref>]. Fundamental properties of it have also beenpublished in [<xref ref-type="bibr" rid="B24">24</xref>, <xref ref-type="bibr" rid="B25">25</xref>]. Its theory wasenhanced over the last decade and the method was successfully applied toseveral reconstruction problems in medical imaging and nondestructive testing,such as computerized tomography, inverse scattering, thermoacousticcomputerized tomography, diffractometry, and Doppler tomography. In [<xref ref-type="bibr" rid="B12">12</xref>] the method was applied to3D cone beam tomography, that is, to <bold>D</bold><sub>0</sub>.We describe this approach and then formulate an extension of it to <bold>D</bold><sub>1</sub>.</p><p>Let <italic>f</italic> &#x02208; <italic>L</italic><sup>2</sup>(&#x003a9;<sup>3</sup>) be a scalar function. The approximate inversecomputes a smoothed version <italic>f</italic><sub><italic>&#x003b3;</italic></sub> of <italic>f</italic> by convolving <italic>f</italic> with a <italic>mollifier </italic><italic>e</italic><sub><italic>&#x003b3;</italic></sub> &#x02208; <italic>&#x1d49e;</italic><sup>&#x0221e;</sup>(&#x0211d;<sup>3</sup>). A mollifier <italic>e</italic><sub><italic>&#x003b3;</italic></sub> is a smooth function with small essentialsupport having the property that <disp-formula id="eq009"><label>(16)</label><mml:math id="M17"><mml:mrow><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>&#x003b3;</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>:=</mml:mo><mml:mo minsize="1em" maxsize="1em">(</mml:mo><mml:mi>f</mml:mi><mml:mo>&#x02217;</mml:mo><mml:msub><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>&#x003b3;</mml:mi></mml:mrow></mml:msub><mml:mo minsize="1em" maxsize="1em">)</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>&#x02192;</mml:mo><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mi>&#x02003;</mml:mi><mml:mtext>as</mml:mtext><mml:mi>&#x02009;</mml:mi><mml:mi>&#x02009;</mml:mi><mml:mi>&#x003b3;</mml:mi><mml:mo>&#x02192;</mml:mo><mml:mn>0</mml:mn><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula>Here, &#x02217; denotes the convolution<disp-formula id="eq0010"><label>(17)</label><mml:math id="M18"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>f</mml:mi><mml:mo>&#x02217;</mml:mo><mml:mi>h</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mstyle><mml:mrow><mml:msub><mml:mstyle displaystyle="true"><mml:mrow><mml:mo>&#x0222b;</mml:mo></mml:mrow></mml:mstyle><mml:mrow><mml:msup><mml:mrow><mml:mi>&#x0211d;</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>y</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mi>h</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mtext>d</mml:mtext><mml:mi>y</mml:mi><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula> Such a function is given by the Gaussian kernel <disp-formula id="eq8"><label>(18)</label><mml:math id="M19"><mml:mrow><mml:msub><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>&#x003b3;</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msup><mml:mrow><mml:mi>&#x003b3;</mml:mi></mml:mrow><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:msup></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mi>&#x003c0;</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mn>3</mml:mn><mml:mo>/</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfrac><mml:mi>exp</mml:mi><mml:mrow><mml:mo minsize="1.5em" maxsize="1.5em">(</mml:mo><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mfrac><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>x</mml:mi><mml:msup><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:msup><mml:mrow><mml:mi>&#x003b3;</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfrac></mml:mrow><mml:mo minsize="1.5em" maxsize="1.5em">)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula> Provided that we can solve the equation <disp-formula id="eq9"><label>(19)</label><mml:math id="M20"><mml:mrow><mml:msubsup><mml:mrow><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">D</mml:mi></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mo>&#x02217;</mml:mo></mml:mrow></mml:msubsup><mml:mo minsize="1em" maxsize="1em">[</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>&#x003b3;</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo minsize="1em" maxsize="1em">]</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>&#x003b3;</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mo>&#x022c5;</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mn>,</mml:mn></mml:mrow></mml:math></disp-formula> then we can reconstruct <italic>f</italic><sub><italic>&#x003b3;</italic></sub> from the measured cone beam data <bold>D</bold><sub>0</sub> <italic> f</italic> by <disp-formula id="eq0011"><label>(20)</label><mml:math id="M21"><mml:mrow><mml:mtable columnalign="left"><mml:mtr><mml:mtd><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>&#x003b3;</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mo minsize="1em" maxsize="1em">&#x02329;</mml:mo><mml:msub><mml:mrow><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">D</mml:mi></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mi>f</mml:mi><mml:mn>,</mml:mn><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>&#x003b3;</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo minsize="1em" maxsize="1em">&#x0232a;</mml:mo></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x00393;</mml:mi><mml:mo>&#x000d7;</mml:mo><mml:msup><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi/></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mstyle><mml:mrow><mml:msub><mml:mrow><mml:mstyle displaystyle="true"><mml:mrow><mml:mo>&#x0222b;</mml:mo></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mi>&#x00393;</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:mstyle><mml:mrow><mml:msub><mml:mrow><mml:mstyle displaystyle="true"><mml:mrow><mml:mo>&#x0222b;</mml:mo></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:mo minsize="1em" maxsize="1em">(</mml:mo><mml:msub><mml:mrow><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">D</mml:mi></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mi>f</mml:mi><mml:mo minsize="1em" maxsize="1em">)</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mn>,</mml:mn><mml:mi>&#x003c9;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>&#x003b3;</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>;</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mn>,</mml:mn><mml:mi>&#x003c9;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mtext>d</mml:mtext><mml:mi>S</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003c9;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mtext>d</mml:mtext><mml:mi>&#x003b1;</mml:mi><mml:mn>,</mml:mn></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula> where <italic>v</italic><sub><italic>&#x003b3;</italic></sub>(<italic>x</italic>) = <italic>v</italic><sub><italic>&#x003b3;</italic></sub>(<italic>x</italic>; <italic>&#x003b1;</italic>, <italic>&#x003c9;</italic>) &#x02208; <italic>L</italic><sup>2</sup>(&#x00393; &#x000d7; <italic>S</italic><sup>2</sup>) for <italic>x</italic> &#x02208; &#x003a9;<sup><italic>n</italic></sup> is called a <italic>reconstruction kernel</italic>. Hence the method of approximate inverse consists of evaluating inner productsof the given data <bold>D</bold><sub>0</sub> <italic> f</italic> with reconstruction kernels <italic>v</italic><sub><italic>&#x003b3;</italic></sub>(<italic>x</italic>). This can be done in an efficient way using the translation invariance of <italic>e</italic><sub><italic>&#x003b3;</italic></sub> and some appropriate approximations which areoutlined in detail in [<xref ref-type="bibr" rid="B12">12</xref>]. These imply that we have to solve (<xref ref-type="disp-formula" rid="eq9">19</xref>) onlyonce, namely for <italic>x</italic> = 0,  and apply the invariances to get the remaining reconstruction kernels. By doingso the computation time is shortened significantly. The computation ofreconstruction kernels for circular 3D cone beam tomography, that is, for exactlythe same scanning geometry that we use for the reconstruction of vector fields,has been detailed in [<xref ref-type="bibr" rid="B26">26</xref>].</p><p>In comparison to other regularization methods such asTikhonov regularization which would result in enormous computational costsbecause of the very large, full matrices, the approximate inverse is much moreefficient, an advantage that is especially crucial in tomographic applicationsbecause of the large number of evaluations.</p><p>To apply the method to <bold>D</bold><sub>1</sub> and hence to VFT, we construct mollifierfields <bold>E</bold><sub><italic>&#x003b3;</italic></sub><sup><italic>j</italic></sup> &#x02208; <italic>L</italic><sup>2</sup>(&#x003a9;<sup>3</sup>, &#x0211d;<sup>3</sup>) defining <disp-formula id="eq0012"><label>(21)</label><mml:math id="M22"><mml:mrow><mml:msubsup><mml:mrow><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">E</mml:mi></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mi>&#x003b3;</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>:=</mml:mo><mml:msub><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>&#x003b3;</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>&#x022c5;</mml:mo><mml:msub><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mn>,</mml:mn><mml:mi>&#x02003;</mml:mi><mml:mi>j</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mo minsize="0.75em" maxsize="0.75em">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo minsize="0.75em" maxsize="0.75em">}</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula> where <italic>e</italic><sub>1</sub> = (1, 0, 0)<sup>&#x022a4;</sup>, <italic>e</italic><sub>2</sub> = (0, 1, 0)<sup>&#x022a4;</sup> and <italic>e</italic><sub>3</sub> = (0, 0, 1)<sup>&#x022a4;</sup>. Using again the Gaussian (<xref ref-type="disp-formula" rid="eq8">18</xref>) as mollifier <italic>e</italic><sub><italic>&#x003b3;</italic></sub> we obtain <disp-formula id="eq0013"><label>(22)</label><mml:math id="M23"><mml:mrow><mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">f</mml:mi></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mi>&#x003b3;</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>:=</mml:mo><mml:mo minsize="1em" maxsize="1em">(</mml:mo><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">f</mml:mi></mml:mrow></mml:mstyle><mml:mo>&#x02217;</mml:mo><mml:msubsup><mml:mrow><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">E</mml:mi></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mi>&#x003b3;</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msubsup><mml:mo minsize="1em" maxsize="1em">)</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>&#x02192;</mml:mo><mml:msub><mml:mrow><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">f</mml:mi></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mi>&#x02003;</mml:mi><mml:mtext>as</mml:mtext><mml:mi>&#x02009;</mml:mi><mml:mi>&#x02009;</mml:mi><mml:mi>&#x003b3;</mml:mi><mml:mo>&#x02192;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></disp-formula> for <bold>f</bold> &#x02208; <italic>L</italic><sup>2</sup>(&#x003a9;<sup>3</sup>, &#x0211d;<sup>3</sup>). Unfortunately, by now the exact reconstruction kernels <bold>V</bold><sub><italic>&#x003b3;</italic></sub><sup><italic>j</italic></sup>(<italic>x</italic>),  that is, the solutions of <bold>D</bold><sub>1</sub><sup>&#x02217;</sup>[<bold>V</bold><sub><italic>&#x003b3;</italic></sub><sup><italic>j</italic></sup>(<italic>x</italic>)] = <bold>E</bold><sub><italic>&#x003b3;</italic></sub><sup><italic>j</italic></sup>(<italic>x</italic> &#x02212; &#x000b7;) are still unknown. But the special structureof the mollifier fields <bold>E</bold><sub><italic>&#x003b3;</italic></sub><sup><italic>j</italic></sup> allow for a computation of reconstruction kernels for <disp-formula id="eq0014"><label>(23)</label><mml:math id="M24"><mml:mrow><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">P</mml:mi><mml:mi mathvariant="bold">f</mml:mi></mml:mrow></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mn>,</mml:mn><mml:mi>&#x003c9;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mstyle><mml:mrow><mml:msubsup><mml:mstyle displaystyle="true"><mml:mrow><mml:mo>&#x0222b;</mml:mo></mml:mrow></mml:mstyle><mml:mrow><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mi>&#x0221e;</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mstyle><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">f</mml:mi></mml:mrow></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mo>+</mml:mo><mml:mi>t</mml:mi><mml:mi>&#x003c9;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mtext>d</mml:mtext><mml:mi>t</mml:mi></mml:mrow></mml:math></disp-formula> with the help of kernels for <bold>D</bold><sub>0</sub>.</p><p><statement id="thm3"><title>Theorem 3</title><p><italic>Let</italic> <italic>v</italic><sub><italic>&#x003b3;</italic></sub> <italic>be the reconstruction kernel associated to</italic> <italic>e</italic><sub><italic>&#x003b3;</italic></sub> <italic>with respect to</italic> <bold>D</bold><sub>0</sub>,  <italic>that is,</italic> <disp-formula id="eq0015"><label>(24)</label><mml:math id="M25"><mml:mrow><mml:msubsup><mml:mrow><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">D</mml:mi></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mo>&#x02217;</mml:mo></mml:mrow></mml:msubsup><mml:mo minsize="1em" maxsize="1em">[</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>&#x003b3;</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo minsize="1em" maxsize="1em">]</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>&#x003b3;</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mo>&#x022c5;</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula> <italic>Defining</italic> <bold>V</bold><sub><italic>&#x003b3;</italic></sub><sup><italic>j</italic></sup>(<italic>x</italic>; <italic>&#x003b1;</italic>, <italic>&#x003c9;</italic>) := <italic>v</italic><sub><italic>&#x003b3;</italic></sub>(<italic>x</italic>; <italic>&#x003b1;</italic>, <italic>&#x003c9;</italic>)&#x000b7;<italic>e</italic><sub><italic>j</italic></sub> &#x02208; <italic>L</italic><sup>2</sup>(&#x00393; &#x000d7; <italic>S</italic><sup>2</sup>, &#x0211d;<sup>3</sup>) <italic>yields</italic> <disp-formula id="eq0016"><label>(25)</label><mml:math id="M26"><mml:mrow><mml:msup><mml:mrow><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">P</mml:mi></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mo>&#x02217;</mml:mo></mml:mrow></mml:msup><mml:mo minsize="1em" maxsize="1em">[</mml:mo><mml:msubsup><mml:mrow><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">V</mml:mi></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mi>&#x003b3;</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo minsize="1em" maxsize="1em">]</mml:mo><mml:mo>=</mml:mo><mml:msubsup><mml:mrow><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">E</mml:mi></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mi>&#x003b3;</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mo>&#x022c5;</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mn>,</mml:mn></mml:mrow></mml:math></disp-formula> <italic>that means</italic> <bold>V</bold><sub><italic>&#x003b3;</italic></sub><sup><italic>j</italic></sup> <italic>is a reconstruction kernel associated to</italic> <bold>E</bold><sub><italic>&#x003b3;</italic></sub><sup><italic>j</italic></sup> <italic>with respect to</italic> <bold>P</bold>. <italic>The adjoint</italic> <bold>P</bold><sup>&#x02217;</sup> <italic>of</italic> <bold>P</bold> <italic>is given as</italic> <disp-formula id="eq0017"><label>(26)</label><mml:math id="M27"><mml:mrow><mml:msup><mml:mrow><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">P</mml:mi></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mo>&#x02217;</mml:mo></mml:mrow></mml:msup><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">g</mml:mi></mml:mrow></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mstyle><mml:mrow><mml:msub><mml:mrow><mml:mstyle displaystyle="true"><mml:mrow><mml:mo>&#x0222b;</mml:mo></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mi>&#x00393;</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:mo stretchy="false">|</mml:mo><mml:mi>x</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:msup><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">g</mml:mi></mml:mrow></mml:mstyle><mml:mo minsize="1.5em" maxsize="1.5em">(</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mn>,</mml:mn><mml:mfrac><mml:mrow><mml:mi>x</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003b1;</mml:mi></mml:mrow><mml:mrow><mml:mo minsize="0.75em" maxsize="0.75em">|</mml:mo><mml:mi>x</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mo minsize="0.75em" maxsize="0.75em">|</mml:mo></mml:mrow></mml:mfrac><mml:mo minsize="1.5em" maxsize="1.5em">)</mml:mo><mml:mtext>d</mml:mtext><mml:mi>&#x003b1;</mml:mi></mml:mrow></mml:math></disp-formula> <italic>for </italic><bold>g</bold> &#x02208; <italic>L</italic><sup>2</sup>(&#x00393; &#x000d7; <italic>S</italic><sup>2</sup>, &#x0211d;<sup>3</sup>).</p></statement></p><p><statement id="proof1"><title>Proof</title><p>The adjoint <bold>P</bold><sup>&#x02217;</sup> is computed as <disp-formula id="eq0018"><label>(27)</label><mml:math id="M28"><mml:mrow><mml:mtable columnalign="left"><mml:mtr><mml:mtd><mml:msub><mml:mrow><mml:mo minsize="0.75em" maxsize="0.75em">&#x02329;</mml:mo><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">P</mml:mi><mml:mi mathvariant="bold">f</mml:mi></mml:mrow></mml:mstyle><mml:mn>,</mml:mn><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">g</mml:mi></mml:mrow></mml:mstyle><mml:mo minsize="0.75em" maxsize="0.75em">&#x0232a;</mml:mo></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x00393;</mml:mi><mml:mo>&#x000d7;</mml:mo><mml:msup><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mrow><mml:mi>&#x0211d;</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mstyle><mml:mrow><mml:msub><mml:mrow><mml:mstyle displaystyle="true"><mml:mrow><mml:mo>&#x0222b;</mml:mo></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mi>&#x00393;</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:mstyle><mml:mrow><mml:msub><mml:mrow><mml:mstyle displaystyle="true"><mml:mrow><mml:mo>&#x0222b;</mml:mo></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:mstyle><mml:mrow><mml:msubsup><mml:mrow><mml:mstyle displaystyle="true"><mml:mrow><mml:mo>&#x0222b;</mml:mo></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mi>&#x0221e;</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mstyle><mml:mo minsize="1em" maxsize="1em">&#x02329;</mml:mo><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">f</mml:mi></mml:mrow></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mo>+</mml:mo><mml:mi>t</mml:mi><mml:mi>&#x003c9;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">g</mml:mi></mml:mrow></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mn>,</mml:mn><mml:mi>&#x003c9;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo minsize="1em" maxsize="1em">&#x0232a;</mml:mo><mml:mtext>d</mml:mtext><mml:mi>t</mml:mi><mml:mi>&#x02009;</mml:mi><mml:mtext>d</mml:mtext><mml:mi>S</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003c9;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mtext>d</mml:mtext><mml:mi>&#x003b1;</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi/></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mstyle><mml:mrow><mml:msub><mml:mrow><mml:mstyle displaystyle="true"><mml:mrow><mml:mo>&#x0222b;</mml:mo></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mi>&#x00393;</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:mstyle><mml:mrow><mml:msub><mml:mrow><mml:mstyle displaystyle="true"><mml:mrow><mml:mo>&#x0222b;</mml:mo></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:mrow><mml:mo>&#x02329;</mml:mo><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">f</mml:mi></mml:mrow></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">g</mml:mi></mml:mrow></mml:mstyle><mml:mo minsize="1.5em" maxsize="1.5em">(</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mn>,</mml:mn><mml:mfrac><mml:mrow><mml:mi>x</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003b1;</mml:mi></mml:mrow><mml:mrow><mml:mo minsize="0.75em" maxsize="0.75em">|</mml:mo><mml:mi>x</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mo minsize="0.75em" maxsize="0.75em">|</mml:mo></mml:mrow></mml:mfrac><mml:mo minsize="1.5em" maxsize="1.5em">)</mml:mo><mml:mo>&#x0232a;</mml:mo></mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>x</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:msup><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mtext>d</mml:mtext><mml:mi>x</mml:mi><mml:mi>&#x02009;</mml:mi><mml:mtext>d</mml:mtext><mml:mi>&#x003b1;</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi/></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mo minsize="1em" maxsize="1em">&#x02329;</mml:mo><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">f</mml:mi></mml:mrow></mml:mstyle><mml:mn>,</mml:mn><mml:msup><mml:mrow><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">P</mml:mi></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mo>&#x02217;</mml:mo></mml:mrow></mml:msup><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">g</mml:mi></mml:mrow></mml:mstyle><mml:mo minsize="1em" maxsize="1em">&#x0232a;</mml:mo></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003a9;</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mrow><mml:mi>&#x0211d;</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mn>,</mml:mn></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula> where we applied Fubini'stheorem as well as the substitution <italic>x</italic> = <italic>&#x003b1;</italic> + <italic>t</italic><italic>&#x003c9;</italic>. A short calculation further shows that<disp-formula id="eq0019"><label>(28)</label><mml:math id="M29"><mml:mrow><mml:mtable columnalign="left"><mml:mtr><mml:mtd><mml:msup><mml:mrow><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">P</mml:mi></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mo>&#x02217;</mml:mo></mml:mrow></mml:msup><mml:mo minsize="1em" maxsize="1em">[</mml:mo><mml:msubsup><mml:mrow><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">V</mml:mi></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mi>&#x003b3;</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo minsize="1em" maxsize="1em">]</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mstyle><mml:mrow><mml:msub><mml:mrow><mml:mstyle displaystyle="true"><mml:mrow><mml:mo>&#x0222b;</mml:mo></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mi>&#x00393;</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:mo stretchy="false">|</mml:mo><mml:mi>y</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:msup><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:msubsup><mml:mrow><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">V</mml:mi></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mi>&#x003b3;</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msubsup><mml:mo minsize="1.5em" maxsize="1.5em">(</mml:mo><mml:mi>x</mml:mi><mml:mo>;</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mn>,</mml:mn><mml:mfrac><mml:mrow><mml:mi>y</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003b1;</mml:mi></mml:mrow><mml:mrow><mml:mo minsize="0.75em" maxsize="0.75em">|</mml:mo><mml:mi>y</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mo minsize="0.75em" maxsize="0.75em">|</mml:mo></mml:mrow></mml:mfrac><mml:mo minsize="1.5em" maxsize="1.5em">)</mml:mo><mml:mtext>d</mml:mtext><mml:mi>&#x003b1;</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi/></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mstyle><mml:mrow><mml:msub><mml:mrow><mml:mstyle displaystyle="true"><mml:mrow><mml:mo>&#x0222b;</mml:mo></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mi>&#x00393;</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:mo stretchy="false">|</mml:mo><mml:mi>y</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:msup><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>&#x003b3;</mml:mi></mml:mrow></mml:msub><mml:mo minsize="1.5em" maxsize="1.5em">(</mml:mo><mml:mi>x</mml:mi><mml:mo>;</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mn>,</mml:mn><mml:mfrac><mml:mrow><mml:mi>y</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003b1;</mml:mi></mml:mrow><mml:mrow><mml:mo minsize="0.75em" maxsize="0.75em">|</mml:mo><mml:mi>y</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mo minsize="0.75em" maxsize="0.75em">|</mml:mo></mml:mrow></mml:mfrac><mml:mo minsize="1.5em" maxsize="1.5em">)</mml:mo><mml:mtext>d</mml:mtext><mml:mi>&#x003b1;</mml:mi><mml:mo>&#x022c5;</mml:mo><mml:msub><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi/></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:msubsup><mml:mrow><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">D</mml:mi></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mo>&#x02217;</mml:mo></mml:mrow></mml:msubsup><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>&#x003b3;</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">]</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>&#x022c5;</mml:mo><mml:msub><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>&#x003b3;</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>&#x022c5;</mml:mo><mml:msub><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi/></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:msubsup><mml:mrow><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">E</mml:mi></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mi>&#x003b3;</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>.</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula></p></statement></p><p>The data <bold>Pf</bold> are not known and cannot be computed from <bold>D</bold><sub>1</sub><bold>f</bold>. But, observing that <disp-formula id="eq0020"><label>(29)</label><mml:math id="M30"><mml:mrow><mml:msub><mml:mrow><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">D</mml:mi></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">f</mml:mi></mml:mrow></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mn>,</mml:mn><mml:mi>&#x003c9;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mo minsize="1em" maxsize="1em">&#x02329;</mml:mo><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">P</mml:mi><mml:mi mathvariant="bold">f</mml:mi></mml:mrow></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mn>,</mml:mn><mml:mi>&#x003c9;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mi>&#x003c9;</mml:mi><mml:mo minsize="1em" maxsize="1em">&#x0232a;</mml:mo></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>&#x0211d;</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:msub></mml:mrow></mml:math></disp-formula> and since <bold>Pf</bold>(<italic>&#x003b1;</italic>, <italic>&#x003c9;</italic>) &#x02208; &#x0211d;<sup>3</sup> we obtain <disp-formula id="eq0021"><label>(30)</label><mml:math id="M31"><mml:mrow><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">P</mml:mi><mml:mi mathvariant="bold">f</mml:mi></mml:mrow></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mn>,</mml:mn><mml:mi>&#x003c9;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">D</mml:mi></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">f</mml:mi></mml:mrow></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mn>,</mml:mn><mml:mi>&#x003c9;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mi>&#x003c9;</mml:mi><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>&#x003bb;</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo minsize="1em" maxsize="1em">(</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mn>,</mml:mn><mml:msubsup><mml:mrow><mml:mi>&#x003c9;</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mo>&#x022a5;</mml:mo></mml:mrow></mml:msubsup><mml:mo minsize="1em" maxsize="1em">)</mml:mo><mml:msubsup><mml:mrow><mml:mi>&#x003c9;</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mo>&#x022a5;</mml:mo></mml:mrow></mml:msubsup><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>&#x003bb;</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo minsize="1em" maxsize="1em">(</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mn>,</mml:mn><mml:msubsup><mml:mrow><mml:mi>&#x003c9;</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mo>&#x022a5;</mml:mo></mml:mrow></mml:msubsup><mml:mo minsize="1em" maxsize="1em">)</mml:mo><mml:msubsup><mml:mrow><mml:mi>&#x003c9;</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mo>&#x022a5;</mml:mo></mml:mrow></mml:msubsup><mml:mn>,</mml:mn></mml:mrow></mml:math></disp-formula> where <italic>&#x003c9;</italic><sub>1</sub><sup>&#x022a5;</sup>, <italic>&#x003c9;</italic><sub>2</sub><sup>&#x022a5;</sup> &#x02208; <italic>S</italic><sup>2</sup> are such that {<italic>&#x003c9;</italic>, <italic>&#x003c9;</italic><sub>1</sub><sup>&#x022a5;</sup>, <italic>&#x003c9;</italic><sub>2</sub><sup>&#x022a5;</sup>} is an orthonormal basis of &#x0211d;<sup>3</sup> and <italic>&#x003bb;</italic><sub>1</sub>, <italic>&#x003bb;</italic><sub>2</sub> are appropriate coefficients. Thusapproximating <disp-formula id="eq0022"><label>(31)</label><mml:math id="M32"><mml:mrow><mml:mstyle mathsize="normal"><mml:mi mathvariant="bold">P</mml:mi><mml:mi mathvariant="bold">f</mml:mi></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mn>,</mml:mn><mml:mi>&#x003c9;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>&#x02248;</mml:mo><mml:msub><mml:mstyle mathsize="normal"><mml:mi mathvariant="bold">D</mml:mi></mml:mstyle><mml:mn>1</mml:mn></mml:msub><mml:mstyle mathsize="normal"><mml:mi mathvariant="bold">f</mml:mi></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mn>,</mml:mn><mml:mi>&#x003c9;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mi>&#x003c9;</mml:mi></mml:mrow></mml:math></disp-formula> we neglect the parts orthogonal to <italic>&#x003c9;</italic> and can apply the method of approximateinverse using the reconstruction kernels <bold>V</bold><sub><italic>&#x003b3;</italic></sub><sup><italic>j</italic></sup> for <bold>P</bold>.This procedure results in <xref ref-type="other" rid="alg1">Algorithm 1</xref>. 			</p><p>It is worth to mention that the mathematical model hasnot been changed. Results for the scalar cone beam transform <bold>D</bold><sub>0</sub> <italic> f</italic>(<italic>&#x003b1;</italic>, <italic>&#x003c9;</italic>) are transferred to its 3D equivalent <bold>Pf</bold>(<italic>&#x003b1;</italic>, <italic>&#x003c9;</italic>) which is an approximation to <bold>D</bold><sub>1</sub><bold>f</bold>(<italic>&#x003b1;</italic>, <italic>&#x003c9;</italic>) by using <bold>Pf</bold>(<italic>&#x003b1;</italic>, <italic>&#x003c9;</italic>) &#x02248; <bold>D</bold><sub>1</sub><bold>f</bold>(<italic>&#x003b1;</italic>, <italic>&#x003c9;</italic>)<italic>&#x003c9;</italic>.</p><p>Figures <xref ref-type="fig" rid="fig3">3</xref> and <xref ref-type="fig" rid="fig4">4</xref> display first results of the abovealgorithm when applied to exact, simulated data for the solenoidal vectorfields <bold>f</bold>(<italic>x</italic>) = (&#x02212;<italic>x</italic><sub>2</sub>, <italic>x</italic><sub>1</sub>, 0)<sup>&#x022a4;</sup> and <bold>f</bold>(<italic>x</italic>) = (1 &#x02212; <italic>x</italic><sub>2</sub><sup>2</sup> &#x02212; <italic>x</italic><sub>3</sub><sup>2</sup>, 0, 0)<sup>&#x022a4;</sup>. As already said, we made use of the measurement setup as shown in <xref ref-type="fig" rid="fig1">Figure 1</xref>. Thescanning curve was &#x00393; = <italic>r</italic><italic>S</italic><sup>2</sup> &#x02229; {<italic>x</italic><sub>3</sub> = 0}, <italic>r</italic> = 3,  that is a circle of radius <italic>r</italic> = 3 in the plane {<italic>x</italic><sub>3</sub> = 0}. The divergence-free vector fields are assumed to be defined in thethree-dimensional unit ball, that is, according to our definitions we have &#x003a9; = &#x003a9;<sup>3</sup>. The reconstructions depicted in Figures <xref ref-type="fig" rid="fig3">3</xref> and <xref ref-type="fig" rid="fig4">4</xref> were done in the plane {<italic>x</italic><sub>3</sub> = 0}. The mollifier <italic>e</italic><sub><italic>&#x003b3;</italic></sub> defining the fields <bold>E</bold><sub><italic>&#x003b3;</italic></sub><sup><italic>j</italic></sup> was chosen as the Gaussian given in (<xref ref-type="disp-formula" rid="eq8">18</xref>). The regularization parameter was <italic>&#x003b3;</italic> = 0.00692 and <italic>&#x003b3;</italic> = 0.007,  respectively. The corresponding reconstruction kernel <italic>v</italic><sub><italic>&#x003b3;</italic></sub>(0; &#x000b7;, &#x000b7;) is depicted in <xref ref-type="fig" rid="fig5">Figure 5</xref>. The reconstructionkernel can be seen as a lowpass filter. Then, the regularization parameter <italic>&#x003b3;</italic> determines the width of the filter and thuscan be interpreted as the cutoff frequency. Large values of <italic>&#x003b3;</italic> correspond to a large smoothing effect in thereconstructed vector field. Unfortunately we cannot estimate the range of anoptimal <italic>&#x003b3;</italic> since it depends on the noise level of the measureddata as well as on the exact solution <bold>f</bold> itself. Nevertheless, in our experiments avalue of <italic>&#x003b3;</italic> &#x02248; 0.007 always led to good results.</p><p>				<xref ref-type="fig" rid="fig4">Figure 4</xref> emphasizes that the main part of thereconstruction error is located at the boundary of the domain. Although our scanning curve is only onecircle our algorithm nevertheless allows us to reconstruct any arbitrary planein the <italic>x</italic><sub>3</sub>-direction. Figures <xref ref-type="fig" rid="fig6">6</xref> and <xref ref-type="fig" rid="fig7">7</xref> show thereconstructions for the planes {<italic>x</italic><sub>3</sub> = 0.5}, {<italic>x</italic><sub>3</sub> = 0.75}, {<italic>x</italic><sub>3</sub> = 0.9} and {<italic>x</italic><sub>3</sub> = 0.95} of the two afore-mentioned vector fields.<xref ref-type="fig" rid="fig7"> Figure 7</xref> also illustrates that the intensityof the vector field <bold>f</bold>(<italic>x</italic>) = (1 &#x02212; <italic>x</italic><sub>2</sub><sup>2</sup> &#x02212; <italic>x</italic><sub>3</sub><sup>2</sup>, 0, 0)<sup>&#x022a4;</sup> decreases as should be expected since <italic>x</italic><sub>3</sub><sup>2</sup> is subtracted in the first component and thateven the directional error at the boundary is reduced with increasing <italic>x</italic><sub>3</sub>.</p><p>The very simple vector field <bold>f</bold>(<italic>x</italic>) = (1, 0, 0)<sup>&#x022a4;</sup> allows us to gain more insight into possibleproblems and limitations of our algorithm.<xref ref-type="fig" rid="fig8"> Figure 8</xref> depicts the original vectorfield and the reconstruction in the plane {<italic>x</italic><sub>3</sub> = 0} just as for the other vector fields before. The regularization parameter was <italic>&#x003b3;</italic> = 0.0075. There is approximately the same directionalerror at the boundary as in <xref ref-type="fig" rid="fig4">Figure 4</xref>. In addition to that, a slight error inintensity becomes visible. As before, the reconstruction for different planesin the <italic>x</italic><sub>3</sub>-direction is shown in <xref ref-type="fig" rid="fig9">Figure 9</xref>. As in the reconstruction of the field <bold>f</bold>(<italic>x</italic>) = (1 &#x02212; <italic>x</italic><sub>2</sub><sup>2</sup> &#x02212; <italic>x</italic><sub>3</sub><sup>2</sup>, 0, 0)<sup>&#x022a4;</sup>,  it is clearly visible that the directional error at the boundary of the fieldis reduced and that we obtain a uniform direction of the arrows the farther wemove away from the plane {<italic>x</italic><sub>3</sub> = 0}. But the images also show that the intensity of the vector field is slightlydecreasing with increasing <italic>x</italic><sub>3</sub> which should certainly not be the case forthis particular vector field. In our ongoing studies of the reconstructionalgorithm we try to avoid this problem by either using a varying scaling factorfor the different planes or by using a different regularization parameter.</p><p>Since the described algorithm allows thereconstruction of any arbitrary plane in the <italic>x</italic><sub>3</sub>-direction, a vertical cross-section of avector field can easily be computed.<xref ref-type="fig" rid="fig10"> Figure 10</xref> shows a reconstruction of theplane {<italic>x</italic><sub>1</sub> = 0} for the circular vector field <bold>f</bold>(<italic>x</italic>) = (&#x02212;<italic>x</italic><sub>2</sub>, <italic>x</italic><sub>1</sub>, 0)<sup>&#x022a4;</sup> for two different viewing angles. Figures <xref ref-type="fig" rid="fig11">11</xref>and <xref ref-type="fig" rid="fig12">12</xref> display the analogous results for the vector fields <bold>f</bold>(<italic>x</italic>) = (1 &#x02212; <italic>x</italic><sub>2</sub><sup>2</sup> &#x02212; <italic>x</italic><sub>3</sub><sup>2</sup>, 0, 0)<sup>&#x022a4;</sup> and <bold>f</bold>(<italic>x</italic>) = (1, 0, 0)<sup>&#x022a4;</sup>,  respectively. In <xref ref-type="fig" rid="fig11">Figure 11</xref> we recognize a laminar flow just as it would beexpected for the flow in blood vessels whereas <xref ref-type="fig" rid="fig12">Figure 12</xref> once more reveals theundesired decrease in intensity.</p><p>Up to now, we have only shown reconstructions ofdivergence-free vector fields which were perpendicular to (0, 0, 1)<sup>&#x022a4;</sup>,  planar solenoidal fields so to speak. This was done because reconstructing theplane {<italic>x</italic><sub>3</sub> = 0} we have to face another difficult problem. Considering the plane {<italic>x</italic><sub>3</sub> = 0} it is obvious that the third component of thedirection vector <italic>&#x003c9;</italic> must always be zero, that is, <italic>&#x003c9;</italic> = (<italic>&#x003c9;</italic><sub>1</sub>, <italic>&#x003c9;</italic><sub>2</sub>, 0)<sup>&#x022a4;</sup>. From formula (<xref ref-type="disp-formula" rid="eq3">3</xref>) we can easily calculate the projection of the vector field <bold>f</bold> onto <italic>&#x003c9;</italic> &#x02208; {<italic>x</italic><sub>3</sub> = 0} as <disp-formula id="eq0024"><label>(32)</label><mml:math id="M33"><mml:mrow><mml:mtable columnalign="left"><mml:mtr><mml:mtd><mml:msub><mml:mrow><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">D</mml:mi></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">f</mml:mi></mml:mrow></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mn>,</mml:mn><mml:mi>&#x003c9;</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mtd><mml:mtd><mml:mi>&#x02009;</mml:mi><mml:mi>&#x02009;</mml:mi><mml:mo>=</mml:mo><mml:mstyle><mml:mrow><mml:msubsup><mml:mrow><mml:mstyle displaystyle="true"><mml:mrow><mml:mo>&#x0222b;</mml:mo></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mi>&#x0221e;</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mstyle><mml:mo minsize="1em" maxsize="1em">&#x02329;</mml:mo><mml:mstyle mathsize="normal"><mml:mrow><mml:mi mathvariant="bold">f</mml:mi></mml:mrow></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mo>+</mml:mo><mml:mi>t</mml:mi><mml:mi>&#x003c9;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mi>&#x003c9;</mml:mi><mml:mo minsize="1em" maxsize="1em">&#x0232a;</mml:mo><mml:mtext>d</mml:mtext><mml:mi>t</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi/></mml:mtd><mml:mtd><mml:mi>&#x02009;</mml:mi><mml:mi>&#x02009;</mml:mi><mml:mo>=</mml:mo><mml:mstyle><mml:mrow><mml:msubsup><mml:mrow><mml:mstyle displaystyle="true"><mml:mrow><mml:mo>&#x0222b;</mml:mo></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mi>&#x0221e;</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mstyle><mml:mrow><mml:mo minsize="1em" maxsize="1em">(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mo>+</mml:mo><mml:mi>t</mml:mi><mml:mi>&#x003c9;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mrow><mml:mi>&#x003c9;</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mo>+</mml:mo><mml:mi>t</mml:mi><mml:mi>&#x003c9;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mrow><mml:mi>&#x003c9;</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi/></mml:mtd><mml:mtd><mml:mrow><mml:mi>&#x02003;</mml:mi><mml:mi>&#x02003;</mml:mi><mml:mi>&#x02009;</mml:mi><mml:mi>&#x02003;</mml:mi><mml:mrow><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mo>+</mml:mo><mml:mi>t</mml:mi><mml:mi>&#x003c9;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mrow><mml:mi>&#x003c9;</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mo minsize="1em" maxsize="1em">)</mml:mo></mml:mrow><mml:mtext>d</mml:mtext><mml:mi>t</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi/></mml:mtd><mml:mtd><mml:mover><mml:mrow><mml:mo>=</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>&#x003c9;</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:mover><mml:mstyle><mml:mrow><mml:msubsup><mml:mrow><mml:mstyle displaystyle="true"><mml:mrow><mml:mo>&#x0222b;</mml:mo></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mi>&#x0221e;</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mstyle><mml:mrow><mml:mo minsize="1em" maxsize="1em">(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mo>+</mml:mo><mml:mi>t</mml:mi><mml:mi>&#x003c9;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mrow><mml:mi>&#x003c9;</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mo>+</mml:mo><mml:mi>t</mml:mi><mml:mi>&#x003c9;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mrow><mml:mi>&#x003c9;</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mo minsize="1em" maxsize="1em">)</mml:mo></mml:mrow><mml:mtext>d</mml:mtext><mml:mi>t</mml:mi><mml:mn>,</mml:mn></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula> which means that the verticalcomponent <italic>f</italic><sub>3</sub>(<italic>x</italic>) of any vector field cannot be reconstructed inthat particular case. But even for planes where <italic>x</italic><sub>3</sub> &#x02260; 0,  the reconstruction of the third component of a vector field will be verydifficult. This becomes clear if we look at each of the values <italic>&#x003c9;</italic><sub>1</sub>, <italic>&#x003c9;</italic><sub>2</sub> and <italic>&#x003c9;</italic><sub>3</sub> of our direction vector <italic>&#x003c9;</italic> = (<italic>&#x003c9;</italic><sub>1</sub>, <italic>&#x003c9;</italic><sub>2</sub>, <italic>&#x003c9;</italic><sub>3</sub>)<sup>&#x022a4;</sup> separately. Clearly, <italic>&#x003c9;</italic><sub>1</sub> and <italic>&#x003c9;</italic><sub>2</sub> take all values from &#x02212;1 to 1 if the source travels around the circularscanning curve. This does not apply to <italic>&#x003c9;</italic><sub>3</sub>. The maximal value for <italic>&#x003c9;</italic><sub>3</sub> is obtained for the tangential ray with <italic>&#x003c9;</italic><sub>2</sub> = 0,  that is the maximal ray in the <italic>x</italic><sub>1</sub>-<italic>x</italic><sub>3</sub>-plane hitting the object &#x003a9; in just one point. From <xref ref-type="fig" rid="fig13">Figure 13</xref> we easily see that <disp-formula id="eq0025"><label>(33)</label><mml:math id="M34"><mml:mrow><mml:mtable columnalign="left"><mml:mtr><mml:mtd><mml:mi>sin</mml:mi><mml:mo>&#x02009;</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003b2;</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:mfrac><mml:mn>,</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>tan</mml:mi><mml:mo>&#x02009;</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003b2;</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:mfrac><mml:mo>&#x027fa;</mml:mo><mml:mi>u</mml:mi><mml:mo>=</mml:mo><mml:mi>r</mml:mi><mml:mi>&#x02009;</mml:mi><mml:mi>tan</mml:mi><mml:mo>&#x02009;</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003b2;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>r</mml:mi><mml:mi>&#x02009;</mml:mi><mml:mi>tan</mml:mi><mml:mo>&#x02009;</mml:mo><mml:mrow><mml:mo minsize="1.5em" maxsize="1.5em">(</mml:mo><mml:mrow><mml:mi>arcsin</mml:mi><mml:mo>&#x02009;</mml:mo><mml:mrow><mml:mo minsize="1.5em" maxsize="1.5em">(</mml:mo><mml:mrow><mml:mfrac><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:mfrac></mml:mrow><mml:mo minsize="1.5em" maxsize="1.5em">)</mml:mo></mml:mrow></mml:mrow><mml:mo minsize="1.5em" maxsize="1.5em">)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>Using the equivalence <disp-formula id="eq0026"><label>(34)</label><mml:math id="M35"><mml:mrow><mml:mi>arcsin</mml:mi><mml:mo>&#x02009;</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>arctan</mml:mi><mml:mo>&#x02009;</mml:mo><mml:mrow><mml:mo minsize="1.5em" maxsize="1.5em">(</mml:mo><mml:mrow><mml:mfrac><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:msqrt><mml:mrow><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:msup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:msqrt></mml:mrow></mml:mfrac></mml:mrow><mml:mo minsize="1.5em" maxsize="1.5em">)</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula> we obtain <disp-formula id="eq0027"><label>(35)</label><mml:math id="M36"><mml:mrow><mml:mtable columnalign="left"><mml:mtr><mml:mtd><mml:mi>u</mml:mi></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mi>r</mml:mi><mml:mi>tan</mml:mi><mml:mo>&#x02009;</mml:mo><mml:mrow><mml:mo minsize="1.75em" maxsize="1.75em">(</mml:mo><mml:mrow><mml:mi>arctan</mml:mi><mml:mo>&#x02009;</mml:mo><mml:mrow><mml:mo minsize="1.75em" maxsize="1.75em">(</mml:mo><mml:mrow><mml:mfrac><mml:mrow><mml:mi>R</mml:mi><mml:mo>/</mml:mo><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:msqrt><mml:mrow><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:msup><mml:mrow><mml:mo minsize="0.75em" maxsize="0.75em">(</mml:mo><mml:mrow><mml:mi>R</mml:mi><mml:mo>/</mml:mo><mml:mi>r</mml:mi></mml:mrow><mml:mo minsize="0.75em" maxsize="0.75em">)</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:msqrt></mml:mrow></mml:mfrac></mml:mrow><mml:mo minsize="1.75em" maxsize="1.75em">)</mml:mo></mml:mrow></mml:mrow><mml:mo minsize="1.75em" maxsize="1.75em">)</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi/></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:msqrt><mml:mrow><mml:mrow><mml:mo minsize="0.75em" maxsize="0.75em">(</mml:mo><mml:msup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>&#x02212;</mml:mo><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo minsize="0.75em" maxsize="0.75em">)</mml:mo><mml:mo>/</mml:mo></mml:mrow><mml:msup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:msqrt></mml:mrow></mml:mfrac><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>r</mml:mi><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:msqrt><mml:mrow><mml:msup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>&#x02212;</mml:mo><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:msqrt></mml:mrow></mml:mfrac><mml:mo>.</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula> For the direction vector <italic>&#x003c9;</italic> we can then deduce <disp-formula id="eq0028"><label>(36)</label><mml:math id="M37"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mi>&#x003c9;</mml:mi></mml:mtd><mml:mtd columnalign="left"><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mo minsize="0.75em" maxsize="0.75em">&#x02225;</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo minsize="0.75em" maxsize="0.75em">&#x02225;</mml:mo></mml:mrow></mml:mfrac><mml:mi>&#x003b8;</mml:mi><mml:mi>&#x02003;</mml:mi><mml:mtext>with</mml:mtext><mml:mi>&#x02009;</mml:mi><mml:mi>&#x02009;</mml:mi><mml:mi>&#x003b8;</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>u</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mn>,</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mo minsize="0.75em" maxsize="0.75em">&#x02225;</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo minsize="0.75em" maxsize="0.75em">&#x02225;</mml:mo></mml:mtd><mml:mtd columnalign="left"><mml:mo>=</mml:mo><mml:msqrt><mml:mrow><mml:msup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:msup><mml:mrow><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:msqrt><mml:mo>=</mml:mo><mml:msqrt><mml:mrow><mml:msup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:mfrac><mml:mrow><mml:msup><mml:mrow><mml:mo minsize="0.75em" maxsize="0.75em">(</mml:mo><mml:mrow><mml:mi>r</mml:mi><mml:mi>R</mml:mi></mml:mrow><mml:mo minsize="0.75em" maxsize="0.75em">)</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>&#x02212;</mml:mo><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfrac></mml:mrow></mml:msqrt><mml:mo>=</mml:mo><mml:mi>r</mml:mi><mml:msqrt><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mfrac><mml:mrow><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>&#x02212;</mml:mo><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfrac></mml:mrow></mml:msqrt></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mi/></mml:mtd><mml:mtd columnalign="left"><mml:mo>=</mml:mo><mml:mi>r</mml:mi><mml:msqrt><mml:mrow><mml:mfrac><mml:mrow><mml:msup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>&#x02212;</mml:mo><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>&#x02212;</mml:mo><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfrac></mml:mrow></mml:msqrt><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow><mml:mrow><mml:msqrt><mml:mrow><mml:msup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>&#x02212;</mml:mo><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:msqrt></mml:mrow></mml:mfrac><mml:mn>,</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mfrac><mml:mrow><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:msqrt><mml:mrow><mml:msup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:msup><mml:mrow><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:msqrt></mml:mrow></mml:mfrac></mml:mtd><mml:mtd columnalign="left"><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mo minsize="1em" maxsize="1em">(</mml:mo><mml:mrow><mml:mi>r</mml:mi><mml:mi>R</mml:mi><mml:mo>/</mml:mo></mml:mrow><mml:msqrt><mml:mrow><mml:msup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>&#x02212;</mml:mo><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:msqrt><mml:mo minsize="1em" maxsize="1em">)</mml:mo></mml:mrow><mml:mrow><mml:mo minsize="1em" maxsize="1em">(</mml:mo><mml:mrow><mml:msup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>/</mml:mo><mml:msqrt><mml:mrow><mml:msup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>&#x02212;</mml:mo><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:msqrt></mml:mrow><mml:mo minsize="1em" maxsize="1em">)</mml:mo></mml:mrow></mml:mfrac><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:mfrac><mml:mn>,</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mfrac><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:msqrt><mml:mrow><mml:msup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:msup><mml:mrow><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:msqrt></mml:mrow></mml:mfrac></mml:mtd><mml:mtd columnalign="left"><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mo minsize="1em" maxsize="1em">(</mml:mo><mml:mrow><mml:msup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>/</mml:mo><mml:msqrt><mml:mrow><mml:msup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>&#x02212;</mml:mo><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:msqrt></mml:mrow><mml:mo minsize="1em" maxsize="1em">)</mml:mo></mml:mrow></mml:mfrac><mml:mo>=</mml:mo><mml:mo>&#x02212;</mml:mo><mml:mfrac><mml:mrow><mml:mo minsize="1em" maxsize="1em">(</mml:mo><mml:mrow><mml:msqrt><mml:mrow><mml:msup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>&#x02212;</mml:mo><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:msqrt></mml:mrow><mml:mo minsize="1em" maxsize="1em">)</mml:mo></mml:mrow><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:mfrac></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mo>&#x021d2;</mml:mo><mml:mi>&#x003c9;</mml:mi></mml:mtd><mml:mtd columnalign="left"><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mfrac><mml:mrow><mml:mo minsize="1em" maxsize="1em">(</mml:mo><mml:mrow><mml:msqrt><mml:mrow><mml:msup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>&#x02212;</mml:mo><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:msqrt></mml:mrow><mml:mo minsize="1em" maxsize="1em">)</mml:mo></mml:mrow><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mfrac><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mi>R</mml:mi></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:mfrac></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula></p><p>This simple geometric calculation shows that the angle <italic>&#x003b2;</italic> between the plane {<italic>x</italic><sub>3</sub> = 0} and the tangential ray is not exceeding  &#x02248; 19.47&#x000b0; for our geometric setup in which the object iscontained in the three-dimensional unit ball &#x003a9;<sup>3</sup>,  so <italic>R</italic> = 1,  and the scanning circle &#x00393; has radius <italic>r</italic> = 3. We conclude that <disp-formula id="eq0029"><label>(37)</label><mml:math id="M38"><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mfrac><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:mfrac><mml:mo>&#x02264;</mml:mo><mml:msub><mml:mrow><mml:mi>&#x003c9;</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msub><mml:mo>&#x02264;</mml:mo><mml:mfrac><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:mfrac><mml:mo>&#x027fa;</mml:mo><mml:mo>&#x02212;</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:mfrac><mml:mo>&#x02264;</mml:mo><mml:msub><mml:mrow><mml:mi>&#x003c9;</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msub><mml:mo>&#x02264;</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:mfrac><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula> The problem with the small values for <italic>&#x003c9;</italic><sub>3</sub> gets even more difficult the larger thedistance between object and scanning circle is chosen. This fact might even beresponsible for the intensity error observed when reconstructing differentplanes in the <italic>x</italic><sub>3</sub>-direction as mentioned above.</p><p>The consequences of the problem can easily beillustrated by applying our algorithm to the two fully three-dimensional vectorfields <bold>f</bold>(<italic>x</italic>) = (1, 1, 1)<sup>&#x022a4;</sup> and <bold>f</bold>(<italic>x</italic>) = (1, 1,  &#x02212;1)<sup>&#x022a4;</sup> whose <italic>x</italic><sub>3</sub>-component should obviously point to oppositedirections.<xref ref-type="fig" rid="fig14"> Figure 14</xref> shows that even for different perspectives there is novisible difference between the two reconstructions in the plane {<italic>x</italic><sub>3</sub> = 0}. Only for larger (or smaller) values of <italic>x</italic><sub>3</sub>,  that means planes above (or below) the plane of the scanning curve {<italic>x</italic><sub>3</sub> = 0},  the reconstructions become distinguishable. This is shown in <xref ref-type="fig" rid="fig15">Figure 15</xref> wherethe results for {<italic>x</italic><sub>3</sub> = 0.75} and {<italic>x</italic><sub>3</sub> = 0.95} can be directly compared to each other. Evenin this case the difference is marginal. For the vector field <bold>f</bold>(<italic>x</italic>) = (1, 1, 1)<sup>&#x022a4;</sup> the arrows characterizing the vectors areslightly pointing upwards whereas those of <bold>f</bold>(<italic>x</italic>) = (1, 1, &#x02212;1)<sup>&#x022a4;</sup> are pointing downwards. This can be seen fromthe scale as well as from the colored points indicating the reconstructionplane. For the latter vector field these points are painted above the arrowsproving that the reconstructed vectors point in a negative <italic>x</italic><sub>3</sub>-direction.</p><p>Despite all these drawbacks it is neverthelesspossible to reconstruct a whole three-dimensional vector field. Summarizing theresults so far, the <italic>x</italic><sub>1</sub>- and <italic>x</italic><sub>2</sub>-component of any vector field <bold>f</bold>(<italic>x</italic>) = (<italic>f</italic><sub>1</sub>, <italic>f</italic><sub>2</sub>, <italic>f</italic><sub>3</sub>)<sup>&#x022a4;</sup>,  that is, <italic>f</italic><sub>1</sub> and <italic>f</italic><sub>2</sub>,  can be reconstructed for any plane in the <italic>x</italic><sub>3</sub>-direction. Changing our measurement setup byadding to the current scanning curve &#x00393; = <italic>r</italic><italic>S</italic><sup>2</sup> &#x02229; {<italic>x</italic><sub>3</sub> = 0}, <italic>r</italic> = 3,  a second, orthogonal circle of the same radius in the plane {<italic>x</italic><sub>1</sub> = 0} enables us to reconstruct the <italic>x</italic><sub>2</sub>- and <italic>x</italic><sub>3</sub>-component of any vector field, that is <italic>f</italic><sub>2</sub> and <italic>f</italic><sub>3</sub>,  by using our algorithm as usual. Lade et al. used a comparable setup of two&#x0201c;perpendicular tilt series&#x0201d; in [<xref ref-type="bibr" rid="B21">21</xref>] for their longitudinal and transverse measurements. For this additional circle we compute the vertical cross-section of the fieldin the appropriate plane as shown before. The computations can be donesimultaneously which means that no additional time is needed. The modifiedmeasurement setup is depicted in <xref ref-type="fig" rid="fig16">Figure 16</xref>. As we have shown, we are able toreconstruct <italic>f</italic><sub>1</sub> and <italic>f</italic><sub>2</sub> for any plane in the <italic>x</italic><sub>3</sub>-direction with the algorithm presented at thebeginning of the paper. The second, orthogonal circle in the plane {<italic>x</italic><sub>1</sub> = 0} enables us to analogously reconstruct <italic>f</italic><sub>2</sub> and <italic>f</italic><sub>3</sub> for any plane in the <italic>x</italic><sub>1</sub>-direction. Taking a vertical cross-section at <italic>x</italic><sub>3</sub> = 0,  both results can be combined to reconstruct a complete slice of athree-dimensional vector field. Thereby, we have to pay attention to computethe arithmetic mean for the <italic>f</italic><sub>2</sub>-component since it is correctly reconstructedfor both measurements. First numerical results are depicted in <xref ref-type="fig" rid="fig17">Figure 17</xref>, wherethe vector fields <bold>f</bold>(<italic>x</italic>) = (1, 1, 1)<sup>&#x022a4;</sup> and <bold>f</bold>(<italic>x</italic>) = (1, 1, &#x02212;1)<sup>&#x022a4;</sup> have been reconstructed by means of thedescribed method. In contrast to the previous images the width of the arrowshas been changed to improve the recognizability of the various details.</p><p>It should be added that it is also possible to choosethe second orthogonal circle to lie in the plane {<italic>x</italic><sub>2</sub> = 0} instead of {<italic>x</italic><sub>1</sub> = 0}.This leads to some minor changes in the appearance of the reconstructed imageswhich can be seen from <xref ref-type="fig" rid="fig18">Figure 18</xref>. It seems as if each of the vertical circleshas its advantages in the reconstruction of a certain direction and as such oneor the other may be better suited if some prior knowledge of the vector fieldexists.</p><p>Moreover, we can combine the advantages of bothscanning geometries suited for fully three-dimensional reconstruction weintroduced so far. This can be done by simply using data from all threeorthogonal circles at once. This obviously leads to a certain redundancy in thedata which might nevertheless be useful to improve the quality of ourreconstructions. The yellow circle in <xref ref-type="fig" rid="fig19">Figure 19</xref> is not necessary to obtain acomplete 3D reconstruction of the vector field, it is only meant to supply uswith additional information. Reconstructions of the two vector fields <bold>f</bold>(<italic>x</italic>) = (1, 1, 1)<sup>&#x022a4;</sup> and <bold>f</bold>(<italic>x</italic>) = (1, 1, &#x02212;1)<sup>&#x022a4;</sup> using the three orthogonal circles can befound in <xref ref-type="fig" rid="fig20">Figure 20</xref>. Comparing them with the images made by using only twocircles as scanning curve we can see that especially the direction but also thelength of the arrows is reconstructed much better.</p><p>To verify our assumptions we reconstructed once againthe planar circular vector field <bold>f</bold>(<italic>x</italic>) = (&#x02212;<italic>x</italic><sub>2</sub>, <italic>x</italic><sub>1</sub>, 0)<sup>&#x022a4;</sup>.Comparing the images in <xref ref-type="fig" rid="fig21">Figure 21</xref>, where the width of the arrows was reduced incomparison to the ones from the beginning of the paper, we see that using allthree orthogonal circles is by far better than using only two of them. Unfortunately we have to admit that the three-dimensional reconstruction is notas good as the one obtained by only one circle in the plane {<italic>x</italic><sub>3</sub> = 0}. This can be explained by the fact that the regularization parameter <italic>&#x003b3;</italic> was optimized for the latter scanning geometryand was then used for all further modifications of the measurement setup aswell. Thus, further enhancements of the results are to be expected by choosinga varying regularization parameter for the different circular scanninggeometries. In addition to that we might implement a scaling factor tocompensate for the loss of intensity at the boundary of our reconstructionregion. It might also be possible to incorporate some sort of prior knowledge. For example in clinical applications when measuring blood flow we may use someinformation about the blood vessels to correct the direction of the flow at theboundary.</p><p>It is to mention that in contrast to our initialscanning geometry of only one circle the two as well as the three orthogonalcircles certainly meet the requirements of Tuy-Kirillov's condition [<xref ref-type="bibr" rid="B27">27</xref>, <xref ref-type="bibr" rid="B28">28</xref>], namely that the source curve &#x00393; intersects each plane hitting supp(<italic>f</italic>) transversally, see [<xref ref-type="bibr" rid="B17">17</xref>]. This might be useful forfuture theoretical advances in the field of three-dimensional vector tomographyas well as for improvements and extensions to our algorithm. This is part ofour current research.</p></sec><sec sec-type="section" id="sec4"><title>4. CONCLUSION</title><p>We presented afirst approach for reconstructing cone beam data in three-dimensional vectorfield tomography. The algorithm relies on known results for the scalar casefrom [<xref ref-type="bibr" rid="B12">12</xref>, <xref ref-type="bibr" rid="B26">26</xref>], where the methodof approximate inverse has been applied for the computation of reconstructionkernels for circular 3D cone beam tomography. A possibility to extend that veryefficient regularization technique to VFT has been shown and first numericalexperiments are very promising.</p><p>The investigation of what happens when we use ascanning curve &#x00393; different from what has been presented in thispaper is subject of current research. Nevertheless, it is to mention that theproposed algorithm is not restricted to circles as scanning curves. Helicalscanning geometries are especially interesting in clinical applications becausea helical source trajectory can easily be implemented by moving the patient'sbed through the scanner's gantry at constant speed, a method which is commonpractice in cone beam CT scanning today. Although data acquisition itself ismore difficult, it is much faster and thus better suited for clinicaldiagnostics. The results of Katsevich [<xref ref-type="bibr" rid="B29">29</xref>] could help when we consider a helix as trajectory. Reconsidering the generalizations to tensor fields of arbitrary rank and inarbitrary dimension from which we refrained in the first section of the paper,it is to mention that Denisjuk [<xref ref-type="bibr" rid="B30">30</xref>] formulated a generalization of Tuy-Kirillov'scondition to tensor fields of rank <italic>m</italic> which might help to compute exactreconstruction kernels for <bold>D</bold><sub><italic>m</italic></sub>. Denisjuk also proved in [<xref ref-type="bibr" rid="B30">30</xref>] that a full reconstruction of solenoidal vectorfields is possible if the vectorial cone beam data <bold>D</bold><sub>1</sub><bold>f</bold>(<italic>&#x003b1;</italic>, <italic>&#x003c9;</italic>) are available for all <italic>&#x003b1;</italic> on a trajectory &#x00393; satisfying a generalized Tuy condition and alldirections <italic>&#x003c9;</italic> &#x02208; <italic>S</italic><sup>2</sup>.</p><p>Furthermore, the problem of signal attenuation whichis important for Doppler tomography using ultrasound has been addressed byseveral authors. Unfortunately, so far only works have been published dealingwith the problem in two dimensions. Bukhgeim and Kazantsev derived a 2Dinversion formula in [<xref ref-type="bibr" rid="B31">31</xref>]. Their proof uses a coordinate transformation into complex variables whichcannot be generalized to three dimensions. In [<xref ref-type="bibr" rid="B32">32</xref>], Natterer develops anextension of Novikov's inversion formula for 2D vector fields. Finally,Str&#x000e5;hl&#x000e9;n proves a Fourier slice theorem for the attenuated vectorial Radontransform in two dimensions for the parallel geometry in [<xref ref-type="bibr" rid="B33">33</xref>]. Further advances in thisfield of research will certainly be interesting for 3D cone beam vector fieldtomography as well.</p><p>By now the data acquisition in vector field tomographyneglects the wave structure of the ultrasound signals. Further research mighttake the wave structure into account to improve the reconstruction and modelingaccuracy. In this respect the application of the Rayleigh-Sommerfeld formulacould be useful.</p></sec></body><back><ack><title>ACKNOWLEDGMENT</title><p>This project is being supported by the Deutsche Forschungsgemeinschaft (DFG) under Grant Schu 1978/1-6.</p></ack><ref-list><ref id="B1"><label>1</label><citation citation-type="book"><person-group person-group-type="author"><name><surname>Str&#x000e5;hl&#x000e9;n</surname><given-names>K</given-names></name></person-group><source><italic>Studies of vector tomography</italic></source><year>1999</year><publisher-loc>Lund, Sweden</publisher-loc><publisher-name>Centre for Mathematical Sciences, Lund Institute of Technology, Lund University</publisher-name><comment>Ph.D. thesis.</comment></citation></ref><ref id="B2"><label>2</label><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Denisjuk</surname><given-names>A</given-names></name></person-group><article-title>Integral geometry on the family of semi-spheres</article-title><source><italic>Fractional Calculus and Applied Analysis</italic></source><year>1999</year><volume>2</volume><issue>1</issue><fpage>31</fpage><lpage>46</lpage></citation></ref><ref id="B3"><label>3</label><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Wells</surname><given-names>PNT</given-names></name><name><surname>Halliwell</surname><given-names>M</given-names></name><name><surname>Skidmore</surname><given-names>R</given-names></name><name><surname>Woodcock</surname><given-names>JP</given-names></name><name><surname>Webb</surname><given-names>AJ</given-names></name></person-group><article-title>Tumour detection by ultrasonic Doppler blood-flow signals</article-title><source><italic>Ultrasonics</italic></source><year>1977</year><volume>15</volume><issue>5</issue><fpage>231</fpage><lpage>232</lpage><pub-id pub-id-type="pmid">898386</pub-id></citation></ref><ref id="B4"><label>4</label><citation citation-type="gov"><person-group person-group-type="author"><name><surname>Juhlin</surname><given-names>P</given-names></name></person-group><article-title>Principles of Doppler tomography</article-title><year>1992</year><publisher-loc>Lund, Sweden</publisher-loc><publisher-name>Centre for Mathematical Sciences, Lund Institute of Technology</publisher-name><comment>Tech. Rep. SE-221 00.</comment></citation></ref><ref id="B5"><label>5</label><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Sparr</surname><given-names>G</given-names></name><name><surname>Str&#x000e5;hl&#x000e9;n</surname><given-names>K</given-names></name><name><surname>Lindstr&#x000f6;m</surname><given-names>K</given-names></name><name><surname>Persson</surname><given-names>HW</given-names></name></person-group><article-title>Doppler tomography for vector fields</article-title><source><italic>Inverse Problems</italic></source><year>1995</year><volume>11</volume><issue>5</issue><fpage>1051</fpage><lpage>1061</lpage></citation></ref><ref id="B6"><label>6</label><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Kazantsev</surname><given-names>SG</given-names></name><name><surname>Bukhgeim</surname><given-names>AA</given-names></name></person-group><article-title>Singular value decomposition for the 2D fan-beam Radon transform of tensor fields</article-title><source><italic>Journal of Inverse and Ill-Posed Problems</italic></source><year>2004</year><volume>12</volume><issue>3</issue><fpage>245</fpage><lpage>278</lpage></citation></ref><ref id="B7"><label>7</label><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Desbat</surname><given-names>L</given-names></name><name><surname>Wernsd&#x000f6;rfer</surname><given-names>A</given-names></name></person-group><article-title>Direct algebraic reconstruction and optimal sampling in vector field tomography</article-title><source><italic>IEEE Transactions on Signal Processing</italic></source><year>1995</year><volume>43</volume><issue>8</issue><fpage>1798</fpage><lpage>1808</lpage></citation></ref><ref id="B8"><label>8</label><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Schuster</surname><given-names>T</given-names></name></person-group><article-title>The 3D Doppler transform: elementary properties and computation of reconstruction kernels</article-title><source><italic>Inverse Problems</italic></source><year>2000</year><volume>16</volume><issue>3</issue><fpage>701</fpage><lpage>722</lpage></citation></ref><ref id="B9"><label>9</label><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Schuster</surname><given-names>T</given-names></name></person-group><article-title>An efficient mollifier method for three-dimensional vector tomography: convergence analysis and implementation</article-title><source><italic>Inverse Problems</italic></source><year>2001</year><volume>17</volume><issue>4</issue><fpage>739</fpage><lpage>766</lpage></citation></ref><ref id="B10"><label>10</label><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Rieder</surname><given-names>A</given-names></name><name><surname>Schuster</surname><given-names>T</given-names></name></person-group><article-title>The approximate inverse in action III: 3D-Doppler tomography</article-title><source><italic>Numerische Mathematik</italic></source><year>2004</year><volume>97</volume><issue>2</issue><fpage>353</fpage><lpage>378</lpage></citation></ref><ref id="B11"><label>11</label><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Louis</surname><given-names>AK</given-names></name><name><surname>Maass</surname><given-names>P</given-names></name></person-group><article-title>A mollifier method for linear operator equations of the first kind</article-title><source><italic>Inverse Problems</italic></source><year>1990</year><volume>6</volume><issue>3</issue><fpage>427</fpage><lpage>440</lpage></citation></ref><ref id="B12"><label>12</label><citation citation-type="book"><person-group person-group-type="author"><name><surname>Louis</surname><given-names>AK</given-names></name></person-group><person-group person-group-type="editor"><name><surname>&#x000d3;lafsson</surname><given-names>G</given-names></name><name><surname>Quinto</surname><given-names>ET</given-names></name></person-group><article-title>Development of algorithms in computerized tomography</article-title><source><italic>The Radon Transform, Inverse Problems, and Tomography</italic></source><year>2006</year><volume>63</volume><publisher-loc>Boston, Mass, USA</publisher-loc><publisher-name>American Mathematical Society</publisher-name><fpage>25</fpage><lpage>42</lpage><series>Proceedings of Symposia in Applied Mathematics</series></citation></ref><ref id="B13"><label>13</label><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Schuster</surname><given-names>T</given-names></name></person-group><article-title>The formula of grangeat for tensor fields of arbitrary order in <italic>n</italic> dimensions</article-title><source><italic>International Journal of Biomedical Imaging</italic></source><year>2007</year><volume>2007</volume><fpage>4 pages</fpage><comment>Article ID 12839.</comment></citation></ref><ref id="B14"><label>14</label><citation citation-type="book"><person-group person-group-type="author"><name><surname>Grangeat</surname><given-names>P</given-names></name></person-group><person-group person-group-type="editor"><name><surname>Herman</surname><given-names>GT</given-names></name><name><surname>Louis</surname><given-names>AK</given-names></name><name><surname>Natterer</surname><given-names>F</given-names></name></person-group><article-title>Mathematical framework of cone-beam reconstruction via the first derivative of the Radon transform</article-title><source><italic>Mathematical Methods in Tomography</italic></source><year>1991</year><volume>1497</volume><publisher-loc>New York, NY, USA</publisher-loc><publisher-name>Springer</publisher-name><fpage>66</fpage><lpage>97</lpage><series>Lecture Notes in Mathematics</series></citation></ref><ref id="B15"><label>15</label><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Hamaker</surname><given-names>C</given-names></name><name><surname>Smith</surname><given-names>KT</given-names></name><name><surname>Solmon</surname><given-names>DC</given-names></name><name><surname>Wagner</surname><given-names>SL</given-names></name></person-group><article-title>The divergent beam X-ray transform</article-title><source><italic>The Rocky Mountain Journal of Mathematics</italic></source><year>1980</year><volume>10</volume><issue>1</issue><fpage>252</fpage><lpage>283</lpage></citation></ref><ref id="B16"><label>16</label><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Feldkamp</surname><given-names>LA</given-names></name><name><surname>Davis</surname><given-names>LC</given-names></name><name><surname>Kress</surname><given-names>JW</given-names></name></person-group><article-title>Practical cone-beam algorithm</article-title><source><italic>Journal of the Optical Society of America A</italic></source><year>1984</year><volume>1</volume><issue>6</issue><fpage>612</fpage><lpage>619</lpage></citation></ref><ref id="B17"><label>17</label><citation citation-type="book"><person-group person-group-type="author"><name><surname>Natterer</surname><given-names>F</given-names></name><name><surname>W&#x000fc;bbeling</surname><given-names>F</given-names></name></person-group><source><italic>Mathematical Methods in Image Reconstruction</italic></source><year>2001</year><publisher-loc>Philadelphia, Pa, USA</publisher-loc><publisher-name>SIAM</publisher-name></citation></ref><ref id="B18"><label>18</label><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Norton</surname><given-names>SJ</given-names></name></person-group><article-title>Tomographic reconstruction of 2-D vector fields: application to flow imaging</article-title><source><italic>Geophysical Journal International</italic></source><year>1989</year><volume>97</volume><issue>1</issue><fpage>161</fpage><lpage>168</lpage></citation></ref><ref id="B19"><label>19</label><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Norton</surname><given-names>SJ</given-names></name></person-group><article-title>Unique tomographic reconstruction of vector fields using boundary data</article-title><source><italic>IEEE Transactions on Image Processing</italic></source><year>1992</year><volume>1</volume><issue>3</issue><fpage>406</fpage><lpage>412</lpage><pub-id pub-id-type="pmid">18296172</pub-id></citation></ref><ref id="B20"><label>20</label><citation citation-type="confproc"><person-group person-group-type="author"><name><surname>Prince</surname><given-names>JL</given-names></name></person-group><article-title>A convolution backprojection formula for three-dimensional vector tomography</article-title><conf-name>In: Proceedings of IEEE International Conference on Image Processing (ICIP '94), vol. 2</conf-name><conf-date>November 1994</conf-date><conf-loc>Austin, Tex, USA</conf-loc><fpage>820</fpage><lpage>824</lpage></citation></ref><ref id="B21"><label>21</label><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Lade</surname><given-names>SJ</given-names></name><name><surname>Paganin</surname><given-names>D</given-names></name><name><surname>Morgan</surname><given-names>MJ</given-names></name></person-group><article-title>3-D Vector tomography of Doppler-transformed fields by filtered- backprojection</article-title><source><italic>Optics Communications</italic></source><year>2005</year><volume>253</volume><issue>4&#x02013;6</issue><fpage>382</fpage><lpage>391</lpage></citation></ref><ref id="B22"><label>22</label><citation citation-type="book"><person-group person-group-type="author"><name><surname>Louis</surname><given-names>AK</given-names></name></person-group><person-group person-group-type="editor"><name><surname>Engl</surname><given-names>HW</given-names></name><name><surname>Louis</surname><given-names>AK</given-names></name><name><surname>Rundell</surname><given-names>W</given-names></name></person-group><article-title>Application of the approximate inverse to 3D X-ray CT and ultrasound tomography</article-title><source><italic>Inverse Problems in Medical Imaging and Nondestructive Testing</italic></source><year>1997</year><publisher-loc>New York, NY, USA</publisher-loc><publisher-name>Springer</publisher-name><fpage>120</fpage><lpage>133</lpage></citation></ref><ref id="B23"><label>23</label><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Louis</surname><given-names>AK</given-names></name></person-group><article-title>Filter design in three-dimensional cone beam tomography: circular scanning geometry</article-title><source><italic>Inverse Problems</italic></source><year>2003</year><volume>19</volume><issue>6</issue><fpage>S31</fpage><lpage>S40</lpage></citation></ref><ref id="B24"><label>24</label><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Louis</surname><given-names>AK</given-names></name></person-group><article-title>Approximate inverse for linear and some nonlinear problems</article-title><source><italic>Inverse Problems</italic></source><year>1996</year><volume>12</volume><issue>2</issue><fpage>175</fpage><lpage>190</lpage></citation></ref><ref id="B25"><label>25</label><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Louis</surname><given-names>AK</given-names></name></person-group><article-title>A unified approach to regularization methods for linear ill-posed problems</article-title><source><italic>Inverse Problems</italic></source><year>1999</year><volume>15</volume><issue>2</issue><fpage>489</fpage><lpage>498</lpage></citation></ref><ref id="B26"><label>26</label><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Louis</surname><given-names>AK</given-names></name><name><surname>Weber</surname><given-names>T</given-names></name><name><surname>Theis</surname><given-names>D</given-names></name></person-group><article-title>Computing reconstruction kernels for circular 3D cone beam tomography</article-title><source><italic>IEEE Transactions on Medical Imaging</italic></source><year>2008</year><volume>27</volume><issue>7</issue><fpage>880</fpage><lpage>886</lpage><pub-id pub-id-type="pmid">18599393</pub-id></citation></ref><ref id="B27"><label>27</label><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Kirillov</surname><given-names>AA</given-names></name></person-group><article-title>On a problem of I. M. Gel'fand</article-title><source><italic>Soviet Mathematics Doklady</italic></source><year>1961</year><volume>2</volume><fpage>268</fpage><lpage>269</lpage></citation></ref><ref id="B28"><label>28</label><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Tuy</surname><given-names>HK</given-names></name></person-group><article-title>An inversion formula for cone-beam reconstruction</article-title><source><italic>SIAM Journal on Applied Mathematics</italic></source><year>1983</year><volume>43</volume><issue>3</issue><fpage>546</fpage><lpage>552</lpage></citation></ref><ref id="B29"><label>29</label><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Katsevich</surname><given-names>A</given-names></name></person-group><article-title>A general scheme for constructing inversion algorithms for cone beam CT</article-title><source><italic>International Journal of Mathematics and Mathematical Sciences</italic></source><year>2003</year><volume>2003</volume><issue>21</issue><fpage>1305</fpage><lpage>1321</lpage></citation></ref><ref id="B30"><label>30</label><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Denisjuk</surname><given-names>A</given-names></name></person-group><article-title>Inversion of the X-ray transform for 3D symmetric tensor fields with sources on a curve</article-title><source><italic>Inverse Problems</italic></source><year>2006</year><volume>22</volume><issue>2</issue><fpage>399</fpage><lpage>411</lpage></citation></ref><ref id="B31"><label>31</label><citation citation-type="other"><person-group person-group-type="author"><name><surname>Bukhgeim</surname><given-names>AA</given-names></name><name><surname>Kazantsev</surname><given-names>SG</given-names></name></person-group><article-title>Inversion formula for the fan-beam attenuated Radon transform in a unit disk</article-title><comment>preprint no. 99, Russian Academy of Science Siberian Branch: The Sobolev Institute ofMathematics, 2002</comment></citation></ref><ref id="B32"><label>32</label><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Natterer</surname><given-names>F</given-names></name></person-group><article-title>Inverting the attenuated vectorial Radon transform</article-title><source><italic>Journal of Inverse and Ill-Posed Problems</italic></source><year>2005</year><volume>13</volume><issue>1</issue><fpage>93</fpage><lpage>101</lpage></citation></ref><ref id="B33"><label>33</label><citation citation-type="book"><person-group person-group-type="author"><name><surname>Str&#x000e5;hl&#x000e9;n</surname><given-names>K</given-names></name></person-group><source><italic>Some integral transforms of vector fields</italic></source><year>1996</year><publisher-loc>Lund, Sweden</publisher-loc><publisher-name>Department of Mathematics, Lund Institute of Technology, Lund University</publisher-name><comment>Licentiate thesis.</comment></citation></ref></ref-list></back><floats-wrap><fig id="fig1" position="float"><label>Figure 1</label><caption><p>Measurement setup using a circle in the plane {<italic>x</italic><sub>3</sub> = 0} as scanningcurve &#x00393;.</p></caption><graphic xlink:href="IJBI2008-174283.001"/></fig><fig id="fig2" position="float"><label>Figure 2</label><caption><p>Visualization of the measured projection data for <bold>D</bold><sub>1</sub><bold>f</bold>.</p></caption><graphic xlink:href="IJBI2008-174283.002"/></fig><fig id="fig3" position="float"><label>Figure 3</label><caption><p>(a) Original vector field <bold>f</bold>(<italic>x</italic>) = (&#x02212;<italic>x</italic><sub>2</sub>, <italic>x</italic><sub>1</sub>, 0)<sup>&#x022a4;</sup>. (b) Reconstruction with the describedalgorithm for <italic>&#x003b3;</italic> = 0.00692 using exact, simulated data <bold>D</bold><sub>1</sub><bold>f</bold>.</p></caption><graphic xlink:href="IJBI2008-174283.003"/></fig><fig id="fig4" position="float"><label>Figure 4</label><caption><p>(a) Original vector field <bold>f</bold>(<italic>x</italic>) = (1 &#x02212; <italic>x</italic><sub>2</sub><sup>2</sup> &#x02212; <italic>x</italic><sub>3</sub><sup>2</sup>, 0, 0)<sup>&#x022a4;</sup>. (b) Reconstruction with the describedalgorithm for <italic>&#x003b3;</italic> = 0.007 using exact, simulated data <bold>D</bold><sub>1</sub><bold>f</bold>.</p></caption><graphic xlink:href="IJBI2008-174283.004"/></fig><fig id="fig5" position="float"><label>Figure 5</label><caption><p>Reconstruction kernel <italic>v</italic><sub><italic>&#x003b3;</italic></sub>(0; <italic>&#x003b1;</italic>, <italic>&#x003c9;</italic>) for <italic>&#x003b3;</italic> = 0.007 associated to the scalar cone beam transform <bold>D</bold><sub>0</sub> according to [<xref ref-type="bibr" rid="B12">12</xref>].</p></caption><graphic xlink:href="IJBI2008-174283.005"/></fig><fig id="fig6" position="float"><label>Figure 6</label><caption><p>Reconstruction of the vector field <bold>f</bold>(<italic>x</italic>) = (&#x02212;<italic>x</italic><sub>2</sub>, <italic>x</italic><sub>1</sub>, 0)<sup>&#x022a4;</sup> with the described algorithm for <italic>&#x003b3;</italic> = 0.00692 using exact, simulated data <bold>D</bold><sub>1</sub><bold>f</bold>. (a),(b) The planes {<italic>x</italic><sub>3</sub> = 0.5} and {<italic>x</italic><sub>3</sub> = 0.75}. (c),(d) The planes {<italic>x</italic><sub>3</sub> = 0.9} and {<italic>x</italic><sub>3</sub> = 0.95}.</p></caption><graphic xlink:href="IJBI2008-174283.006"/></fig><fig id="fig7" position="float"><label>Figure 7</label><caption><p>Reconstruction of the vector field <bold>f</bold>(<italic>x</italic>) = (1 &#x02212; <italic>x</italic><sub>2</sub><sup>2</sup> &#x02212; <italic>x</italic><sub>3</sub><sup>2</sup>, 0, 0)<sup>&#x022a4;</sup> with the described algorithm for <italic>&#x003b3;</italic> = 0.007 using exact, simulated data <bold>D</bold><sub>1</sub><bold>f</bold>. (a),(b) The planes {<italic>x</italic><sub>3</sub> = 0.5} and {<italic>x</italic><sub>3</sub> = 0.75}. (c),(d) The planes {<italic>x</italic><sub>3</sub> = 0.9} and {<italic>x</italic><sub>3</sub> = 0.95}.</p></caption><graphic xlink:href="IJBI2008-174283.007"/></fig><fig id="fig8" position="float"><label>Figure 8</label><caption><p>(a) Original vector field <bold>f</bold>(<italic>x</italic>) = (1, 0, 0)<sup>&#x022a4;</sup>. (b) Reconstruction with the describedalgorithm for <italic>&#x003b3;</italic> = 0.0075 using exact, simulated data <bold>D</bold><sub>1</sub><bold>f</bold>.</p></caption><graphic xlink:href="IJBI2008-174283.008"/></fig><fig id="fig9" position="float"><label>Figure 9</label><caption><p>Reconstruction of the vector field <bold>f</bold>(<italic>x</italic>) = (1, 0, 0)<sup>&#x022a4;</sup> with the described algorithm for <italic>&#x003b3;</italic> = 0.0075 using exact, simulated data <bold>D</bold><sub>1</sub><bold>f</bold>. (a),(b) The planes {<italic>x</italic><sub>3</sub> = 0.5} and {<italic>x</italic><sub>3</sub> = 0.75}. (c),(d) The planes {<italic>x</italic><sub>3</sub> = 0.9} and {<italic>x</italic><sub>3</sub> = 0.95}.</p></caption><graphic xlink:href="IJBI2008-174283.009"/></fig><fig id="fig10" position="float"><label>Figure 10</label><caption><p>Reconstruction of the vector field <bold>f</bold>(<italic>x</italic>) = (&#x02212;<italic>x</italic><sub>2</sub>, <italic>x</italic><sub>1</sub>, 0)<sup>&#x022a4;</sup> with the described algorithm for <italic>&#x003b3;</italic> = 0.00692 in the plane {<italic>x</italic><sub>1</sub> = 0}.</p></caption><graphic xlink:href="IJBI2008-174283.010"/></fig><fig id="fig11" position="float"><label>Figure 11</label><caption><p>Reconstruction of the vector field <bold>f</bold>(<italic>x</italic>) = (1 &#x02212; <italic>x</italic><sub>2</sub><sup>2</sup> &#x02212; <italic>x</italic><sub>3</sub><sup>2</sup>, 0, 0)<sup>&#x022a4;</sup> with the described algorithm for <italic>&#x003b3;</italic> = 0.007 in the plane {<italic>x</italic><sub>1</sub> = 0}.</p></caption><graphic xlink:href="IJBI2008-174283.011"/></fig><fig id="fig12" position="float"><label>Figure 12</label><caption><p>Reconstruction of the vector field <bold>f</bold>(<italic>x</italic>) = (1, 0, 0)<sup>&#x022a4;</sup> with the described algorithm for <italic>&#x003b3;</italic> = 0.0075 in the plane {<italic>x</italic><sub>1</sub> = 0}.</p></caption><graphic xlink:href="IJBI2008-174283.012"/></fig><fig id="fig13" position="float"><label>Figure 13</label><caption><p>Clarifying the calculation of the maximal value for <italic>&#x003c9;</italic><sub>3</sub>.</p></caption><graphic xlink:href="IJBI2008-174283.013"/></fig><fig id="fig14" position="float"><label>Figure 14</label><caption><p>(a),(b) Reconstruction of the vector field <bold>f</bold>(<italic>x</italic>) = (1, 1, 1)<sup>&#x022a4;</sup> with the described algorithm for  <italic>&#x003b3;</italic> = 0.007 in the plane {<italic>x</italic><sub>3</sub> = 0}. (c),(d) Reconstruction of the vector field  <bold>f</bold>(<italic>x</italic>) = (1, 1, &#x02212;1)<sup>&#x022a4;</sup> with the described algorithm for  <italic>&#x003b3;</italic> = 0.007 in the plane {<italic>x</italic><sub>3</sub> = 0}.</p></caption><graphic xlink:href="IJBI2008-174283.014"/></fig><fig id="fig15" position="float"><label>Figure 15</label><caption><p>Top: reconstruction of the vector field <italic>f</italic>(<italic>x</italic>) = (1, 1, 1)<sup>&#x022a4;</sup> with the described algorithm                               for <italic>&#x003b3;</italic> = 0.007 in the planes (a) {<italic>x</italic><sub>3</sub> = 0.75}  and (b) {<italic>x</italic><sub>3</sub> = 0.95}. Bottom: reconstruction of the vector field <italic>f</italic>(<italic>x</italic>) = (1, 1, &#x02212;1)<sup>&#x022a4;</sup>  with the described algorithm for <italic>&#x003b3;</italic> = 0.007                               in the planes (c) {<italic>x</italic><sub>3</sub> = 0.75} and (d) {<italic>x</italic><sub>3</sub> = 0.95}.</p></caption><graphic xlink:href="IJBI2008-174283.015"/></fig><fig id="fig16" position="float"><label>Figure 16</label><caption><p>Measurement setup using two orthogonal circles as scanning curve&#x00393;,  one in the plane {<italic>x</italic><sub>3</sub> = 0} as usual, and one in the plane {<italic>x</italic><sub>1</sub> = 0}.</p></caption><graphic xlink:href="IJBI2008-174283.016"/></fig><fig id="fig17" position="float"><label>Figure 17</label><caption><p>(a) Reconstruction of the vector field <bold>f</bold>(<italic>x</italic>) = (1, 1, 1)<sup>&#x022a4;</sup> with the described algorithm for <italic>&#x003b3;</italic> = 0.007 with circles in the planes {<italic>x</italic><sub>3</sub> = 0} and {<italic>x</italic><sub>1</sub> = 0}. (b) Reconstruction of the vector field <bold>f</bold>(<italic>x</italic>) = (1, 1, &#x02212;1)<sup>&#x022a4;</sup> with the described algorithm for <italic>&#x003b3;</italic> = 0.007 with circles in the planes {<italic>x</italic><sub>3</sub> = 0} and {<italic>x</italic><sub>1</sub> = 0}.</p></caption><graphic xlink:href="IJBI2008-174283.017"/></fig><fig id="fig18" position="float"><label>Figure 18</label><caption><p>(a) Reconstruction of thevector field <bold>f</bold>(<italic>x</italic>) = (1, 1, 1)<sup>&#x022a4;</sup> with the described algorithm for <italic>&#x003b3;</italic> = 0.007 with circles in the planes {<italic>x</italic><sub>3</sub> = 0} and {<italic>x</italic><sub>2</sub> = 0}. (b) Reconstruction of the vector field <bold>f</bold>(<italic>x</italic>) = (1, 1, &#x02212;1)<sup>&#x022a4;</sup> with the described algorithm for <italic>&#x003b3;</italic> = 0.007 with circles in the planes {<italic>x</italic><sub>3</sub> = 0} and {<italic>x</italic><sub>2</sub> = 0}.</p></caption><graphic xlink:href="IJBI2008-174283.018"/></fig><fig id="fig19" position="float"><label>Figure 19</label><caption><p>Measurement setup using all three orthogonal circles as scanningcurve &#x00393;,  one in each plane {<italic>x</italic><sub><italic>i</italic></sub> = 0}, <italic>i</italic> = 1, 2, 3.</p></caption><graphic xlink:href="IJBI2008-174283.019"/></fig><fig id="fig20" position="float"><label>Figure 20</label><caption><p>(a) Reconstruction of the vector field <bold>f</bold>(<italic>x</italic>) = (1, 1, 1)<sup>&#x022a4;</sup> with the described algorithm for <italic>&#x003b3;</italic> = 0.007 using three orthogonal circles in the planes {<italic>x</italic><sub><italic>i</italic></sub> = 0}, <italic>i</italic> = 1, 2, 3. (b) Reconstruction of the vector field <bold>f</bold>(<italic>x</italic>) = (1, 1, &#x02212;1)<sup>&#x022a4;</sup> with the described algorithm for <italic>&#x003b3;</italic> = 0.007 using three orthogonal circles in the planes {<italic>x</italic><sub><italic>i</italic></sub> = 0}, <italic>i</italic> = 1, 2, 3.</p></caption><graphic xlink:href="IJBI2008-174283.020"/></fig><fig id="fig21" position="float"><label>Figure 21</label><caption><p>(a) Original vector field <bold>f</bold>(<italic>x</italic>) = (&#x02212;<italic>x</italic><sub>2</sub>, <italic>x</italic><sub>1</sub>, 0)<sup>&#x022a4;</sup>. (b) Reconstruction with the describedalgorithm for <italic>&#x003b3;</italic> = 0.00692 using one single circle in the plane {<italic>x</italic><sub>3</sub> = 0}. (c) Reconstruction with the described algorithm for <italic>&#x003b3;</italic> = 0.00692 using circles in the planes {<italic>x</italic><sub>3</sub> = 0} and {<italic>x</italic><sub>1</sub> = 0}. (d) Reconstruction with the describedalgorithm for <italic>&#x003b3;</italic> = 0.00692 using circles in the planes {<italic>x</italic><sub>3</sub> = 0} and {<italic>x</italic><sub>2</sub> = 0}. (e) Reconstruction with the describedalgorithm for <italic>&#x003b3;</italic> = 0.00692 using three orthogonal circles in the planes {<italic>x</italic><sub><italic>i</italic></sub> = 0}, <italic>i</italic> = 1, 2, 3.</p></caption><graphic xlink:href="IJBI2008-174283.021"/></fig><fig id="alg1" position="float"><label>Algorithm 1</label><caption><p>For cone beam VFT.</p></caption><graphic xlink:href="IJBI2008-174283.alg1"/></fig></floats-wrap></article>