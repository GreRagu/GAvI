<!DOCTYPE article PUBLIC "-//NLM//DTD Journal Archiving and Interchange DTD v2.3 20070202//EN" "archivearticle.dtd"><article xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:mml="http://www.w3.org/1998/Math/MathML" article-type="research-article" xml:lang="EN"><?properties open_access?><front><journal-meta><journal-id journal-id-type="nlm-ta">Front Neuroinformatics</journal-id><journal-id journal-id-type="publisher-id">Front. Neuroinform.</journal-id><journal-title>Frontiers in Neuroinformatics</journal-title><issn pub-type="epub">1662-5196</issn><publisher><publisher-name>Frontiers Research Foundation</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="pmid">19198662</article-id><article-id pub-id-type="pmc">2636687</article-id><article-id pub-id-type="doi">10.3389/neuro.11.002.2009</article-id><article-categories><subj-group subj-group-type="heading"><subject>Neuroscience</subject><subj-group><subject>Original Research</subject></subj-group></subj-group></article-categories><title-group><article-title>Distributed XQuery-Based Integration and Visualization of Multimodality Brain Mapping Data</article-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Detwiler</surname><given-names>Landon T.</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author"><name><surname>Suciu</surname><given-names>Dan</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib><contrib contrib-type="author"><name><surname>Franklin</surname><given-names>Joshua D.</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author"><name><surname>Moore</surname><given-names>Eider B.</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author"><name><surname>Poliakov</surname><given-names>Andrew V.</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author"><name><surname>Lee</surname><given-names>Eunjung S.</given-names></name><xref ref-type="aff" rid="aff3"><sup>3</sup></xref></contrib><contrib contrib-type="author"><name><surname>Corina</surname><given-names>David P.</given-names></name><xref ref-type="aff" rid="aff4"><sup>4</sup></xref></contrib><contrib contrib-type="author"><name><surname>Ojemann</surname><given-names>George A.</given-names></name><xref ref-type="aff" rid="aff5"><sup>5</sup></xref></contrib><contrib contrib-type="author"><name><surname>Brinkley</surname><given-names>James F.</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff3"><sup>3</sup></xref><xref ref-type="author-notes" rid="fn001">*</xref></contrib></contrib-group><aff id="aff1"><sup>1</sup><institution>Department of Biological Structure, University of Washington</institution><country>Seattle, WA, USA</country></aff><aff id="aff2"><sup>2</sup><institution>Department of Computer Science and Engineering, University of Washington</institution><country>Seattle, WA, USA</country></aff><aff id="aff3"><sup>3</sup><institution>Department of Medical Education and Biomedical Informatics, University of Washington</institution><country>Seattle, WA, USA</country></aff><aff id="aff4"><sup>4</sup><institution>Department of Linguistics, University of California at Davis</institution><country>Davis, CA, USA</country></aff><aff id="aff5"><sup>5</sup><institution>Department of Neurological Surgery, University of Washington</institution><country>Seattle, WA, USA</country></aff><author-notes><fn fn-type="edited-by"><p>Edited by: Maryann E. Martone, University of California, San Diego, USA</p></fn><fn fn-type="edited-by"><p>Reviewed by: Jeffrey S. Grethe, University of California, San Diego, USA; Gwen Jacobs, Montana State University, USA; Jonathan Nissanov, Drexel University College of Medicine, USA</p></fn><corresp id="fn001">*Correspondence: James F. Brinkley, Department of Biological Structure, University of Washington, Box No. 357420, Seattle, WA 98195, USA. e-mail: <email>brinkley@u.washington.edu</email></corresp></author-notes><pub-date pub-type="epreprint"><day>10</day><month>12</month><year>2008</year></pub-date><pub-date pub-type="epub"><day>30</day><month>1</month><year>2009</year></pub-date><pub-date pub-type="collection"><year>2009</year></pub-date><volume>3</volume><elocation-id>2</elocation-id><history><date date-type="received"><day>30</day><month>10</month><year>2008</year></date><date date-type="accepted"><day>10</day><month>1</month><year>2009</year></date></history><permissions><copyright-statement>Copyright &#x000a9; 2009 Detwiler, Suciu, Franklin, Moore, Poliakov, Lee, Corina, Ojemann and Brinkley.</copyright-statement><copyright-year>2009</copyright-year><license license-type="open-access" xlink:href="http://www.frontiersin.org/licenseagreement"><p>This is an open-access article subject to an exclusive license agreement between the authors and the Frontiers Research Foundation, which permits unrestricted use, distribution, and reproduction in any medium, provided the original authors and source are credited.</p></license></permissions><abstract><p>This paper addresses the need for relatively small groups of collaborating investigators to integrate distributed and heterogeneous data about the brain. Although various national efforts facilitate large-scale data sharing, these approaches are generally too &#x0201c;heavyweight&#x0201d; for individual or small groups of investigators, with the result that most data sharing among collaborators continues to be <italic>ad hoc</italic>. Our approach to this problem is to create a &#x0201c;lightweight&#x0201d; distributed query architecture, in which data sources are accessible via web services that accept arbitrary query languages but return XML results. A Distributed XQuery Processor (DXQP) accepts distributed XQueries in which subqueries are shipped to the remote data sources to be executed, with the resulting XML integrated by DXQP. A web-based application called DXBrain accesses DXQP, allowing a user to create, save and execute distributed XQueries, and to view the results in various formats including a 3-D brain visualization. Example results are presented using distributed brain mapping data sources obtained in studies of language organization in the brain, but any other XML source could be included. The advantage of this approach is that it is very easy to add and query a new source, the tradeoff being that the user needs to understand XQuery and the schemata of the underlying sources. For small numbers of known sources this burden is not onerous for a knowledgeable user, leading to the conclusion that the system helps to fill the gap between <italic>ad hoc</italic> local methods and large scale but complex national data sharing efforts.</p></abstract><kwd-group><kwd>data integration</kwd><kwd>distributed query processing</kwd><kwd>XQuery</kwd><kwd>query shipping</kwd><kwd>brain mapping</kwd><kwd>neuroinformatics</kwd><kwd>semantic web</kwd><kwd>brain visualization</kwd></kwd-group><counts><fig-count count="8"/><table-count count="0"/><equation-count count="0"/><ref-count count="42"/><page-count count="13"/><word-count count="8584"/></counts></article-meta></front><body><sec sec-type="introduction"><title>Introduction</title><p>Ongoing improvements in the quality and quantity of available techniques have provided neuroscience researchers with multiple means of observing regions of brain activation in subjects performing behavioral tasks. This proliferation of data gathering techniques has lead to large volumes of data available regarding brain function. Because these data are often distributed, highly heterogeneous and sometimes contradictory, it has also emphasized the need for data organization and integration in order to develop theories about brain function.</p><p>Initially under the auspices of the Human Brain Project (HBP) (Koslow and Hyman, <xref ref-type="bibr" rid="B16">2000</xref>), and more recently under other neuroinformatics efforts, there have been many efforts to integrate and share brain mapping information. Many of these efforts have resulted in centralized databases accessible through portals such as the neuroscience gateway (Society for Neuroscience, <xref ref-type="bibr" rid="B32">2008</xref>). Examples of these centralized databases include SenseLab (Miller et al., <xref ref-type="bibr" rid="B20">2001</xref>), SUMS (Van Essen, <xref ref-type="bibr" rid="B37">2008</xref>) LONI (Laboratory of Neuro Imaging, <xref ref-type="bibr" rid="B17">2008</xref>), the fMRI Data Center (Gazzaniga, <xref ref-type="bibr" rid="B11">2008</xref>), and the Cell Centered Database (Martone et al., <xref ref-type="bibr" rid="B19">2003</xref>). The utility of these sites is directly related to the willingness of investigators to take the time to deposit their data since in most cases there is no requirement that data be submitted as a condition of publication (Nature Neuroscience, <xref ref-type="bibr" rid="B23">2000</xref>).</p><p>Recognizing that not all investigators will want to or even be able to submit their data to a central site, projects like BIRN (Keator et al., <xref ref-type="bibr" rid="B15">2008</xref>) and caBIG (Oster et al., <xref ref-type="bibr" rid="B25">2008</xref>) have established large scale grid based approaches to data sharing, in which members of the consortium maintain their data at their local sites and make them available to a federated data integration system. The BIRN project is especially relevant because its primary focus is neuroscience.</p><p>Although BIRN and caBIG facilitate large-scale data integration and sharing on a national level, a significant effort is involved in integrating local lab data into these networks. Thus, these networks may not be well suited to a small group of collaborating labs who initially only wish to share and integrate data among themselves.</p><p>At the current time most data sharing among small groups of labs is done by email or similar <italic>ad hoc</italic> methods. Thus, there is a need for tools to facilitate small-scale integration and sharing of data. However, to be practical such tools need to be &#x0201c;lightweight&#x0201d;, not requiring great effort to setup; they must be easy to use by non-programmers, they must allow for semantic interoperability, and they must be scalable both as new data sources are added, and as the sources become included in larger efforts such as BIRN.</p><p>To approach this problem we are developing a lightweight distributed query-based architecture, in which any web-service encapsulated data source may be included as long as it accepts incoming queries and returns XML results. Adding such a source is as simple as including it as a subquery in a distributed XQuery (the W3C recommended query language for XML) that is processed by a modified XQuery processor we have developed. The advantage of this approach is that it is very easy to add a new source, although the tradeoff is that a developer (not necessarily end-user) must know XQuery and the schemata of the sources.</p><p>The key informatics novelty in our approach is that it is XML-based rather than the more traditional SQL-based approach to distributed query systems. Although many such distributed query systems have been developed for relational databases (Ozsu and Valduriez, <xref ref-type="bibr" rid="B26">1999</xref>), less is known about effective and efficient methods of querying networks of semi-structured data like XML, particularly for large datasets. In fact, other than our own previous work in distributed XML databases (Bales et al., <xref ref-type="bibr" rid="B2">2005</xref>; Re et al., <xref ref-type="bibr" rid="B29">2004</xref>) we are aware of only one other effort in this area (Fernandez et al., <xref ref-type="bibr" rid="B9">2007</xref>).</p><p>In the remainder of this paper we describe our lightweight distributed XML-based data integration system, which we call DXBrain. Beginning with a driving neuroscience use case we discuss the overall architecture of the system, the individual data sources, the web service wrappers which process source queries and deliver XML results, the distributed XQuery engine, and the web user application and results visualization. We also illustrate example uses of the system. We conclude by discussing the tradeoffs in this approach versus more heavyweight approaches, the generality and scalability of this approach for other biomedical data sources, and the work that remains to be done in order to make this approach more easily usable by non-programmers. We also point to two downloadable Java libraries that could be useful to others wishing to deploy their own distributed query system.</p></sec><sec sec-type="materials|methods"><title>Materials and Methods</title><p>The development of DXBrain has been driven by the need to understand language organization in the brain. Under the auspices of the Human Brain Project, the University of Washington (UW) Structural Informatics Group (SIG) has constructed data management, visualization, and analysis systems to aid neuroscience researchers in the study and mapping of language centers in the human brain (Brinkley, <xref ref-type="bibr" rid="B3">2008</xref>; Brinkley et al., <xref ref-type="bibr" rid="B5">1997</xref>).</p><p>The language mapping data sources differ in modality (e.g. textual transcriptions of patient responses, 2D operative photographs, 3D MRI volumes), data model (e.g. textual data might be tabular in nature, such as CSV or relational, or it could be hierarchical like XML), data format (e.g. tab delimited vs. comma separated data), and data storage (e.g. flat files vs. relational database systems). Although the data are highly heterogeneous, the sources also share unifying information. In particular many sources contain information about the same set of subjects, often performing the same sets of language tasks (i.e. fMRI images of patients performing a set of object naming tasks vs. textual transcriptions of their responses to the same set of tasks performed while undergoing neurosurgery). These common information elements provide the basis for integration.</p><sec><title>Architecture</title><p>The overall architecture of the DXBrain system consists of the following four layers, reading from the bottom up in Figure <xref ref-type="fig" rid="F1">1</xref>:</p><fig id="F1" position="float"><label>Figure 1</label><caption><p><bold>System architecture</bold>.</p></caption><graphic xlink:href="fninf-03-002-g001"/></fig><p>Source data: Data sources are separately maintained at distributed locations on the network. The data models and/or formats of these sources are limited, conceptually, only by the source wrappers at the next level of our architecture. In our current system, we have two types of sources: XML files and application interfaces.</p><p>Source wrappers: Data sources are made available for query by means of source wrappers. All wrappers present a query method, accepting source-specific sub-queries, and returning XML results. These wrappers are accessible as web services.</p><p>Distributed query processor: The Distributed XQuery Processor (DXQP) takes distributed XQueries (or DXQueries) as input, delegates the appropriate sub-queries to the appropriate source wrappers, gathers all wrapper results, and constructs unified query result documents in XML.</p><p>Web server application: The DXBrain application itself accepts queries from the user, communicates with DXQP to evaluate user queries, and provides multiple means for formatting and/or visualizing the query results. It also provides facilities for saving/retrieving/editing user queries.</p><p>In the remainder of this section we describe the specific implementation of these layers in greater detail.</p><sec id="s1"><title>Source data and source wrappers</title><p>As a data integration system, DXBrain must support the incorporation of multiple data sources. In our driving biological application, as in many other scientific experiments, the data sources are highly heterogeneous in terms of the data model (i.e. relational data model vs. hierarchical data model) and in terms of the data format (i.e. CSV vs. Excel vs. relational tables).</p><p>When interacting with our system we wanted these heterogeneous sources to behave in a homogeneous manner. We achieve this by wrapping our sources in a common query interface. It is the job of the wrapper to translate incoming queries into source specific data requests and to transform source results into appropriate XML.</p><p>We have developed a Java application called WIX (Web Interface to XML) that can auto-generate an XQuery web-service encapsulation of any valid XML document (regardless of schema) (Structural Informatics Group, <xref ref-type="bibr" rid="B35">2007b</xref>). WIX is essentially a wrapper generator. As such it is very easy to add a new XML data source to the network. Although standard XQuery provides the ability to process arbitrary XML documents through the &#x0201c;doc&#x0201d; command, the &#x0201c;doc&#x0201d; command implements the <italic>document shipping</italic> paradigm, in which the entire document must be shipped to the query processor. WIX, on the other hand, implements the <italic>query shipping</italic> paradigm, in which only the query and query results need be shipped over the network.</p><p>The WIX website shows a demo of its use, and provides a downloadable version that can be used to add any new XML file to the DXBrain source network. The program is an executable Java JAR file that takes an arbitrary XML file as input (with optional XML Schema), and generates a Web Archive (WAR) file that can deployed as a web service by dropping it into a container such Apache Tomcat (Apache Software Foundation, <xref ref-type="bibr" rid="B1">2007</xref>). The service then provides a method for evaluating an XQuery over the XML file, and for returning the schema if it exists.</p><p>Although many data sources will be in the form of web-service encapsulated XML documents, they do not all need to be. In fact all that is required is that the source provide some sort of web accessible query method that returns XML results. In fact the source does not even need to be a static database, but can instead be an interface to an application that dynamically generates XML results.</p><p>In the following sections we illustrate these different kinds of data sources using examples from our driving application. These sections refer to the boxes at the bottom two levels of Figure <xref ref-type="fig" rid="F1">1</xref>.</p><sec><title>Cortical stimulation mapping data</title><p>The Cortical Stimulation Mapping (CSM) database contains information gathered by neurosurgeons during intra-operative studies of epileptic patients (Brinkley et al., <xref ref-type="bibr" rid="B4">2004</xref>; Hinshaw et al., <xref ref-type="bibr" rid="B13">2002</xref>; Ojemann et al., <xref ref-type="bibr" rid="B24">1989</xref>). The study procedure involves direct electrical stimulation of localized points on the surface of a patient's brain while simultaneously asking the patient to perform object naming tasks (i.e. the patient is shown a picture of a boat and asked to name the object that they see). Object naming errors are correlated with the stimulation site location (in X&#x02013;Y&#x02013;Z patient-specific coordinates) in order to identify brain regions essential for language function.</p><p>An XML export of the CSM data source is loaded into a WIX web service wrapper (CSM WIX in Figure <xref ref-type="fig" rid="F1">1</xref>) exposing CSM data to the DXBrain system. SilkRoute, an earlier tool we developed to process XQueries over relational data, facilitates this export (Fernandez et al., <xref ref-type="bibr" rid="B10">2002</xref>; Re, <xref ref-type="bibr" rid="B28">2006</xref>).</p></sec><sec><title>fMRI data</title><p>The fMRI data source stores MRI (magnetic resonance imaging) and fMRI (functional magnetic resonance imaging) data for many of the same patients found in the CSM source (performing the same object naming tasks as in the CSM case). This data source contains image processing metadata produced by our XBatch plugin (Poliakov et al., <xref ref-type="bibr" rid="B27">2007</xref>) to the SPM fMRI analysis package (Wellcome Department of Cognitive Neurology, <xref ref-type="bibr" rid="B39">2001</xref>).</p><p>Like the CSM database, an XML export of the fMRI data source is made available to DXBrain via a WIX wrapper (fMRI WIX in Figure <xref ref-type="fig" rid="F1">1</xref>).</p></sec><sec><title>Transformation service</title><p>This source is an application which transforms the X&#x02013;Y&#x02013;Z patient specific coordinates of CSM stimulation sites into the common MNI (Montreal Neurological Institute) neuroanatomical coordinate system (Evans et al., <xref ref-type="bibr" rid="B8">1993</xref>). Such spatial normalization is necessary in order to account for anatomical variability among individual brains. The transformation data are generated offline by a non-linear warping procedure in SPM that registers the structural MRI image volume of the patient to an MRI image volume of a population average brain. The warping procedure specifies, for each voxel in the MRI volume, the deformation necessary to transform it from patient-specific coordinates to normalized space. A transformation service (Figure <xref ref-type="fig" rid="F1">1</xref>) applies this deformation to transform a set of input patient-specific coordinates (typically stimulation sites retrieved from the CSM database) into the corresponding output MNI coordinates. The transformation server is wrapped in a web service that returns the result in XML format (Figure <xref ref-type="fig" rid="F1">1</xref>).</p></sec><sec id="s2"><title>Foundational model of anatomy ontology</title><p>The Foundational Model of Anatomy (FMA) is a symbolic representation (ontology) of the taxonomic and structural relationships that comprise canonical human anatomy (Rosse and Mejino, <xref ref-type="bibr" rid="B30">2003</xref>). The FMA is useful, in DXBrain, for augmenting cross-source data alignment. This goes beyond direct equivalence mapping (i.e. cerebral cortex in source A is equivalent to cortex cerebri in source B) to identifying &#x0201c;related&#x0201d; anatomical entities (i.e. that the middle temporal gyrus is a part of the temporal lobe). Such relationships can be used to develop &#x0201c;intelligent&#x0201d; queries in DXBrain that, for example, find all CSM sites located anywhere in the temporal lobe, as we show in Section <xref ref-type="sec" rid="s5">&#x02018;Consulting an Ontology to &#x0201c;Intelligently&#x0201d; Filter by Anatomical Location&#x02019;</xref>. The FMA demonstrates the utility of using domain ontologies to facilitate semantic interoperability (whereas the transformation server in the previous section is a method for providing spatial interoperability through anatomical normalization).</p><p>As is the case with other sources the FMA must be made available via a web service interface that returns XML results in response to queries such as, &#x0201c;Find the parts of the temporal lobe&#x0201d;. We have developed several such query interfaces (Mork et al., <xref ref-type="bibr" rid="B22">2003</xref>; Stalder and Brinkley, <xref ref-type="bibr" rid="B33">1999</xref>), the most recent being an ontology web service that accesses an OWL representation of the FMA, where OWL is a representation language for the semantic web (World Wide Web Consortium, <xref ref-type="bibr" rid="B42">2005c</xref>).</p><p>The service accepts queries in the vSparQL query language (vSparQL Processor in Figure <xref ref-type="fig" rid="F1">1</xref>), an extension we are developing to the standard W3C recommended SparQL query language (World Wide Web Consortium, <xref ref-type="bibr" rid="B41">2005b</xref>), that facilitates the creation of views over semantic web ontologies (Brinkley et al., <xref ref-type="bibr" rid="B6">2006</xref>; Detwiler et al., <xref ref-type="bibr" rid="B7">2008</xref>; Shaw et al., <xref ref-type="bibr" rid="B31">2008</xref>). Since the result of a vSparQL view query is RDF (resource description framework) (World Wide Web Consortium, <xref ref-type="bibr" rid="B40">2005a</xref>), which in turn is valid XML, the results of such a query can be included in a distributed XQuery. In fact the results of any standard SparQL query created with the SparQL &#x0201c;CONSTRUCT&#x0201d; statement can be included as a DXBrain source.</p></sec></sec><sec id="s3"><title>Distributed XQuery processor (DXQP)</title><p>DXQP (Figure <xref ref-type="fig" rid="F1">1</xref>) is responsible for processing DXQueries. It delegates source specific sub-queries to the appropriate source wrappers, and it handles local query operations such as cross-source joins, result filtering, and post processing. DXQP is described in its own project web page, and is available for download (Structural Informatics Group, <xref ref-type="bibr" rid="B34">2007a</xref>). The primary component of DXQP is an XQuery library, which supports calls to our data source web service wrappers. Library functions are provided for working with both SOAP and simple HTTP <italic>get</italic> web services in order to allow inclusion of as many sources as possible.</p><sec><title>SOAP services</title><p>SOAP (simple object access protocol) is a set of conventions for invoking code using XML over HTTP (W3C, <xref ref-type="bibr" rid="B38">2008</xref>). SOAP provides a standardized way of calling remote program methods. However, XQuery does not have any built in means of communicating with SOAP services. To enable DXQP to communicate with SOAP source wrappers, we used an extension provided by the XQuery processor Saxon (Kay, <xref ref-type="bibr" rid="B14">2008</xref>). Saxon is a free XQuery processor, written entirely in the Java programming language. Saxon facilitates the invocation of Java methods as external XQuery functions. We implemented a Java library, Anglo, to communicate with our SOAP source wrappers. We then added functions to the DXQP XQuery library that enable us to construct Anglo calls directly from an XQuery. While we endeavored to maintain compatibility with all standards-compliant XQuery processors, this extension works only on the Saxon processor (and possibly on others which offer similar support for Java calls, such as QEXO; GNU, <xref ref-type="bibr" rid="B12">2008</xref>).</p><p>The primary user-callable XQuery function in this case is called dxq:xqueryWS, which takes as input the URL of the source web service, the port, the web service method name, and the query. This function then calls the appropriate Java-coded function in Anglo:<preformat position="float" xml:space="preserve"><monospace>declare function dxq:xqueryWS(   $wsdlURL as xs:string,     $portName as xs:string,     $callName as xs:string,     $query as xs:string) as node(){anglo:xquery($wsdlURL,$portName,$callName,$query)};</monospace></preformat></p></sec><sec id="s4"><title>Get services</title><p>In addition to SOAP style services, DXQP also supports simple HTTP <italic>get</italic> web services where the query is encoded in the URL, and results are returned in XML. In the DXQP XQuery libraries we enabled interaction with simple <italic>get</italic> style source wrappers through the use of XQuery's built in doc($url) function. This function allows an XQuery to refer to any web accessible XML document. Because simple <italic>get</italic> services are accessible via a URL, and because they return XML results, they appear to the XQuery processor as XML documents. By passing queries to simple <italic>get</italic> source wrappers as URL arguments, the wrapper can dynamically generate XML results (a query shipping approach).</p><p>The primary user-callable XQuery function in this case is called dxq:xquery, which takes as input the server web address and the query. It constructs a URL by concatenating the server address, the web service method (called XQuerylet), and the hex-encoded query, and then calls the XQuery doc function to execute the query:<preformat position="float" xml:space="preserve"><monospace>declare function dxq:xquery($server as xs:string,$query as xs:string) as node(){let $queryString :=  encode-for-uri($query)let$url := concat($server, "/XQuerylet?query =",$queryString)return doc($url)};</monospace></preformat></p></sec><sec><title>Additional DXQP processing</title><p>In addition to delegating sub-queries to the appropriate source wrappers, DXQP can also process some portions of an XQuery locally. This enables DXQP to perform query operations such as cross-source data joins, result filtering, and other sorts of post processing tasks (such as in-query analysis).</p></sec></sec><sec><title>Web server application</title><p>The DXBrain web server application (Figure <xref ref-type="fig" rid="F1">1</xref>) is an application server for integrating the multimodality brain mapping data sources described in Section <xref ref-type="sec" rid="s1">&#x0201c;Source Data and Source Wrappers&#x0201d;</xref>. DXBrain communicates with DXQP [see <xref ref-type="sec" rid="s3">&#x0201c;Distributed XQuery Processor (DXQP)&#x0201d;</xref>], which it currently incorporates as a Java library, enabling it to process DXQueries over the source network.</p><p>DXBrain is built as a dynamic web application using Java JSP and Servlet technologies. As such it presents a page-based navigational metaphor. A small number of pages allow users to perform the required operations: authentication, query construction, storing and retrieving queries, executing queries, and displaying query results. These pages communicate with the data sources using the DXQP libraries, as well as a local database for storing user authentication information and saved queries. Query results can also be piped to an external 3-D visualization application we developed called MindSeer (Moore et al., <xref ref-type="bibr" rid="B21">2007</xref>).</p><sec><title>Creating queries</title><p>Queries may be created in several ways. The simplest method allows users to compose their own custom DXQueries by simply entering them manually. This input method is flexible and powerful, but it is also requires users to first understand the XQuery language.</p><p>A second method provides a web form, which allows users to select from a set of available query parameters, as for example, codes describing the particular type of error during CSM stimulation (Figure <xref ref-type="fig" rid="F2">2</xref>). These options are inserted into pre-defined portions of a template query (a prewritten XQuery not crafted by the user). This method allows users to compose some queries without actually writing any XQuery, but it supports only a very small subset of possible queries. This input method serves mostly as a demonstration of the usability gained by layering an easy to use, use-case specific user interface on top of an expressive and flexible query engine.</p><fig id="F2" position="float"><label>Figure 2</label><caption><p><bold>Portion of DXBrain template query GUI interface</bold>.</p></caption><graphic xlink:href="fninf-03-002-g002"/></fig></sec><sec><title>Storing and retrieving queries</title><p>We have found that the most useful means for composing queries is to retrieve a previously stored query and use it as a template for creating a new one. Any query, whether it is generated anew, created from a template via the selection interface, or retrieved from existing queries, may be saved in a local query database. Each saved query is given a title and description so that it may be retrieved from a list of stored queries, organized by the user. For example, Figure <xref ref-type="fig" rid="F3">3</xref> shows a portion of one such stored query, called &#x0201c;csm_view_code_fma_fmri&#x0201d;. Any of the Title, Description or Query fields may be edited by the user who owns the query. The query may be marked public, allowing other users to access it in the list of stored queries, or it can be made private (which is usually done while the query is being developed).</p><fig id="F3" position="float"><label>Figure 3</label><caption><p><bold>Saved query</bold>.</p></caption><graphic xlink:href="fninf-03-002-g003"/></fig></sec><sec><title>Executing queries</title><p>No matter what the input method a query is executed by clicking on one of the output format buttons at the bottom of the page (Figure <xref ref-type="fig" rid="F3">3</xref>). In each case the query is sent to DXQP for local execution or dispatch of query fragments to the separate sources, after which the consolidated XML results returned by DXQP are transformed if necessary into the requested output format.</p></sec></sec></sec></sec><sec><title>Results</title><p>We illustrate DXBrain by showing how it is used to process the following query:<disp-quote><p>&#x0201c;Find all female patients who made a semantic naming error during cortical stimulation mapping (CSM). For each of these patients find all CSM stimulation sites where at least one such error was made and that are located in the temporal lobe of the brain. For each of these sites return the normalized 3-D coordinates so that they may be compared. In addition, for each patient with at least one such error, return the associated fMRI study that was done using the same object identification protocol, if there is one.&#x0201d;</p></disp-quote></p><p>Simple modifications of this query would, for example, substitute male for female, and syntactic error for semantic error. The purpose of this query is to determine if different types of language processing are localized in different parts of the brain for different population subgroups (males versus females in this case) and whether there are any correlations between different measures of language such as CSM and fMRI.</p><p>This query needs to integrate CSM and fMRI data stored in the CSM and fMRI data sources. It also needs to access the transformation service to normalize patient coordinates. In addition, the query asks for stimulation sites (stimsites) that are located in the temporal lobe. However, in the CSM database stimsites are annotated with anatomical names that are of a finer granularity than &#x0201c;temporal lobe&#x0201d; (i.e. &#x0201c;Middle part of superior temporal gyrus&#x0201d;). Thus, the query also needs to query the FMA to determine the parts of the temporal lobe, and then only retain stimsites that are annotated by any part of the temporal lobe.</p><sec><title>Example DXQuery</title><p>The Query box of Figure <xref ref-type="fig" rid="F3">3</xref> shows a snippet of a DXQuery that answers the above query. The full DXQuery, which is 251 lines long, is available as a demo that can be examined and run (Structural Informatics Group, <xref ref-type="bibr" rid="B36">2008</xref>). Note, however, that the results returned by the demo will be minimal since full access to the data is restricted to authorized users. The next few sections explain snippets of this query.</p><sec><title>Parameter assignments</title><p>As shown in the portion of the query displayed in Figure <xref ref-type="fig" rid="F3">3</xref> saved queries often start with a set of parameter assignments, which represent search or display parameters. In the sample query, $code is a list of CSM error codes for searching the CSM database (as in Figure <xref ref-type="fig" rid="F2">2</xref>), $contrast_name and $protocol are parameters for searching the fMRI database, and $showtext, $color and $shape are parameters for our 3D visualization tool, Mindseer. In future work these parameters could be set in an automatically-generated parameter selection interface like that shown in Figure <xref ref-type="fig" rid="F2">2</xref>.</p></sec><sec><title>A view of the CSM database</title><p>The next part of the query snippet shown in Figure <xref ref-type="fig" rid="F3">3</xref> sets a local variable $csm_view to be an in-memory XML view of the CSM database that includes only those elements desired for the subsequent searches. This view may also involve renaming of some of the elements, as for example, &#x0003c;age&#x0003e; for &#x0003c;age_at_registration&#x0003e;. The constructed view query is executed by means of the dxq:csm XQuery function, which is a shortcut for the dxq:xquery HTTP <italic>get</italic> style function described in Section <xref ref-type="sec" rid="s4">&#x0201c;Get Services&#x0201d;</xref>. This shortcut allows users to call the CSM service without having to remember its URL. In DXBrain several of the other web services (fMRI, transformation) are similarly encapsulated.</p></sec><sec><title>Filtering the CSM view by sex and error code</title><p>The following sections include snippets of the full query that are not visible in Figure <xref ref-type="fig" rid="F3">3</xref>.</p><p>The CSM view is next filtered by the selected $sex parameter and the particular set of error codes specified by the $code parameter, the result of which is assigned to the $sex_code_filtered variable:<preformat position="float" xml:space="preserve"><monospace>let $sex_code_filtered: =   &#x0003c;sex_code_filtered&#x0003e;  {for $p in $csm_view/csm_view/patient  where $p/sex&#x02009;=&#x02009;$sex    and $p/surgery/stimsite/trial/trialcode/    term/abbrev/text()&#x02009;=&#x02009;$code  return    &#x0003c;patient&#x0003e;      &#x02026;</monospace></preformat></p><p>The result of this subquery is that $sex_code_filtered now points to an in-memory XML fragment containing only females who made a stimulation error of type 2 anywhere in the brain.</p></sec><sec id="s5"><title>Consulting an ontology to &#x0201c;intelligently&#x0201d; filter by anatomical location</title><p>To limit the location to just the temporal lobe the separate FMA source ontology is first consulted to determine the transitive closure (all parts of parts) of the Temporal lobe. In this case the language of the source-specific sub-query is not XQuery, but rather vSparQL (see <xref ref-type="sec" rid="s2">&#x0201c;Foundational Model of Anatomy Ontology&#x0201d;</xref>). The following simplified snippet shows a small part of the OWL representation of the FMA ontology (which has over 72,000 concepts and 2 million relationships).<preformat position="float" xml:space="preserve"><monospace>fma:Temporal_lobe fma:regional_part fma:Middle_temporal_gyrus.fma:Middle_temporal_gyrus fma:regional_partfma:Posterior_part_of_middle_temporal_gyrus.fma:Posterior_part_of_middle_temporal_gyrus fma:Preferred_name fma:fma_term_08300.fma:fma_term_08300 fma:name "Posterior part ofmiddle temporal gyrus".</monospace></preformat></p><p>The corresponding vSparQL query, which is assigned to the variable $query in the distributed XQuery, is shown below.<preformat position="float" xml:space="preserve"><monospace>(: Define the parameters of the ontology webservice :)let $wsdlURL :=  "http://&#x02026;/VSparQLService.wsdl" let $serviceName := "VSparQLService" let $methodName :=  "executeQuery"(: Define the subquery in extended SparQL :)let $query := 'PREFIX fma: &#x0003c;http://&#x02026;/fma_2_0#&#x0003e;PREFIX gleen:&#x0003c;java:edu.washington.sig.gleen.&#x0003e;PREFIX qv:&#x0003c;http://sig.biostr.washington.edu/query_view#&#x0003e;CONSTRUCT { fma:Temporal_lobe qv:hasPartName?part_name. }FROM &#x0003c;http://&#x02026;/fma_2_0&#x0003e;WHERE{  fma:Temporal_lobe gleen:OnPath    ("([fma:regional_part]|[fma:constitutional_    part]) +" ?part).  ?part gleen:OnPath ("[fma:Preferred_name]/  [fma:name]" ?part_name).}'(: Execute the query and return only temporallobe parts from the XML result tree :)let $temporalLobeParts :=  dxq:xqueryWS($wsdlURL,$serviceName, $methodName, $query)//qv:hasPartName</monospace></preformat></p><p>As noted in Section <xref ref-type="sec" rid="s2">&#x0201c;Foundational Model of Anatomy Ontology&#x0201d;</xref> vSparQL (Shaw et al., <xref ref-type="bibr" rid="B31">2008</xref>) is a set of extensions to SparQL we are developing to enable the creation of views over large ontologies like the FMA. In particular this query uses the Gleen regular expression library (Detwiler et al., <xref ref-type="bibr" rid="B7">2008</xref>) to follow arbitrary paths in ontologies. For example, in the above query the search starts with the node called &#x0201c;Temporal_lobe&#x0201d;, follows any number of regional_part or constitutional_part links (which together define the generic parts), and for each of these, finds the string representing the preferred name of that part. This string is then assigned to each element &#x0003c;hasPartName&#x0003e; of the result. Since the annotations of the CSM database were controlled to use these exact strings then the result of this query may be used directly to match against the CSM data. In a more complex situation a separate mapper web service associated with a particular data source could be used to convert widely accepted ontology terms to local terms. The DXBrain architecture would treat such a mapper as just another data source.</p><p>The list of parts of the Temporal lobe is then used to further filter the $sex_code_filtered result by selecting only those patients who have stimsites that are annotated with at least one of the parts of the temporal lobe (via the anatomical_name child element of stimsite). The result of this filtering operation is assigned to variable $fma_filtered. Its effect is to restrict the retrieved stimsites to only those that are in the temporal lobe, without requiring the user to know the specific parts of the temporal lobe that were used to annotate the data in the original CSM database:<preformat position="float" xml:space="preserve"><monospace>let $fma_filtered :=   &#x0003c;fma_filtered&#x0003e;  {for $p in $sex_code_filtered/patient   where $p/surgery/stimsite/anatomical_name&#x02009;=   $temporalLobeParts  return   &#x0003c;patient&#x0003e;&#x02026;</monospace></preformat></p></sec><sec><title>Querying a second data source</title><p>Next, a view of the fmri database is assigned to the variable $fmri_view via dxq:xbatch, a shortcut function that directs xqueries to the fMRI Wix wrapper in Figure <xref ref-type="fig" rid="F1">1</xref>. As in csm_view, many of the elements in the original database are deleted or renamed, as for example, &#x0003c;Subject&#x0003e; becomes &#x0003c;patient&#x0003e; to conform to the usage in the CSM database.<preformat position="float" xml:space="preserve"><monospace>let $fmri_view :=  dxq:xbatch("  &#x0003c;fmri&#x0003e;   {for $subject in $root//Subject   let $subjectID :=  data($subject/   @Subject_ID)   let $pnum :=  replace($subjectID,'P',")   order by $pnum   return   &#x0003c;patient&#x0003e;   &#x02026;</monospace></preformat></p><p>This view is then filtered and assigned to variable $fmri_filtered so that only fMRI protocols and contrasts as specified by the search parameters are retained:<preformat position="float" xml:space="preserve"><monospace>let $fmri_filtered :=   &#x0003c;fmri&#x0003e;   {for $patient in $fmri_view//patient   where $patient/protocol/name/   text()&#x02009;=&#x02009;$protocol_name and   $patient/protocol/contrast/name/   text()&#x02009;=&#x02009;$contrast_name   return   &#x0003c;patient&#x0003e;   &#x02026;</monospace></preformat></p></sec><sec><title>Merging results from the two data sources</title><p>The $fmri_filtered result is then joined with the $fma_filtered result, with the result that available fMRI contrasts are included with the results from the CSM database.<preformat position="float" xml:space="preserve"><monospace>let $merged :=  &#x0003c;merged&#x0003e;  {for $p in $fma_filtered//patient   return   &#x0003c;patient&#x0003e;     &#x02026;    {for $s in $fmri_filtered//patient    where $p/pnum&#x02009;=&#x02009;$s/pnum       return        $s/contrast    } &#x0003c;/patient&#x0003e; }&#x0003c;/merged&#x0003e;</monospace></preformat></p><p>Finally, the merged result, along with a count of patients, is returned as the overall result of the query:<preformat position="float" xml:space="preserve"><monospace>return  &#x0003c;patients&#x0003e;   &#x0003c;count&#x0003e;{count($merged/patient)}&#x0003c;/count&#x0003e;  {$merged/patient}&#x0003c;/patients&#x0003e;</monospace></preformat></p></sec></sec><sec><title>Displaying query results</title><p>DXBrain provides multiple formats for displaying the results of a dxquery. The textual output formats XML, HTML and CSV are generic to any data source. The Image2 and 3D formats, which layer results on a 2D and 3D representation of the brain respectively, are specific to the DXBrain application. The buttons shown at the bottom of Figure <xref ref-type="fig" rid="F3">3</xref> are used to execute the query in the Query box, and to transform the results to the requested output format.</p><sec><title>Displaying results in XML</title><p>XML is the native format of query results from DXQP. If the user selects the XML output format, he or she is presented with the raw results, as they are received from DXQP, without any additional post-processing. For example, Figure <xref ref-type="fig" rid="F4">4</xref> shows a snippet of the XML results obtained from running the sample query. In this case 16 females made semantic paraphasia errors during CSM that were located in the temporal lobe. The figure shows one of these, P175, together with the one stimsite where the error was made, the magnet (patient-specific coordinates) of that site, the assigned anatomical name, &#x0201c;Middle part of middle temporal gyrus&#x0201d;, which is part of the temporal lobe, and the associated CSM trials during which the error was made. For example, in trial 69 the patient was presented with a picture of a chicken while site 28 was stimulated. The response, &#x0201c;hen, rooster&#x0201d;, was coded as a semantic error (trialcode 2).</p><fig id="F4" position="float"><label>Figure 4</label><caption><p><bold>XML output</bold>.</p></caption><graphic xlink:href="fninf-03-002-g004"/></fig><p>In addition, the full local pathname to an associated fMRI contrast file, spmT_0012.hdr, is also shown. This file represents an fMRI study with similar object identification task as that used in the CSM study, the goal being to compare the CSM and fMRI results.</p></sec><sec><title>Displaying results in HTML and CSV</title><p>The HTML and CSV output options allow users to view DXQP results transformed from XML into HTML or CSV, where CSV is a useful input format for spreadsheet programs like Excel. In both cases we generated the transformed output by means of internal XQueries that are applicable to <italic>any</italic> well-formed XML file, regardless of schema.</p><p>Figure <xref ref-type="fig" rid="F5">5</xref> shows a snippet of the HTML generated from the XML file shown in Figure <xref ref-type="fig" rid="F4">4</xref>, whereas Figure <xref ref-type="fig" rid="F6">6</xref> is a snippet of the CSV output from the XML file, after being loaded into Excel.</p><fig id="F5" position="float"><label>Figure 5</label><caption><p><bold>HTML output</bold>.</p></caption><graphic xlink:href="fninf-03-002-g005"/></fig><fig id="F6" position="float"><label>Figure 6</label><caption><p><bold>CSV output displayed in Excel</bold>.</p></caption><graphic xlink:href="fninf-03-002-g006"/></fig></sec><sec><title>Displaying results as 2-D images</title><p>In addition to these general result formats DXBrain provides two additional means for visualizing query results. These two output methods are specific to the DXBrain data network. The first, a 2D visualization (Image2 button in Figure <xref ref-type="fig" rid="F3">3</xref>), shows a segmented brain schematic, where each region in the diagram is colored according to the number of retrieved stimulation sites that are annotated with the name of that region. The region labels are mapped to terms from the FMA ontology. For example MSTG is an abbreviation for Middle part of superior temporal gyrus. Figure <xref ref-type="fig" rid="F7">7</xref>A shows such a visualization for female patients, and Figure <xref ref-type="fig" rid="F7">7</xref>B shows male patients after re-running the example query with the $sex parameter changed to &#x0201c;M&#x0201d;.</p><fig id="F7" position="float"><label>Figure 7</label><caption><p><bold>2-D image output</bold>. Intensity of colored regions is proportional to the number of sites in that region returned by the query. <bold>(A)</bold> Females, <bold>(B)</bold> Males.</p></caption><graphic xlink:href="fninf-03-002-g007"/></fig></sec><sec><title>Displaying results as 3-D visualizations</title><p>The second visualization method pipelines results from DXBrain to an external 3D visualization suite we developed, called MindSeer (Moore et al., <xref ref-type="bibr" rid="B21">2007</xref>). It does this by first connecting to the Transformation service (Figure <xref ref-type="fig" rid="F1">1</xref>) to convert the patient-specific (magnet) coordinates of each stimsite, as returned in Figure <xref ref-type="fig" rid="F4">4</xref>, to normalized coordinates. It then invokes MindSeer via Java Web Start, with parameters that include the results returned by running the query.</p><p>MindSeer is both a standalone and a client-server Java3D program that supports the visualization of spatial data, including spatial data resulting from DXBrain queries. For example, stimulation sites from multiple patients can be viewed together spatially normalized, on a common brain. Additional data modalities, such as fMRI, can be overlaid within the same visualization. Two canonical brain atlases are available within which MindSeer can display DXBrain results, the Collin brain and the Average MNI Brain (Evans et al., <xref ref-type="bibr" rid="B8">1993</xref>). Results can also be viewed on any of the individual patient's brains as well. Such a capability could be useful for surgical planning, in order to show likely regions of language, based on population studies, which could be further explored at the time of surgery.</p><p>Figure <xref ref-type="fig" rid="F8">8</xref>A shows the normalized stimulation sites retrieved as a result of the sample query as large blue spheres (one of the parameters of the query, Figure <xref ref-type="fig" rid="F3">3</xref>). In addition, the single retrieved fMRI study (based on the query parameters $contrast and $protocol in Figure <xref ref-type="fig" rid="F3">3</xref>) is shown. In this case the intensity values of the fMRI volume (which represent areas of the brain that are activated as a result of the task) are used to color the nearest surface patches on the canonical brain surface, thereby allowing comparison with the CSM sites. In this case the cold colors (like blue) in the color scheme mean the area had decreased activation relative to a control task (fixation), and warm colors (like orange) means the area had increased activation. It should be noted that no conclusions as to the relationship between fMRI and CSM measures of language can be inferred from this one example, and in fact, other studies suggest that there may in fact not be a relationship. The point for this paper is that the tools we have developed facilitate such comparisons.</p><fig id="F8" position="float"><label>Figure 8</label><caption><p><bold>3-D Visualization of retrieved CSM sites mapped onto a canonical brain atlas</bold>. <bold>(A)</bold> Females, also showing a related fMRI study, <bold>(B)</bold> Males.</p></caption><graphic xlink:href="fninf-03-002-g008"/></fig><p>Figure <xref ref-type="fig" rid="F8">8</xref>B shows the results of running the sample query in which males are substituted for females, as in Figure <xref ref-type="fig" rid="F7">7</xref>B. In this case no fMRI study is available that matches the search criteria (the fMRI database is currently only sparsely populated). Although the CSM data shown in Figures <xref ref-type="fig" rid="F7">7</xref> and <xref ref-type="fig" rid="F8">8</xref> suggest that semantic processing is more posterior in the temporal lobe for males than for females, these suggestions need to be validated both by statistical analysis and by looking at other sources of data. The CSV output format (Figure <xref ref-type="fig" rid="F6">6</xref>) facilitates this sort of analysis by external statistical packages, and the ability of DXBrain, the FMA and MindSeer to query and integrate multiple sources of data should allow these other sources to be more readily accessed than would be the case if they each had to be accessed manually.</p></sec></sec><sec id="s6"><title>Adding a new source</title><p>One of the primary advantages of the distributed query approach is that it is very easy to add new data sources to the network, even those that were not anticipated during the original system deployment. As DXBrain does not enforce a centralized schema, and because it places few requirements or restrictions on new data sources, adding such sources is relatively simple. To make it even easier we provide the WIX tool (see <xref ref-type="sec" rid="s1">&#x0201c;Source Data and Source Wrappers&#x0201d;</xref>) to assist users in the task of source deployment.</p><p>Using the WIX tool, we performed a small test to determine the difficulty of adding a new, unanticipated source to the network. For the source, we used an XML export of the EndNote library for this paper. While this source adds little value to the network, it was chosen due to its dissimilarity with existing sources. We also downloaded the DTD file containing the general EndNote XML export schema. We launched WIX, selected our XML and Schema files and then clicked the &#x0201c;Generate War&#x0201d; button, which produces a .war file (<bold>W</bold>eb <bold>AR</bold>chive) suitable for deployment in any J2EE web application container (such as Apache Tomcat). This process took roughly 1&#x02009;min. We used Tomcat's manager application to deploy our newly generated .war file, which again took about a minute.Our source is now available for querying from DXBrain.</p><p>To test our new source deployment, we went to the DXBrain &#x0201c;New Query&#x0201d; page and issued a query against our new source. The query we chose finds the titles of all references where the author name contains the word &#x0201c;Bales&#x0201d;. Here is our test query, which took about 5 min to generate as we needed to refer to the schema when creating the query, and our results:<preformat position="float" xml:space="preserve"><monospace>let $endnote_query := "&#x0003c;results&#x0003e;{  for $record in $root//record  for $record_style in $record//author/style  where contains($record_style,'Bales')  return  &#x0003c;title&#x0003e;{$record//title/style/text()}&#x0003c;/title&#x0003e;}&#x0003c;/results&#x0003e;"return  dxq:xquery  ("http://xiphoid:8080/DXBrain_EndNote/",$endnote_query )-------------------------------------------------&#x0003c;?xml version&#x02009;=&#x02009;"1.0" encoding&#x02009;=&#x02009;"UTF-8"?"&#x0003c;results&#x0003e;  &#x0003c;title&#x0003e;A framework for XML-based integration  of data, visualization and analysis in a  biomedical domain&#x0003c;/title&#x0003e;&#x0003c;/results&#x0003e;</monospace></preformat></p></sec></sec><sec sec-type="discussion"><title>Discussion</title><p>In this paper we have described a distributed XML-based approach to data integration, and have shown its implementation within a specific application in brain mapping. The approach is lightweight and efficient, in that it is very easy to add a new data source, and query processing is relatively fast. However a cognitive burden is moved from the administrator to the user, who must now understand all the source schemata. We have partially reduced this burden by allowing the use of saved queries, which can be re-executed at any time with new parameters that may or may not be generated by custom user interfaces. Thus, we envision that one or more XQuery experts, who know the data sources, will be required to generate the saved queries, whereas end-users will be able to simply re-run the queries or use simple graphical interfaces to complete pre-built template queries. In practice we have found that if the query results are useful enough, and if there are enough example saved queries to serve as templates, the collaborating biologists do indeed take the time to learn enough XQuery to obtain results. In fact some of the saved queries on our demo website were generated by one such collaborating biologist. In contrast, it is unlikely that a collaborating biologist would be willing to take the considerable time needed to create and maintain a data warehouse or mediated system if all they want is to get a new result for a single publication.</p><p>In spite of the limitations we have found the system to be very useful in its present state as a way to rapidly query disparate data sources. In fact many of the sources we have queried in this way are not even related to brain mapping, as, for example the EndNote library described in Section <xref ref-type="sec" rid="s6">&#x0201c;Adding a New Source&#x0201d;</xref>. Thus, in our future work we will generalize our approach, removing the dependencies on brain mapping and relegating these to a plugin mechanism. In addition we will develop methods for adding additional sources, without requiring the developer to know the schema of every source, through the creation of views over multiple sources, which can themselves be queried as though they were a single source. Such an approach is analogous to views in relational databases, and similar to our current work in view generation over ontologies (Brinkley et al., <xref ref-type="bibr" rid="B6">2006</xref>).</p><p>As the number of sources increases methods for semantic interoperability will become increasingly important, so the semantic web query methods described in Section <xref ref-type="sec" rid="s5">&#x02018;Consulting an Ontology to &#x0201c;Intelligently&#x0201d; Filter by Anatomical Location&#x02019;</xref> will need to be enhanced. In addition, since our eventual goal is to allow the end user to create queries without the need to understand the complex XQuery language, we will need to develop graphical XQuery generation languages similar to a prototype we have developed but not yet integrated in DXBrain (Li et al., <xref ref-type="bibr" rid="B18">2007</xref>). Finally, as the number of sources becomes larger, or as the data become ready for submission to large central repositories or federations such as BIRN, it will be necessary to develop interfaces such that it is easy to either import the results of a distributed query into one of these systems, or to treat the distributed query engine as a processing node in the larger grid.</p><p>Many of the components of DXBrain are analogous to those in other data integration systems: the use of wrappers over data sources, a distributed query processor, semantic web and other technologies for interoperability, and user interfaces. An important advantage of XQuery and its distributed extensions is that it is a complete programming language, thus allowing many of these components to be developed within a common framework, and then saved as modules (in the form of saved queries). Thus, as methods for re-using these modules and for graphically generating them become available it should be possible to build from the bottom-up networks of data sources from small groups of collaborating labs. These networks could in turn be combined together through additional saved query modules, and eventually incorporated as nodes in the larger national grids. Although additional research is needed before this kind of bottom-up creation of an information sharing network becomes available the current version of DXBrain, especially the downloadable modules, should be of use now by others who wish to create local shared networks of data. Tools to create such networks should help to fill the gap between the mostly <italic>ad hoc</italic> methods currently used by small-scale investigators and the large-scale heavyweight methods employed by projects such as BIRN.</p></sec><sec><title>Conflict of Interest Statement</title><p>The authors declare that the research was conducted in the absence of any commercial or financial relationships that could be construed as a potential conflict of interest.</p></sec></body><back><ack><p>This work was funded by NIH grants DC02310 and HL087706. In addition to the authors, several other individuals have been involved in various aspects of this work, including Chris Re, Nathan Bales, Stacy Tang, Hao Li, Erin Gibson, Brandon Loudermilk, and Ettore Lettich. We thank Natasha Noy, at the Stanford National Center for Bioontology, for converting the Foundational Model of Anatomy to OWL.</p></ack><ref-list><title>References</title><ref id="B1"><citation citation-type="web"><person-group person-group-type="author"><collab>Apache Software Foundation</collab></person-group> (<year>2007</year>). <article-title>Apache Tomcat</article-title>. 2007. Available at: <uri xlink:type="simple" xlink:href="http://tomcat.apache.org/">http://tomcat.apache.org/</uri></citation></ref><ref id="B2"><citation citation-type="other"><person-group person-group-type="author"><name><surname>Bales</surname><given-names>N.</given-names></name><name><surname>Brinkley</surname><given-names>J</given-names></name><name><surname>Lee</surname><given-names>E. S.</given-names></name><name><surname>Mathur</surname><given-names>S.</given-names></name><name><surname>Re</surname><given-names>C.</given-names></name><name><surname>Suciu</surname><given-names>D.</given-names></name></person-group> (<year>2005</year>). <article-title>A Framework for XML-Based Integration of Data, Visualization and Analysis in a Biomedical Domain</article-title>. Trondheim, Proceedings, Third International XML Database Symposium (XSym 2005), pp. <fpage>207</fpage>&#x02013;<lpage>221</lpage></citation></ref><ref id="B3"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Brinkley</surname><given-names>J. F.</given-names></name></person-group> (<year>2008</year>). <article-title>University of Washington Integrated Brain Project, Home Page</article-title>. Available at: <uri xlink:type="simple" xlink:href="http://sig.biostr.washington.edu/projects/brain">http://sig.biostr.washington.edu/projects/brain</uri></citation></ref><ref id="B4"><citation citation-type="other"><person-group person-group-type="author"><name><surname>Brinkley</surname><given-names>J. F.</given-names></name><name><surname>Jakobovits</surname><given-names>R. M.</given-names></name><name><surname>Poliakov</surname><given-names>A. V.</given-names></name><name><surname>Martin</surname><given-names>R. F.</given-names></name><name><surname>Gibson</surname><given-names>E. R.</given-names></name><name><surname>Corina</surname><given-names>D. M.</given-names></name><name><surname>Ojemann</surname><given-names>G. A.</given-names></name></person-group> (<year>2004</year>). <article-title>An experiment management system for cortical stimulation mapping data</article-title>. San Diego, Society for Neuroscience Annual Meeting, p. 1032.12.</citation></ref><ref id="B5"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Brinkley</surname><given-names>J. F.</given-names></name><name><surname>Myers</surname><given-names>L. M.</given-names></name><name><surname>Prothero</surname><given-names>J. S.</given-names></name><name><surname>Heil</surname><given-names>G. H.</given-names></name><name><surname>Tsuruda</surname><given-names>J. S.</given-names></name><name><surname>Maravilla</surname><given-names>K. R.</given-names></name><name><surname>Ojemann</surname><given-names>G. A.</given-names></name><name><surname>Rosse</surname><given-names>C.</given-names></name></person-group> (<year>1997</year>). <article-title>A structural information framework for brain mapping</article-title>. <source>In: Neuroinformatics: An Overview of the Human Brain Project</source>, <person-group person-group-type="editor"><name><surname>Koslow</surname><given-names>S. H.</given-names></name><name><surname>Huerta</surname><given-names>M. F.</given-names></name></person-group> eds (<publisher-loc>Mahwah</publisher-loc>, <publisher-name>Lawrence Erlbaum</publisher-name>), pp. <fpage>309</fpage>&#x02013;<lpage>334</lpage></citation></ref><ref id="B6"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Brinkley</surname><given-names>J. F.</given-names></name><name><surname>Suciu</surname><given-names>D.</given-names></name><name><surname>Detwiler</surname><given-names>L. T.</given-names></name><name><surname>Gennari</surname><given-names>J. H.</given-names></name><name><surname>Rosse</surname><given-names>C.</given-names></name></person-group> (<year>2006</year>). <article-title>A framework for using reference ontologies as a foundation for the semantic web</article-title>. <source>Proc. AMIA Annu. Fall Symp.</source><volume>2006</volume>, <fpage>96</fpage>&#x02013;<lpage>100</lpage></citation></ref><ref id="B7"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Detwiler</surname><given-names>L. T.</given-names></name><name><surname>Suciu</surname><given-names>D.</given-names></name><name><surname>Brinkley</surname><given-names>J. F.</given-names></name></person-group> (<year>2008</year>). <article-title>Regular paths in SparQL: querying the NCI thesaurus</article-title>. <source>Proc. AMIA Annu. Fall Symp.</source><volume>2008</volume>, <fpage>161</fpage>&#x02013;<lpage>165</lpage></citation></ref><ref id="B8"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Evans</surname><given-names>A. C.</given-names></name><name><surname>Collins</surname><given-names>D. L.</given-names></name><name><surname>Mills</surname><given-names>S. R.</given-names></name><name><surname>Brown</surname><given-names>E. D.</given-names></name><name><surname>Kelly</surname><given-names>R. L.</given-names></name><name><surname>Peters</surname><given-names>T. M.</given-names></name></person-group> (<year>1993</year>). <article-title>3D Statistical neuroanatomical models from 305 MRI volumes</article-title>. <source>Proc. IEEE Nucl. Sci. Symp. Med. Imag. Conf.</source><volume>1993</volume>, <fpage>1813</fpage>&#x02013;<lpage>1817</lpage></citation></ref><ref id="B9"><citation citation-type="other"><person-group person-group-type="author"><name><surname>Fernandez</surname><given-names>M.</given-names></name><name><surname>Jim</surname><given-names>T.</given-names></name><name><surname>Morton</surname><given-names>K.</given-names></name><name><surname>Onose</surname><given-names>N.</given-names></name><name><surname>Simeon</surname><given-names>J.</given-names></name></person-group> (<year>2007</year>). <article-title>DXQ: A Distributed XQuery Scripting Language</article-title>. Beijing, XIME-P-2007: 4th International Workshop on XQuery Implementation, Experience and Perspectives.</citation></ref><ref id="B10"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Fernandez</surname><given-names>M.</given-names></name><name><surname>Kadiyska</surname><given-names>Y.</given-names></name><name><surname>Morishima</surname><given-names>A.</given-names></name><name><surname>Suciu</surname><given-names>D.</given-names></name><name><surname>Tan</surname><given-names>W.</given-names></name></person-group> (<year>2002</year>). <article-title>Silkroute: a framework for publishing relational data in XML</article-title>. <source>ACM Trans. Database Technol.</source><volume>27</volume>, <fpage>1</fpage>&#x02013;<lpage>6</lpage><pub-id pub-id-type="doi">10.1145/507234.507235</pub-id></citation></ref><ref id="B11"><citation citation-type="web"><person-group person-group-type="author"><name><surname>Gazzaniga</surname><given-names>M. S.</given-names></name></person-group> (<year>2008</year>). <article-title>The fMRI Data Center</article-title>. 2001. Available at: <uri xlink:type="simple" xlink:href="http://www.fmridc.org/">http://www.fmridc.org/</uri></citation></ref><ref id="B12"><citation citation-type="web"><person-group person-group-type="author"><collab>GNU</collab></person-group> (<year>2008</year>). <article-title>QEXO &#x02013; The GNU Kawa Implementation of XQuery</article-title>. Available at: <uri xlink:type="simple" xlink:href="http://www.gnu.org/software/qexo/">http://www.gnu.org/software/qexo/</uri></citation></ref><ref id="B13"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Hinshaw</surname><given-names>K. P.</given-names></name><name><surname>Poliakov</surname><given-names>A. V.</given-names></name><name><surname>Martin</surname><given-names>R. F.</given-names></name><name><surname>Moore</surname><given-names>E. B.</given-names></name><name><surname>Shapiro</surname><given-names>L. G.</given-names></name><name><surname>Brinkley</surname><given-names>J. F.</given-names></name></person-group> (<year>2002</year>). <article-title>Shape-based cortical surface segmentation for visualization brain mapping</article-title>. <source>Neuroimage</source><volume>16</volume>, <fpage>295</fpage>&#x02013;<lpage>316</lpage><pub-id pub-id-type="doi">10.1006/nimg.2002.1093</pub-id><pub-id pub-id-type="pmid">12030818</pub-id></citation></ref><ref id="B14"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Kay</surname><given-names>M.</given-names></name></person-group> (<year>2008</year>). <article-title>SAXON: The XSLT and XQuery Processor</article-title>. Available at: <uri xlink:type="simple" xlink:href="http://saxon.sourceforge.net/">http://saxon.sourceforge.net/</uri></citation></ref><ref id="B15"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Keator</surname><given-names>D. B.</given-names></name><name><surname>Grethe</surname><given-names>J. S.</given-names></name><name><surname>Marcus</surname><given-names>D.</given-names></name><name><surname>Ozyurt</surname><given-names>B.</given-names></name><name><surname>Gadde</surname><given-names>S.</given-names></name><name><surname>Murphy</surname><given-names>S.</given-names></name><name><surname>Pieper</surname><given-names>S.</given-names></name><name><surname>Greve</surname><given-names>D.</given-names></name><name><surname>Notestine</surname><given-names>R.</given-names></name><name><surname>Bockholt</surname><given-names>H. J.</given-names></name><name><surname>Papadopoulos</surname><given-names>P.</given-names></name></person-group> (<year>2008</year>). <article-title>A national human neuroimaging collaboratory enabled by the Biomedical Informatics Research Network (BIRN)</article-title>. <source>IEEE Trans. Inf. Technol. Biomed.</source><volume>12</volume>, <fpage>162</fpage>&#x02013;<lpage>172</lpage><pub-id pub-id-type="doi">10.1109/TITB.2008.917893</pub-id><pub-id pub-id-type="pmid">18348946</pub-id></citation></ref><ref id="B16"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Koslow</surname><given-names>S.</given-names></name><name><surname>Hyman</surname><given-names>S.</given-names></name></person-group> (<year>2000</year>). <article-title>Human brain project: a program for the new millenium</article-title>. <source>Einstein Q. J. Biol. Med.</source><volume>17</volume>, <fpage>7</fpage>&#x02013;<lpage>15</lpage></citation></ref><ref id="B17"><citation citation-type="web"><person-group person-group-type="author"><collab>Laboratory of Neuro Imaging</collab></person-group> (<year>2008</year>). <article-title>LONI Image Database</article-title>. Available at: <uri xlink:type="simple" xlink:href="http://www.loni.ucla.edu/Research/Databases/">http://www.loni.ucla.edu/Research/Databases/</uri></citation></ref><ref id="B18"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Li</surname><given-names>X.</given-names></name><name><surname>Gennari</surname><given-names>J. H.</given-names></name><name><surname>Brinkley</surname><given-names>J.</given-names></name></person-group> (<year>2007</year>). <article-title>XGI: a graphical interface for XQuery creation</article-title>. <source>Proc. AMIA Annu. Fall Symp.</source><volume>2007</volume>, <fpage>453</fpage>&#x02013;<lpage>457</lpage></citation></ref><ref id="B19"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Martone</surname><given-names>M. E.</given-names></name><name><surname>Zhang</surname><given-names>S.</given-names></name><name><surname>Gupta</surname><given-names>A.</given-names></name><name><surname>Qian</surname><given-names>X.</given-names></name><name><surname>He</surname><given-names>H.</given-names></name><name><surname>Price</surname><given-names>D. L.</given-names></name><name><surname>Wong</surname><given-names>M.</given-names></name><name><surname>Santini</surname><given-names>S.</given-names></name><name><surname>Ellisman</surname><given-names>M. H.</given-names></name></person-group> (<year>2003</year>). <article-title>The cell-centered database: a database for multiscale structural and protein localization data from light and electron microscopy</article-title>. <source>Neuroinformatics</source><volume>1</volume>, <fpage>379</fpage>&#x02013;<lpage>395</lpage><pub-id pub-id-type="doi">10.1385/NI:1:4:379</pub-id><pub-id pub-id-type="pmid">15043222</pub-id></citation></ref><ref id="B20"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Miller</surname><given-names>P. L.</given-names></name><name><surname>Nadkarni</surname><given-names>P.</given-names></name><name><surname>Singer</surname><given-names>M.</given-names></name><name><surname>Marenco</surname><given-names>L.</given-names></name><name><surname>Hines</surname><given-names>M.</given-names></name><name><surname>Shepard</surname><given-names>G.</given-names></name></person-group> (<year>2001</year>). <article-title>Integration of multidisciplinary sensory data: a pilot model of the Human Brain Project approach</article-title>. <source>J. Am. Med. Assoc.</source><volume>8</volume>, <fpage>34</fpage>&#x02013;<lpage>48</lpage></citation></ref><ref id="B21"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Moore</surname><given-names>E. B.</given-names></name><name><surname>Poliakov</surname><given-names>A.</given-names></name><name><surname>Lincoln</surname><given-names>P.</given-names></name><name><surname>Brinkley</surname><given-names>J.</given-names></name></person-group> (<year>2007</year>). <article-title>MindSeer: a portable and extensible tool for visualization of structural and functional neuroimaging data</article-title>. <source>BMC Bioinformatics</source><volume>8</volume>, <fpage>389</fpage><pub-id pub-id-type="doi">10.1186/1471-2105-8-389</pub-id><pub-id pub-id-type="pmid">17937818</pub-id></citation></ref><ref id="B22"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Mork</surname><given-names>P.</given-names></name><name><surname>Brinkley</surname><given-names>J. F.</given-names></name><name><surname>Rosse</surname><given-names>C.</given-names></name></person-group> (<year>2003</year>). <article-title>OQAFMA Querying Agent for the Foundational Model of Anatomy: a prototype for providing flexible and efficient access to large semantic networks</article-title>. <source>J. Biomed. Inform.</source><volume>36</volume>, <fpage>501</fpage>&#x02013;<lpage>517</lpage><pub-id pub-id-type="doi">10.1016/j.jbi.2003.11.004</pub-id><pub-id pub-id-type="pmid">14759821</pub-id></citation></ref><ref id="B23"><citation citation-type="journal"><person-group person-group-type="author"><collab>Nature Neuroscience</collab></person-group> (<year>2000</year>). <article-title>A debate over fMRI data sharing</article-title>. <source>Nat. Neurosci.</source><volume>3</volume>, <fpage>845</fpage>&#x02013;<lpage>846</lpage><pub-id pub-id-type="doi">10.1038/78728</pub-id><pub-id pub-id-type="pmid">10966604</pub-id></citation></ref><ref id="B24"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Ojemann</surname><given-names>G.</given-names></name><name><surname>Ojemann</surname><given-names>J.</given-names></name><name><surname>Lettich</surname><given-names>E.</given-names></name><name><surname>Berger</surname><given-names>M.</given-names></name></person-group> (<year>1989</year>). <article-title>Cortical language localization in left, dominant hemisphere: an electrical stimulation mapping investigation in 117 patients</article-title>. <source>J. Neurosurg.</source><volume>71</volume>, <fpage>316</fpage>&#x02013;<lpage>326</lpage><pub-id pub-id-type="pmid">2769383</pub-id></citation></ref><ref id="B25"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Oster</surname><given-names>S.</given-names></name><name><surname>Langella</surname><given-names>S.</given-names></name><name><surname>Hastings</surname><given-names>S.</given-names></name><name><surname>Ervin</surname><given-names>D.</given-names></name><name><surname>Madduri</surname><given-names>R.</given-names></name><name><surname>Phillips</surname><given-names>J.</given-names></name><name><surname>Kurc</surname><given-names>T.</given-names></name><name><surname>Siebenlist</surname><given-names>F.</given-names></name><name><surname>Covitz</surname><given-names>P.</given-names></name><name><surname>Shanbhag</surname><given-names>K.</given-names></name><name><surname>Foster</surname><given-names>I.</given-names></name><name><surname>Saltz</surname><given-names>J.</given-names></name></person-group> (<year>2008</year>). <article-title>caGrid 1.0: an enterprise Grid infrastructure for biomedical research</article-title>. <source>J. Am. Med. Inform. Assoc.</source><volume>15</volume>, <fpage>138</fpage>&#x02013;<lpage>149</lpage><pub-id pub-id-type="doi">10.1197/jamia.M2522</pub-id><pub-id pub-id-type="pmid">18096909</pub-id></citation></ref><ref id="B26"><citation citation-type="other"><person-group person-group-type="author"><name><surname>Ozsu</surname><given-names>T.</given-names></name><name><surname>Valduriez</surname><given-names>P.</given-names></name></person-group> (<year>1999</year>). <article-title>Principles of Distributed Database Systems</article-title>. Prentice Hall.</citation></ref><ref id="B27"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Poliakov</surname><given-names>A.</given-names></name><name><surname>Hertzenberrg</surname><given-names>X.</given-names></name><name><surname>Moore</surname><given-names>E. B.</given-names></name><name><surname>Corina</surname><given-names>D.</given-names></name><name><surname>Ojemann</surname><given-names>G. A.</given-names></name><name><surname>Brinkley</surname><given-names>J. F.</given-names></name></person-group> (<year>2007</year>). <article-title>Unobtrusive integration of data management with fMRI analysis</article-title>. <source>Neuroinformatics</source><volume>5</volume>, <fpage>3</fpage>&#x02013;<lpage>10</lpage><pub-id pub-id-type="pmid">17426350</pub-id></citation></ref><ref id="B28"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Re</surname><given-names>C.</given-names></name></person-group> (<year>2006</year>). <article-title>SilkRoute II &#x02013; Efficient relational publishing to XML</article-title>. 2006. Available at: <uri xlink:type="simple" xlink:href="http://silkroute.cs.washington.edu/">http://silkroute.cs.washington.edu/</uri></citation></ref><ref id="B29"><citation citation-type="other"><person-group person-group-type="author"><name><surname>Re</surname><given-names>C.</given-names></name><name><surname>Brinkley</surname><given-names>J.</given-names></name><name><surname>Hinshaw</surname><given-names>K.</given-names></name><name><surname>Suciu</surname><given-names>D.</given-names></name></person-group> (<year>2004</year>). <article-title>Distributed XQuery</article-title>. Proceedings of the Workshop on Information Integration on the Web (IIWeb), pp. <fpage>116</fpage>&#x02013;<lpage>121</lpage></citation></ref><ref id="B30"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Rosse</surname><given-names>C.</given-names></name><name><surname>Mejino</surname><given-names>J. L. V.</given-names></name></person-group> (<year>2003</year>). <article-title>A reference ontology for bioinformatics: the Foundational Model of Anatomy</article-title>. <source>J. Bioinform.</source><volume>36</volume>, <fpage>478</fpage>&#x02013;<lpage>500</lpage></citation></ref><ref id="B31"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Shaw</surname><given-names>M.</given-names></name><name><surname>Detwiler</surname><given-names>L. T.</given-names></name><name><surname>Brinkley</surname><given-names>J. F</given-names></name><name><surname>Suciu</surname><given-names>D.</given-names></name></person-group> (<year>2008</year>). <article-title>Generating application ontologies from reference ontologies</article-title>. <source>Proc. AMIA Annu. Fall Symp.</source><volume>2008</volume>, <fpage>672</fpage>&#x02013;<lpage>676</lpage></citation></ref><ref id="B32"><citation citation-type="web"><person-group person-group-type="author"><collab>Society for Neuroscience</collab></person-group> (<year>2008</year>). <article-title>Neuroscience Database Gateway</article-title>. 2008. Avaialable at: <uri xlink:type="simple" xlink:href="http://ndg.sfn.org/">http://ndg.sfn.org/</uri></citation></ref><ref id="B33"><citation citation-type="other"><person-group person-group-type="author"><name><surname>Stalder</surname><given-names>D. S.</given-names></name><name><surname>Brinkley</surname><given-names>J. F.</given-names></name></person-group> (<year>1999</year>). <article-title>The Digital Anatomist Foundational Model Server</article-title>. Monterey, Perl Conference 3.0.</citation></ref><ref id="B34"><citation citation-type="web"><person-group person-group-type="author"><collab>Structural Informatics Group</collab></person-group> (<year>2007a</year>). <article-title>DXQP &#x02013; Distributed XQuery Processor</article-title>. 2007. Available at: <uri xlink:type="simple" xlink:href="http://sig.biostr.washington.edu/projects/dxqp/">http://sig.biostr.washington.edu/projects/dxqp/</uri></citation></ref><ref id="B35"><citation citation-type="web"><person-group person-group-type="author"><collab>Structural Informatics Group</collab></person-group> (<year>2007b</year>). <article-title>WIX: Web Interface for XQuery</article-title>. 2007. Available at: <uri xlink:type="simple" xlink:href="http://sig.biostr.washington.edu/projects/wix/index.html">http://sig.biostr.washington.edu/projects/wix/index.html</uri></citation></ref><ref id="B36"><citation citation-type="web"><person-group person-group-type="author"><collab>Structural Informatics Group</collab></person-group> (<year>2008</year>). <article-title>DXBrain Demo Query</article-title>. 2007 Available at: <uri xlink:type="simple" xlink:href="http://sig.biostr.washington.edu/projects/dxbrain/demoquery.html">http://sig.biostr.washington.edu/projects/dxbrain/demoquery.html</uri></citation></ref><ref id="B37"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Van Essen</surname><given-names>D.</given-names></name></person-group> (<year>2008</year>). <article-title>SumsDB</article-title>. Available at: <uri xlink:type="simple" xlink:href="http://sumsdb.wustl.edu:8081/sums/dispatch.do?forward = index">http://sumsdb.wustl.edu:8081/sums/dispatch.do?forward = index</uri></citation></ref><ref id="B38"><citation citation-type="web"><person-group person-group-type="author"><collab>W3C</collab></person-group> (<year>2008</year>). <article-title>Simple Object Access Protocol (SOAP)</article-title>. Available at: <uri xlink:type="simple" xlink:href="http://www.w3.org/TR/soap/">http://www.w3.org/TR/soap/</uri></citation></ref><ref id="B39"><citation citation-type="web"><person-group person-group-type="author"><collab>Wellcome Department of Cognitive Neurology</collab></person-group> (<year>2001</year>). <article-title>Statistical Parametric Mapping</article-title>. Available at: <uri xlink:type="simple" xlink:href="http://www.fil.ion.ucl.ac.uk/spm/">http://www.fil.ion.ucl.ac.uk/spm/</uri></citation></ref><ref id="B40"><citation citation-type="web"><person-group person-group-type="author"><collab>World Wide Web Consortium</collab></person-group> (<year>2005a</year>). <article-title>Resource Description Framework (RDF)</article-title>. 2005. Available at: <uri xlink:type="simple" xlink:href="http://www.w3.org/RDF/">http://www.w3.org/RDF/</uri></citation></ref><ref id="B41"><citation citation-type="web"><person-group person-group-type="author"><collab>World Wide Web Consortium</collab></person-group> (<year>2005b</year>). <article-title>SparQL query language for RDF</article-title>. 2005. Available at: <uri xlink:type="simple" xlink:href="http://www.w3.org/TR/rdf-sparql-query/">http://www.w3.org/TR/rdf-sparql-query/</uri></citation></ref><ref id="B42"><citation citation-type="web"><person-group person-group-type="author"><collab>World Wide Web Consortium</collab></person-group> (<year>2005c</year>). <article-title>The OWL Web Ontology Language</article-title>. Available at: <uri xlink:type="simple" xlink:href="http://www.w3.org/TR/owl-features/">http://www.w3.org/TR/owl-features/</uri></citation></ref></ref-list></back></article>