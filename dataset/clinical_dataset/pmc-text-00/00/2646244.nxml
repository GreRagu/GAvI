<!DOCTYPE article PUBLIC "-//NLM//DTD Journal Archiving and Interchange DTD v2.3 20070202//EN" "archivearticle.dtd"><article xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article"><?properties open_access?><front><journal-meta><journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id><journal-title>BMC Bioinformatics</journal-title><issn pub-type="epub">1471-2105</issn><publisher><publisher-name>BioMed Central</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="pmid">19208192</article-id><article-id pub-id-type="pmc">2646244</article-id><article-id pub-id-type="publisher-id">1471-2105-10-S2-S4</article-id><article-id pub-id-type="doi">10.1186/1471-2105-10-S2-S4</article-id><article-categories><subj-group subj-group-type="heading"><subject>Proceedings</subject></subj-group></article-categories><title-group><article-title>Metadata mapping and reuse in caBIG&#x02122;</article-title></title-group><contrib-group><contrib id="A1" corresp="yes" contrib-type="author"><name><surname>Kunz</surname><given-names>Isaac</given-names></name><xref ref-type="aff" rid="I1">1</xref><xref ref-type="aff" rid="I2">2</xref><email>Isaac.Kunz@hci.utah.edu</email></contrib><contrib id="A2" contrib-type="author"><name><surname>Lin</surname><given-names>Ming-Chin</given-names></name><xref ref-type="aff" rid="I1">1</xref><email>Ming-Chin.Lin@hsc.utah.edu</email></contrib><contrib id="A3" contrib-type="author"><name><surname>Frey</surname><given-names>Lewis</given-names></name><xref ref-type="aff" rid="I1">1</xref><xref ref-type="aff" rid="I2">2</xref><email>Lewis.Frey@hsc.utah.edu</email></contrib></contrib-group><aff id="I1"><label>1</label>Department of Biomedical Informatics, School of Medicine, University of Utah, Salt Lake City, UT, USA</aff><aff id="I2"><label>2</label>Huntsman Cancer Institute, University of Utah, Salt Lake City, UT, USA</aff><pub-date pub-type="collection"><year>2009</year></pub-date><pub-date pub-type="epub"><day>5</day><month>2</month><year>2009</year></pub-date><volume>10</volume><issue>Suppl 2</issue><supplement><named-content content-type="supplement-title">Selected Proceedings of the First Summit on Translational Bioinformatics 2008</named-content><named-content content-type="supplement-editor">Atul J Butte, Indra Neil Sarkar, Marco Ramoni, Yves Lussier and Olga Troyanskaya</named-content></supplement><fpage>S4</fpage><lpage>S4</lpage><ext-link ext-link-type="uri" xlink:href="http://www.biomedcentral.com/1471-2105/10/S2/S4"/><permissions><copyright-statement>Copyright &#x000a9; 2009 Kunz et al; licensee BioMed Central Ltd.</copyright-statement><copyright-year>2009</copyright-year><copyright-holder>Kunz et al; licensee BioMed Central Ltd.</copyright-holder><license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/2.0"><p>This is an open access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/2.0"/>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</p><!--<rdf xmlns="http://web.resource.org/cc/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1" xmlns:dcterms="http://purl.org/dc/terms"><Work xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" rdf:about=""><license rdf:resource="http://creativecommons.org/licenses/by/2.0"/><dc:type rdf:resource="http://purl.org/dc/dcmitype/Text"/><dc:author>               Kunz               Isaac                                             Isaac.Kunz@hci.utah.edu            </dc:author><dc:title>            Metadata mapping and reuse in caBIG&#x02122;         </dc:title><dc:date>2009</dc:date><dcterms:bibliographicCitation>BMC Bioinformatics 10(Suppl 2): S4-. (2009)</dcterms:bibliographicCitation><dc:identifier type="sici">1471-2105(2009)10:Suppl 2&#x0003c;S4&#x0003e;</dc:identifier><dcterms:isPartOf>urn:ISSN:1471-2105</dcterms:isPartOf><License rdf:about="http://creativecommons.org/licenses/by/2.0"><permits rdf:resource="http://web.resource.org/cc/Reproduction" xmlns=""/><permits rdf:resource="http://web.resource.org/cc/Distribution" xmlns=""/><requires rdf:resource="http://web.resource.org/cc/Notice" xmlns=""/><requires rdf:resource="http://web.resource.org/cc/Attribution" xmlns=""/><permits rdf:resource="http://web.resource.org/cc/DerivativeWorks" xmlns=""/></License></Work></rdf>--></license></permissions><abstract><sec><title>Background</title><p>This paper proposes that interoperability across biomedical databases can be improved by utilizing a repository of Common Data Elements (CDEs), UML model class-attributes and simple lexical algorithms to facilitate the building domain models. This is examined in the context of an existing system, the National Cancer Institute (NCI)'s cancer Biomedical Informatics Grid (caBIG&#x02122;). The goal is to demonstrate the deployment of open source tools that can be used to effectively map models and enable the reuse of existing information objects and CDEs in the development of new models for translational research applications. This effort is intended to help developers reuse appropriate CDEs to enable interoperability of their systems when developing within the caBIG&#x02122; framework or other frameworks that use metadata repositories.</p></sec><sec><title>Results</title><p>The Dice (di-grams) and Dynamic algorithms are compared and both algorithms have similar performance matching UML model class-attributes to CDE class object-property pairs. With algorithms used, the baselines for automatically finding the matches are reasonable for the data models examined. It suggests that automatic mapping of UML models and CDEs is feasible within the caBIG&#x02122; framework and potentially any framework that uses a metadata repository.</p></sec><sec><title>Conclusion</title><p>This work opens up the possibility of using mapping algorithms to reduce cost and time required to map local data models to a reference data model such as those used within caBIG&#x02122;. This effort contributes to facilitating the development of interoperable systems within caBIG&#x02122; as well as other metadata frameworks. Such efforts are critical to address the need to develop systems to handle enormous amounts of diverse data that can be leveraged from new biomedical methodologies.</p></sec></abstract><conference><conf-date>10&#x02013;12 March 2008</conf-date><conf-name>The First Summit on Translational Bioinformatics 2008</conf-name><conf-loc>San Francisco, CA, USA</conf-loc></conference></article-meta></front><body><sec><title>Introduction</title><p>There is a data tsunami of genomic, imaging, proteomic and other high-throughput technologies that is converging upon the field of biomedical informatics. The task at hand is to integrate and synthesise this information into knowledge that can enhance our understanding of biological and clinical systems. The difficulties of channelling such large amounts of data into useful systems often result in sophisticated data structures and data models that strand users on isolated islands of information. Since these data models are created for specific needs at differing institutions, these data models can result in the generation of many heterogeneous data sources and are referred to as data silos [<xref ref-type="bibr" rid="B1">1</xref>-<xref ref-type="bibr" rid="B3">3</xref>]. These silos are collected, stored, managed, and analyzed using different conceptual representations of the same or similar underlying scientific domains. In essence the data tsunami engenders a multiplicity of tongues due to the creation of isolated islands of information.</p><p>Given the many data elements that bench and clinical researchers need to draw on: genomics data, clinical data, expression array data, SNP array data, proteomics data, and more yet to be created; the need for interoperable data sets and systems is becoming paramount. Organizations, researchers, clinicians and ultimately patients will benefit by better integration across data sets and systems [<xref ref-type="bibr" rid="B1">1</xref>]. The goal is to enable the interoperability of data and systems by joining data and analyses between organizations to increase the size of the data analyzed and the ease with which research can be replicated. The hope of such interoperable systems is that the speed and impact of the research will be increased.</p><p>The purpose of the research presented in this paper is to explore enhancing a metadata infrastructure, such as the National Cancer Institute (NCI)'s cancer Biomedical Informatics Grid (caBIG&#x02122;), with algorithms that facilitate the creation of interoperable systems. NCI's caBIG&#x02122; framework was selected because it utilizes a metadata repository and has terminology curators that work with developers to map models to Common Data Elements (CDEs) and to maintain the interoperability of the caBIG&#x02122; framework. Consequently, the algorithms' performance with mapping the models can be compared against the model mappings developed by experts.</p></sec><sec><title>Background</title><p>Many industry and research projects require some form of model mapping. Data from one clinic or research facility will not be readable by another unless they have the same data model or a method to translate between the two. The current process to allow such exchanges is costly and time consuming since it requires resources such as database specialists or knowledge engineers to communicate and manually map data elements from one facility to another or to a reference model. Currently this is done manually in a labor-intensive and error-prone process without tools to automate the process [<xref ref-type="bibr" rid="B4">4</xref>-<xref ref-type="bibr" rid="B6">6</xref>].</p><p>This problem promises to worsen in the future as biomedical data rapidly increase due to scientific advancements; particularly with the innovations made in genetic research and molecular biology. For example, UniProt, a universal protein resource that is referenced for many biomedical research projects, reports having to add many new terms and database cross-references [<xref ref-type="bibr" rid="B7">7</xref>]. This can result in frequent changes to its model. Another example of changing vocabulary is the NCI vocabulary services that are released monthly to keep information up to date [<xref ref-type="bibr" rid="B8">8</xref>]. Manual identification of equivalent model elements consumes time and resources, and may often be the rate-limiting technological step in integrating disparate data sources [<xref ref-type="bibr" rid="B9">9</xref>].</p><p>Mapping of models is also common in the area of controlled medical vocabularies. Several controlled medical vocabularies (CMVs) are currently available. However, they usually cover diverse domains with different scopes and objectives. The absence of an accepted "standard" method for representing medical concepts, and the need to translate clinical data to existent CMVs has made automated vocabulary mapping an active area of medical informatics research [<xref ref-type="bibr" rid="B10">10</xref>]. An accepted method is to map vocabularies to a reference terminology. This eliminates the combinatorial explosion of mappings that would be required otherwise [<xref ref-type="bibr" rid="B11">11</xref>]. While the use of a reference terminology is helpful in reducing the cost of mappings by reducing the number of mappings, it is still expensive to map a local model to a reference model. This requires the selection of appropriate metadata components called Common Data Elements (CDEs) that are equivalent between resources that are destined to interoperate.</p><sec><title>caBIG&#x02122;</title><p>caBIG&#x02122; <ext-link ext-link-type="uri" xlink:href="https://cabig.nci.nih.gov/"/> is designed as an open source infrastructure that connects resources to enable the sharing of data and tools for cancer research. The NCI launched caBIG&#x02122; in 2004 and it includes the development of standards, policies, common applications, and middleware infrastructure to enable more effective sharing of data and research tools. While caBIG&#x02122; is designed to provide the framework around use-cases in cancer research, this effort can benefit the entire biomedical informatics community where large-scale data integration becomes a necessity.</p><p>The systems developed in the caBIG&#x02122; initiative are constructed using a model driven architecture (MDA; <ext-link ext-link-type="uri" xlink:href="http://www.omg.org/mda/"/>). The MDA approach is used for the construction of well-specified application program interfaces (API) that the grid middleware [<xref ref-type="bibr" rid="B4">4</xref>,<xref ref-type="bibr" rid="B5">5</xref>] uses to pass semantically and syntactically meaningful data. All data transmitted by the grid is transformed to objects that are derived from models expressed in the Unified Modelling Language (UML) [<xref ref-type="bibr" rid="B12">12</xref>,<xref ref-type="bibr" rid="B13">13</xref>].</p><p>UML allows developers of resources such as data services and analytical services to describe their services in an abstract manner while constructing meaningful APIs that the grid middleware uses to pass data. UML modelling is used to specify the classes and attributes of the system (See Figure <xref ref-type="fig" rid="F1">1</xref>).</p><fig position="float" id="F1"><label>Figure 1</label><caption><p><bold>caBIG&#x02122; UML model</bold>. This is an example of a portion of a UML model of a system available in caBIG&#x02122;. The model describes the classes and attributes of the system and information about function and relationships. Note the class Race has attributes id (a string identifier of a race) and raceDesc (a string description of a race). This Race class is mapped to a CDE within caBIG&#x02122; to give a semantic definition and allow reuse of this type of data element.</p></caption><graphic xlink:href="1471-2105-10-S2-S4-1"/></fig><p>For systems to interoperate, it is necessary for these two components of the model (i.e., classes and attributes) to be harmonized with identical components in other models across the systems. This paper is examining using lexical matching algorithms to identify the classes and attributes that are common between domain models by mapping to a reference CDE repository.</p></sec><sec><title>Harmonization scaling problem</title><p>Currently developers go through a manual process of harmonizing new service elements (e.g., UML class-attributes) with those stored in the NCI's Cancer Data Standards Resource (caDSR; metadata repository) in order to achieve interoperability certification of a resource. The caDSR is NCI's implementation of the metadata standard ISO11179 which consists of metadata binding object classes and properties within a data element to controlled terminologies in NCI's Enterprise Vocabulary Service (EVS). Since the space of models within caBIG&#x02122; is complex and getting more complex (See Figure <xref ref-type="fig" rid="F2">2</xref> for a small subset of the space), the need for tooling to navigate the model space is urgent. In caBIG&#x02122;, UML models are bound to the components of a CDE with UML classes being bound to object classes, UML attributes being bound to properties and UML data types being bound to value domains (See Figure <xref ref-type="fig" rid="F3">3</xref>). Consequently, the process of mapping UML models to CDEs in the caDSR is arduous and currently requires an NCI curator (a trained terminologist who is familiar with the NCI model) to work one-on-one with the developer of the new data model to develop the mapping between the UML model class-attributes and the CDEs.</p><fig position="float" id="F2"><label>Figure 2</label><caption><p><bold>Visual representation of several caBIG&#x02122; UML models</bold>. An example of several UML models available in caBIG&#x02122; for reuse.</p></caption><graphic xlink:href="1471-2105-10-S2-S4-2"/></fig><fig position="float" id="F3"><label>Figure 3</label><caption><p><bold>UML and ISO/IEC11179</bold>. The mapping of UML elements to the ISO 11179 Common Data Elements (CDE) within the caDSR. UML Class maps to Object Class, UML Attribute to Property, and UML Data Type to Property. Object Class and Property components of the Data Element Concept are then mapped to Terminology concepts stored in EVS.</p></caption><graphic xlink:href="1471-2105-10-S2-S4-3"/></fig><p>A number of UML models have already gone through this manual mapping processes to CDEs. The difficulties of CDE mapping become even greater with the increasing amount of CDEs available within caDSR and the size of this space is getting larger with every caBIG&#x02122; data service or application that is developed.</p></sec><sec><title>Proposed solution to improve scalability</title><p>The goal is to mitigate the work involved in reusing CDEs through the reduction of the information an expert is required to examine in order to achieve interoperability and harmonization. In particular, this paper discusses a baseline comparison of two algorithms (di-grams and dynamic programming methodologies) used to map biomedical data models into caBIG&#x02122;'s CDE space. The question is how close simple lexical algorithms can get to the selection of the appropriate mappings.</p><p>The ability of the two algorithms to select the appropriate mapping is also compare across two conditions: Per Project and Combined Project. In practice, developers constrain their UML model comparisons to similar models. This restricted model comparison, referred to as the Per Project condition, restricts the matching of UML class/attribute pairs to the CDEs within the same model space. The Combined Project condition is searching the entire model space. These comparisons are used to explore the feasibility of deploying an open source tool that can be used to map models and enable the reuse of existing information objects and CDEs in the development of new models for translational research applications.</p></sec></sec><sec sec-type="methods"><title>Methods</title><p>In order to map the UML model class-attributes to CDEs, the UML models and the CDEs must be converted to a format that the lexical algorithms can process (Formatting Data Phase). After the data are formatted, data are submitted to each algorithm: Dice's coefficient with di-grams [<xref ref-type="bibr" rid="B14">14</xref>] and Dynamic programming using Smith-Waterman's algorithm [<xref ref-type="bibr" rid="B15">15</xref>] The algorithms produce similarity ratings that are used to find the best match between the UML model class-attributes to CDE class object-property pairs. To evaluate the goodness of the match, the algorithms' matches are compared to a "Gold Standard" &#x02013; the matches established through NCI caBIG&#x02122; curators. We compare application mappings already in use and currently stored as metadata in the caBIG&#x02122; infrastructure by extracting all application UML models and their corresponding CDEs.</p><sec><title>UML model class-attribute data</title><p>We tested the algorithms ability to map UML model class-attributes data available from 66 UML models (referred to as projects; see Table <xref ref-type="table" rid="T1">1</xref>) to CDE class object-property pairs. In addition, only caBIG&#x02122; CDEs that are considered "Released CDE" are used in the mapping. "Released CDEs" are CDEs that have gone through a series of reviews within caBIG&#x02122;.</p><table-wrap position="float" id="T1"><label>Table 1</label><caption><p>caBIG&#x02122; projects/application sizes &#x02013; 66 UML projects. caBIG&#x02122; enabled projects/models used in this research with their corresponding UML element size (class-attribute pairs)</p></caption><table frame="hsides" rules="groups"><thead><tr><td align="left"><italic>Project name</italic></td><td align="left"><italic>Size</italic></td></tr></thead><tbody><tr><td align="left">Bioconductor 1</td><td align="left">75</td></tr><tr><td align="left">BiospecimenCoreResource 1</td><td align="left">286</td></tr><tr><td align="left">BRIDG 1</td><td align="left">343</td></tr><tr><td align="left">C3PR 1.1</td><td align="left">58</td></tr><tr><td align="left">C3PR 2</td><td align="left">185</td></tr><tr><td align="left">CaAERS 1</td><td align="left">308</td></tr><tr><td align="left">CaArray 2</td><td align="left">440</td></tr><tr><td align="left">CaArray_1.1</td><td align="left">318</td></tr><tr><td align="left">caBIO 4</td><td align="left">302</td></tr><tr><td align="left">CaElmir 1</td><td align="left">174</td></tr><tr><td align="left">caFE Server 2</td><td align="left">80</td></tr><tr><td align="left">caGrid 1</td><td align="left">14</td></tr><tr><td align="left">caIntegrator 2</td><td align="left">271</td></tr><tr><td align="left">caIntegrator 2.1</td><td align="left">328</td></tr><tr><td align="left">Caisis 3.5</td><td align="left">67</td></tr><tr><td align="left">caNano 1</td><td align="left">150</td></tr><tr><td align="left">caNanoLab</td><td align="left">621</td></tr><tr><td align="left">Cancer Models Database 2.0</td><td align="left">242</td></tr><tr><td align="left">Cancer Models Database 2.1</td><td align="left">272</td></tr><tr><td align="left">Cancer Molecular Pages 1</td><td align="left">152</td></tr><tr><td align="left">CAP Cancer Checklists 1</td><td align="left">194</td></tr><tr><td align="left">caTIES 1.0</td><td align="left">38</td></tr><tr><td align="left">caTIES 2.0</td><td align="left">219</td></tr><tr><td align="left">caTISSUE CAE 1.2</td><td align="left">284</td></tr><tr><td align="left">caTISSUE Core 1</td><td align="left">287</td></tr><tr><td align="left">caTissue_Core 1.1</td><td align="left">327</td></tr><tr><td align="left">caTissue_Core_1_2</td><td align="left">329</td></tr><tr><td align="left">caTissue_Core_caArray 1</td><td align="left">329</td></tr><tr><td align="left">caTRIP Annotation Engine 1</td><td align="left">63</td></tr><tr><td align="left">CaTRIP Tumor Registry 1</td><td align="left">114</td></tr><tr><td align="left">CDC NCPHI Proof of Concept .1</td><td align="left">9</td></tr><tr><td align="left">CGWB 1</td><td align="left">91</td></tr><tr><td align="left">ChemBank 1</td><td align="left">19</td></tr><tr><td align="left">Clinical Trials Lab Model 1</td><td align="left">84</td></tr><tr><td align="left">Clinical Trials Object Data System (CTODS) .53</td><td align="left">434</td></tr><tr><td align="left">CoCaNUT 1</td><td align="left">244</td></tr><tr><td align="left">CTMS Metadata Project 1</td><td align="left">51</td></tr><tr><td align="left">DemoService 1</td><td align="left">4</td></tr><tr><td align="left">DSD 1</td><td align="left">31</td></tr><tr><td align="left">GeneConnect 1</td><td align="left">59</td></tr><tr><td align="left">GenePattern 1</td><td align="left">88</td></tr><tr><td align="left">Generic Image 1</td><td align="left">39</td></tr><tr><td align="left">Genomic Identifiers 1</td><td align="left">12</td></tr><tr><td align="left">geworkbench 1</td><td align="left">80</td></tr><tr><td align="left">GoMiner 1</td><td align="left">69</td></tr><tr><td align="left">Grid-enablement of Protein Information Resource (PIR) 1.1</td><td align="left">183</td></tr><tr><td align="left">Grid-enablement of Protein Information Resource (PIR) 1.2</td><td align="left">200</td></tr><tr><td align="left">LabKey CPAS Client API 2.1</td><td align="left">364</td></tr><tr><td align="left">LexBIG 2.2</td><td align="left">206</td></tr><tr><td align="left">MicroArray Gene Expression Object Model (Mage-OM) 1</td><td align="left">140</td></tr><tr><td align="left">NCI-60 Drug 1</td><td align="left">124</td></tr><tr><td align="left">NCI-60 SKY 1</td><td align="left">109</td></tr><tr><td align="left">NCIA_Model 3</td><td align="left">110</td></tr><tr><td align="left">NHLBI 1</td><td align="left">772</td></tr><tr><td align="left">Organism Identification 1</td><td align="left">10</td></tr><tr><td align="left">PathwayInteractionDatabase 1</td><td align="left">59</td></tr><tr><td align="left">Patient Study Calendar 2</td><td align="left">67</td></tr><tr><td align="left">Potential CDEs for Reuse 1</td><td align="left">185</td></tr><tr><td align="left">ProteomicsLIMS 1</td><td align="left">200</td></tr><tr><td align="left">Reactome Database Sharing 1</td><td align="left">83</td></tr><tr><td align="left">RProteomics 1</td><td align="left">40</td></tr><tr><td align="left">Seed 1</td><td align="left">17</td></tr><tr><td align="left">SNP500Cancer 1</td><td align="left">29</td></tr><tr><td align="left">TobaccoInformaticsGrid 1</td><td align="left">15</td></tr><tr><td align="left">Training Models 1</td><td align="left">37</td></tr><tr><td align="left">Transcription Annotation Prioritization and Screening System 1</td><td align="left">92</td></tr></tbody></table></table-wrap></sec><sec><title>Per project</title><p>Each of the 66 UML projects was mapped to a restricted collection of CDEs to which it uses (i.e., restricted to its own model space). This restriction of the search space to corresponding CDEs is reasonable since typically a developer will compare their UML models/projects with similar projects within caBIG&#x02122;. This condition can be viewed as a curator guided algorithm to mapping models. It is possible to reduce the curator guidance by building an ontology for the models/projects.</p></sec><sec><title>Combined project</title><p>Each of the 66 UML project was mapped to the combined set of all the CDEs in the 66 UML models. This condition is more computationally difficult (larger search space) and can be viewed as an automated approach to mapping models.</p></sec><sec><title>Matching UML model class-attributes to CDEs</title><p>For both algorithms, the process of matching UML model class-attributes to CDE class object-property pairs consists of two phases: formatting the data and mapping via similarity measures.</p></sec><sec><title>Formatting data phase</title><p>The formatting data phase extracts the UML class-attribute pair names and tokenizes them into text strings of words. UML classes and attributes are converted from programming notation to space delimited words. For example the UML attribute "raceDescription" would be converted to "race description."</p><p>Next the UMLS Lexical tools lvg2007 API is used to normalize the UML class attribute pairs and the Object Class Property pair of the CDE <ext-link ext-link-type="uri" xlink:href="http://lexsrv3.nlm.nih.gov/SPECIALIST/Projects/lvg/current/index.html"/>. The normalization process includes removal of genitives, replacement of punctuation with spaces, removal of stop words, lowercasing words, un-inflection of each word, and word order sorting. This formatting data process produces tokenized strings of UML class/attribute pairs that can be matched to their corresponding object class/property pairs (See Figure <xref ref-type="fig" rid="F3">3</xref>). Note that only names of the classes and attributes along with the names of the object classes and properties are used.</p></sec><sec><title>Mapping phase</title><p>The mapping phase is where Dynamic and Dice's algorithms are applied. The algorithms differ by the similarity measures. For each algorithm, the mapping consists of calculating all the similarity measures between the UML model class-attributes and the CDEs. The similarity scores are rank ordered with the highest similarity scores listed first as likely candidates for the mapping. This is listed on the graphs as percentage of correctly matched CDEs within a given ranking.</p></sec><sec><title>Dice algorithm</title><p>Dice's similarity coefficient is a similarity score to measure the lexical similarity [<xref ref-type="bibr" rid="B14">14</xref>]. This algorithm requires no knowledge about word formation or semantics and provides resilience to noise (such as abbreviations and misspellings) [<xref ref-type="bibr" rid="B10">10</xref>,<xref ref-type="bibr" rid="B15">15</xref>]. The algorithm breaks the strings into two letter pairs called di-grams (or N-grams where n equals 2) and then uses Dice's similarity coefficient as follows:</p><p>D<sub>fc </sub>= (M &#x000d7; 2) &#x000f7; (S + T) where:</p><p>M = number of common elements</p><p>S = number of elements from source</p><p>T = number of elements from target</p></sec><sec><title>Dynamic algorithm</title><p>The Dynamic algorithm is inspired by DNA-sequencing algorithms such as Smith-Waterman [<xref ref-type="bibr" rid="B15">15</xref>], a popular edit-distance algorithm. The power of the algorithm comes from its ability to account for gaps in strings where sequences of non-matching characters can be found. The process of comparing the similarity between two strings proceeds by creating a two dimensional matrix where the axes are the strings being compared. Scores are calculated by scanning through each row in the matrix and comparing the letter for the row against the letters in the string at the top of the columns of the matrix. The weighting method gives unique matching score (+8), mismatch score (-8), and gap penalty (-8). The point of the scoring process is to find consecutive sequence of similar substring within the strings being compared. This process is continued until all the scores are calculated in the matrix. Then the algorithms backtrack through the matrix to find a path with the highest score. This score is used to rank the similarity of the two strings.</p></sec><sec><title>"Gold standard"</title><p>The "Gold Standard" mappings have been constructed by NCI curators who have created and validated mappings between UML models and CDEs. These existing mappings, serving as our "Gold Standard," are stored in the caDSR and are publicly available for download through the UML Model Browser or by programmatic access via the caDSR API. The caDSR API allows runtime access to metadata, the UML models, and their corresponding mappings to CDEs. This API can be found as part of the caCORE SDK and is publicly available [<xref ref-type="bibr" rid="B16">16</xref>].</p></sec></sec><sec><title>Results</title><p>The comparisons of the Dice and Dynamic algorithms to the "Gold Standard" are made by plotting the percentage of correct "Gold Standard" matches for each CDE provided by the algorithms. The graphs depicted in Figures <xref ref-type="fig" rid="F4">4</xref>, <xref ref-type="fig" rid="F5">5</xref> are accumulative functions in which the first point corresponds to the percentage of correct matches (e.g., 60%) for a single CDE and the second point corresponds to the total percentage of matches for both the first and second CDE and so forth.</p><fig position="float" id="F4"><label>Figure 4</label><caption><p><bold>Per project dice vs dynamic</bold>. Total percentage of "Gold Standard" matches per cumulative rank per project</p></caption><graphic xlink:href="1471-2105-10-S2-S4-4"/></fig><fig position="float" id="F5"><label>Figure 5</label><caption><p><bold>Combined project dice vs dynamic</bold>. Total percentage of "Gold Standard" matches per cumulative rank for all "RELEASED" CDEs.</p></caption><graphic xlink:href="1471-2105-10-S2-S4-5"/></fig><sec><title>Per project</title><p>Table <xref ref-type="table" rid="T2">2</xref> highlights the percentage of correct "Gold Standard" matches for the Per Project ranking of the Dice and Dynamic algorithms. The Per Project condition only ranks the UML class/attribute pairs against the CDE class object/property pairs within the project. The percent of correct "Gold Standard" matches that occurred in the top rank were 58.2% and 56.3% for the Dice and Dynamic algorithms, respectively. Within the top five ranked matches, 85.1% and 82.6% correctly matched the "Gold Standard" for the Dice and Dynamic algorithms, respectively. The percentages are cumulative and will eventually reach a 100% when all the correct "Gold Standard" matches are within the ranking set. Figure <xref ref-type="fig" rid="F4">4</xref> provides the graph of the average percentages for the Per Project condition for all the ranks of the Dice and Dynamic algorithms. As displayed in the figure the results of both algorithms are comparable.</p><table-wrap position="float" id="T2"><label>Table 2</label><caption><p>Per project percentages. Percentage of "Gold Standard" mappings correct in cumulative rankings. For example Dice had 85.1% of the "Gold Standard" mappings returned in the top 5 results.</p></caption><table frame="hsides" rules="groups"><thead><tr><td align="left"><bold>Algorithm</bold></td><td align="left"><bold>Rank 1</bold></td><td align="left"><bold>Rank 5</bold></td><td align="left"><bold>Rank 10</bold></td><td align="left"><bold>Rank 25</bold></td><td align="left"><bold>Rank 50</bold></td></tr></thead><tbody><tr><td align="left">Dice</td><td align="left">58.4</td><td align="left">85.1</td><td align="left">91.8</td><td align="left">96.6</td><td align="left">98.3</td></tr><tr><td align="left">Dynamic</td><td align="left">56.3</td><td align="left">82.6</td><td align="left">89.5</td><td align="left">95.4</td><td align="left">97.8</td></tr></tbody></table></table-wrap></sec><sec><title>Combined project</title><p>Table <xref ref-type="table" rid="T3">3</xref> highlights the percentage of correct "Gold Standard" matches for the Combined Project condition of the Dice and Dynamic algorithms. The Combined Project condition ranks the UML model class-attribute pairs and CDE class object-property pairs for all projects listed in Table <xref ref-type="table" rid="T1">1</xref>. The top rank of the Dice algorithm reaches 45.1% and the Dynamic algorithm reaches 47.6% of the "Gold Standard" correct matches. In the top five ranked matches, 72.1% for the Dice algorithm are correct "Gold Standard" matches while 70.9% for the Dynamic algorithm are correct "Gold Standard" matches. Both algorithms increase to 100% at a slower rate than the Per Project condition. Figure <xref ref-type="fig" rid="F5">5</xref> provides the graph of the average percent correct across the Combined Project comparison for all the ranks of the Dice and Dynamic algorithms. As seen from the figure the results of both algorithms are comparable. The cumulative average of Figure <xref ref-type="fig" rid="F5">5</xref> does not rise as quickly as the per project cumulative average in Figure <xref ref-type="fig" rid="F4">4</xref>.</p><table-wrap position="float" id="T3"><label>Table 3</label><caption><p>Combined project percentages. Percentage of "Gold Standard" mappings correct in cumulative rankings. For example Dice had 72.1% of the "Gold Standard" mappings returned in the top 5 results.</p></caption><table frame="hsides" rules="groups"><thead><tr><td align="left"><bold>Algorithm</bold></td><td align="left"><bold>Rank 1</bold></td><td align="left"><bold>Rank 5</bold></td><td align="left"><bold>Rank 10</bold></td><td align="left"><bold>Rank 25</bold></td><td align="left"><bold>Rank 50</bold></td></tr></thead><tbody><tr><td align="left">Dice</td><td align="left">45.1</td><td align="left">72.1</td><td align="left">79.5</td><td align="left">86.1</td><td align="left">90.2</td></tr><tr><td align="left">Dynamic</td><td align="left">47.6</td><td align="left">70.9</td><td align="left">78.6</td><td align="left">85.3</td><td align="left">89.6</td></tr></tbody></table></table-wrap><p>Figure <xref ref-type="fig" rid="F6">6</xref> offers a detailed look at the 20 of the 66 projects in how they perform individually for the Dice algorithm in the Per Project condition.</p><fig position="float" id="F6"><label>Figure 6</label><caption><p><bold>Dice per project</bold>. This graph shows 20 of the 66 projects mapped to a restricted set of CDEs using the Dice algorithm. Restriction is made by only mapping to corresponding CDEs as indicated in caDSR.</p></caption><graphic xlink:href="1471-2105-10-S2-S4-6"/></fig></sec></sec><sec><title>Discussion</title><p>Notice the graphs start with a high percentage of "Gold Standard" matches within the first 5 returned results. This suggests that developers can use the results to help find an appropriate CDE using these automated methods. The class-attribute pairs of the UML models that were analyzed are highly similar to the EVS class-property pairs demonstrating that this could be a valid and effective approach and that mapping of different but similar model types (UML vs. CDE) is feasible.</p><p>Figures <xref ref-type="fig" rid="F4">4</xref> and <xref ref-type="fig" rid="F5">5</xref> illustrate this in terms of the 80-20 rule, where 80% of the gold standard CDE matches are in the top 4 or 5 ranked matches for the Dice and Dynamic algorithm respectively. This would be equivalent of a Google search returning the correct link(s) 80% of the time in the top 4 or 5 listed links. Since currently searching for CDEs to reuse is very labor intensive this can reduce roughly 80% of that work simply by matching developer models against the correct project. Since developers are aware of the domain they are developing systems within, it is reasonable to expect them to compare proteomic models against other proteomic models in the repository (i.e., Per Project comparison) instead of comparing them against tissue banking models or the entire set of models (i.e., Combine Project comparison).</p><p>Comparing against the combined models space, the performance of the algorithms degrade somewhat. Given the simple nature of the lexical matching algorithms, they perform relatively well in the Combined Project condition. Still the results suggest that a tool to help the developers navigate the model space would facilitate identifying a higher number of correct matches. The findings from the Combined Project comparison point to the need for an ontological space of models. This will help the developer navigate the space in order to identify the correct model to compare his or her UML class/attributes against or one that algorithms could utilize to constrain the comparison space.</p><p>Both Dice and Dynamic algorithms have their own strengths. Dice is relatively simple and not as computationally intensive as dynamic programming. Dynamic programming requires tuning of the scoring variables such as gap scores and adjusting the gap penalty for large gaps in the strings where mismatches are found. It is capable of using longer sequences compared to di-grams; although for this task this feature does not appear to be necessary.</p><sec><title>Caveats</title><p>A look at the datasets in Figure <xref ref-type="fig" rid="F6">6</xref> shows that some UML model mappings performed better than others. As an example we look at caTissue CORE, caArray and Proteomics LIMS, with 329 and 200 UML class-attribute pairs respectively because they are similar in size with acceptable but differing mapping performances. caTissue has 96 percent of the correct matches returned within the top 5 ranks while ProtLIMS has 85 percent (see Table <xref ref-type="table" rid="T4">4</xref>). By looking at the mappings that performed poorly we can improve our algorithms as well as create guidelines for improving automated mapping.</p><table-wrap position="float" id="T4"><label>Table 4</label><caption><p>Dice caTissue CORE caArray and proteomics LIMS. caTissue CORE caArray and Proteomics LIMS percentage of "Gold Standard" mappings correct in cumulative rankings. Differences in mapping scores illustrate various levels of UML class-attribute alignments with CDE class-properties.</p></caption><table frame="hsides" rules="groups"><thead><tr><td align="left"><bold>Project Name</bold></td><td align="left"><bold>Rank 1</bold></td><td align="left"><bold>Rank 5</bold></td><td align="left"><bold>Rank 10</bold></td><td align="left"><bold>Rank 25</bold></td><td align="left"><bold>Rank 50</bold></td></tr></thead><tbody><tr><td align="left">CaTissue_Core_caArray</td><td align="left">77.2</td><td align="left"><bold>96.0</bold></td><td align="left">98.5</td><td align="left">99.7</td><td align="left">99.7</td></tr><tr><td align="left">ProteomicsLIMS</td><td align="left">62</td><td align="left"><bold>85</bold></td><td align="left">91.5</td><td align="left">95</td><td align="left">97.5</td></tr></tbody></table></table-wrap><p>The Dice algorithm did have difficulty with some of the matches. Table <xref ref-type="table" rid="T5">5</xref> shows a comparison of the UML class-attribute and its corresponding "Gold Standard" mapping for caTissue CORE caArray and Proteomics LIMS. These two were chosen to compare because their similarity in size. Mapping performance of our implementation of the Dice algorithm appears to be reduced when abbreviations and synonyms are used. For example Protlims mapping of the UML class-attribute "Sample.label" is pre-processed and converted to "label sample" while the CDE class-property "Specimen Tracer" (short name 2519354v1.0:2178533v1.0) is formatted and converted to "specimen tracer". The current implementation of the Dice algorithm doesn't score this true mapping well when it should have the highest mapping score. The reason for this poor performance appears to be due to the inability to resolve synonyms and determine that specimen and sample are actually the same and that a tracer refers to a label. Another challenge illustrated in Table <xref ref-type="table" rid="T5">5</xref> is difficulty in resolving abbreviations involving numbers. The Dice algorithm is unable to resolve the similarity between "gel2d id sample" to "2 dimensional electrophoresis gel identifier". The gel2d word is not broken down into three separate words as it should. Also from Table <xref ref-type="table" rid="T5">5</xref> we see in places where words are duplicated exacerbating the effects of the algorithms inability to resolve synonyms. Protlims mapping of the UML class-attribute SampleType.sampleTypeId is pre-processed and converted to "id sample sample type type" while the CDE class-property Type Specimen Identifier (short name 2422846v1.0:2178534v1.0) is pre-processed and converted to "identifier specimen type".</p><table-wrap position="float" id="T5"><label>Table 5</label><caption><p>Difficult matches. caTissue and ProtLIMS UML class-attribute compared to CDE class-property pairs are shown here where the dice algorithm scored lower than expected. Reduced performance of the algorithms tends to occur when abbreviations and synonyms appear. For example ProtLIMS gel2d is used in UML to represent 2 dimensional electrophoresis gel.</p></caption><table frame="hsides" rules="groups"><tbody><tr><td align="left" colspan="2"><bold>caTISSUE CORE caArray (size 329)</bold></td><td align="left" colspan="2"><bold>ProteomicsLIMS (size 200)</bold></td></tr><tr><td colspan="2"><hr></hr></td><td colspan="2"><hr></hr></td></tr><tr><td align="left"><bold>UML</bold></td><td align="left"><bold>CDE</bold></td><td align="left"><bold>UML</bold></td><td align="left"><bold>CDE</bold></td></tr><tr><td colspan="2"><hr></hr></td><td colspan="2"><hr></hr></td></tr><tr><td align="left">distribute id item</td><td align="left">distribution identifier specimen</td><td align="left">label sample</td><td align="left">specimen tracer</td></tr><tr><td align="left">biohazard id</td><td align="left">biohazardous identifier substance</td><td align="left">identification sample</td><td align="left">name specimen</td></tr><tr><td align="left">csm id user user</td><td align="left">common identifier module security user user</td><td align="left">gel2d id sample</td><td align="left">2 dimensional electrophoresis gel identifier</td></tr><tr><td align="left">id site</td><td align="left">identifier site</td><td align="left">id plate plate sample sample</td><td align="left">identifier microplate</td></tr><tr><td align="left">check check event id out parameter</td><td align="left">identifier object parameter present remove status</td><td align="left">gel2d identification</td><td align="left">2 dimensional electrophoresis gel name</td></tr><tr><td align="left">numb participant security social</td><td align="left">participant ssn</td><td align="left">id log log sample sample</td><td align="left">identifier log quantity specimen</td></tr><tr><td align="left">container id storage</td><td align="left">identifier storage unit</td><td align="left">file file id lim lim</td><td align="left">file identifier information laboratory management system</td></tr><tr><td align="left">audit event id user</td><td align="left">audit event login name</td><td align="left">id sample sample type type</td><td align="left">identifier specimen type</td></tr><tr><td align="left">date start user</td><td align="left">begin date user</td><td align="left">id raw sample sample</td><td align="left">identifier raw specimen</td></tr></tbody></table></table-wrap><p>With adjustments it is likely we will improve both the algorithms' performance. Adjustments could be made to the parameters of each algorithm as well as modifying normalization techniques. Normalization techniques can hurt or help each algorithm depending upon the properties of each model such as duplicate words and which stop words to remove. We chose to go with the default normalization method used in the UMLS API. While both algorithms have similar performance dynamic programming is considerably more computationally intensive, requiring more memory and time to execute, and therefore we would recommend using the faster method of Dice over Dynamic when comparing only names.</p><p>The results show that names of UML class-attributes match well with CDE class-properties. It is possible that this is an artifact of the mapping process between the UML models and the EVS concepts. Due to the process and difficulty of the manual mapping the developers may have named their UML elements similar to the EVS concepts.</p><p>We have shown the possibility of approaching this problem of mapping UML using lexical algorithms. Given the simplicity of the approach taken, the number of matches is surprising. The mapping results suggest that the mapping processes could at least be partially automated. Developers could iteratively identify reusable CDEs and correctly identify around 80% with relatively small ranked sets when reducing the search space of CDEs choosing a similar model space to work in. This would be an improvement over the current manual mapping process.</p><p>Verification will still be need to be part of the caBIG&#x02122; review process to ensure accurate mapping but this type of mapping tool could be used by developers as well as by reviewers to hasten the process. While this leads to a mapping process that is not entirely automated, researchers such as Sheth and Larson have assumed that automated mapping is not accurate enough to be used un-supervised by a human[<xref ref-type="bibr" rid="B17">17</xref>]. Thus, a tool that facilitates mapping UML models to CDEs is a realistic approach to mapping models in the biomedical informatics domain.</p></sec></sec><sec><title>Future work</title><p>We believe that applying semantic techniques to this problem will further enhance the usefulness of this type of mapping tool as indicated by other mapping efforts [<xref ref-type="bibr" rid="B4">4</xref>-<xref ref-type="bibr" rid="B6">6</xref>,<xref ref-type="bibr" rid="B9">9</xref>,<xref ref-type="bibr" rid="B18">18</xref>-<xref ref-type="bibr" rid="B20">20</xref>]. Future goals are to include semantic mapping tools of UMLS. UMLS have tools that can analyze text and return UMLS concepts. We plan to map UML model descriptions and names into UMLS concepts and then use the mapping stored in EVS to convert to EVS concepts. These concepts will be used to search the EVS for CDEs that contain them and then returned to the user as candidates. The challenge of mapping two models is commonly addressed by lexical methods, logical methods[<xref ref-type="bibr" rid="B4">4</xref>], and a hybrid of both [<xref ref-type="bibr" rid="B20">20</xref>,<xref ref-type="bibr" rid="B21">21</xref>].</p><p>The Dynamic scoring method performs well in our preliminary investigation, but it can potentially be improved by creating a substitution matrix for assigning different mismatch scores according to different substitution or assigning less of a penalty score when having continuous gaps.</p><p>The long-term goal of this research is to produce an open source tool that has a broad application for mapping ontologies, data models, and/or terminologies. This tool will implement the current state of the art mapping algorithms. In addition to developing this tool for comparing current mapping algorithms it will serve as at test bed for the development of new algorithms or hybrid algorithms that combine the techniques.</p></sec><sec><title>Conclusion</title><p>This effort contributes to the creation of interoperable systems within caBIG&#x02122; and other similar frameworks. The Dice and Dynamic algorithms are compared and both algorithms have similar performance. Results of this study demonstrate that the names of the UML elements (class name and attribute name) can be used effectively to map to existing CDEs. The lexical matching algorithms can facilitate the reuse of CDEs and reduce the work that needs to be done by a curator to identify pre-existing CDEs that match developers UML class/attribute pairs. It suggests that automatic mapping of UML models and CDEs are feasible within caBIG&#x02122; as well as other metadata frameworks.</p></sec><sec><title>Competing interests</title><p>This work was funded in part by the NCI caBIG&#x02122; initiative for which LF is the PI at the University of Utah Huntsman Cancer Institute. LF receives funding from the NCI to participate in the following caBIG&#x02122; workgroups: Vocabulary and Common Data Elements (VDCE), Population Science (PopSci) and Documentation and Training. LF is also funded to serve as a VCDE guide to mentors. LF has used some of this funding to pay IK as a graduate research assistant.</p></sec><sec><title>Authors' contributions</title><p>LF came up with the concept and design of the approach taken for mapping metadata. IK implemented the algorithms and collected data. IK drafted the manuscript, created tables and figures and participated in the revision. ML contributed the implementation and tuning of the dynamic algorithms. LF, ML, IK made many contributions to the analysis of the data and interpretation of the results. All authors read and approved the final manuscript.</p></sec></body><back><ack><sec><title>Acknowledgements</title><p>This article has been published as part of <italic>BMC Bioinformatics </italic>Volume 10 Supplement 2, 2009: Selected Proceedings of the First Summit on Translational Bioinformatics 2008. The full contents of the supplement are available online at <ext-link ext-link-type="uri" xlink:href="http://www.biomedcentral.com/1471-2105/10?issue=S2"/>.</p></sec></ack><ref-list><ref id="B1"><citation citation-type="other"><person-group person-group-type="author"><name><surname>Frey</surname><given-names>LJ</given-names></name><name><surname>Maojo</surname><given-names>V</given-names></name><name><surname>Mitchell</surname><given-names>JA</given-names></name></person-group><article-title>Bioinformatics Linkage of Heterogeneous Clinical and Genomic Information in Support of Personalized Medicine</article-title><source>IMIA Yearbook of Medical Informatics</source><year>2007</year><fpage>159</fpage><lpage>166</lpage></citation></ref><ref id="B2"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Frey</surname><given-names>LJ</given-names></name><name><surname>Maojo</surname><given-names>V</given-names></name><name><surname>Mitchell</surname><given-names>JA</given-names></name></person-group><article-title>Genome Sequencing: a Complex Path to Personalized Medicine</article-title><source>Advances in Genome Sequencing Technology and Algorithms</source><year>2007</year><publisher-name>Artech House Publishers I</publisher-name><fpage>51</fpage><lpage>73</lpage></citation></ref><ref id="B3"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Buetow</surname><given-names>KH</given-names></name></person-group><article-title>Cyberinfrastructure: Empowering a "Third Way" in Biomedical Research</article-title><source>Science</source><year>2005</year><volume>308</volume><fpage>821</fpage><lpage>824</lpage><pub-id pub-id-type="pmid">15879210</pub-id><pub-id pub-id-type="doi">10.1126/science.1112120</pub-id></citation></ref><ref id="B4"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Dolin</surname><given-names>RH</given-names></name><name><surname>Huff</surname><given-names>SM</given-names></name><name><surname>Rocha</surname><given-names>RA</given-names></name><name><surname>Spackman</surname><given-names>KA</given-names></name><name><surname>Campbell</surname><given-names>KE</given-names></name></person-group><article-title>Evaluation of a "lexically assign, logically refine" strategy for semi-automated integration of overlapping terminologies</article-title><source>J Am Med Inform Assoc</source><year>1998</year><volume>5</volume><fpage>203</fpage><lpage>213</lpage><pub-id pub-id-type="pmid">9524353</pub-id></citation></ref><ref id="B5"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Noy</surname><given-names>N</given-names></name></person-group><person-group person-group-type="editor"><name><surname>Staab S, Studer R</surname></name></person-group><article-title>Tools for mapping and merging ontologies</article-title><source>Handbook on Ontologies</source><year>2004</year><fpage>365</fpage><lpage>384</lpage></citation></ref><ref id="B6"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Noy</surname><given-names>NF</given-names></name><name><surname>Musen</surname><given-names>MA</given-names></name></person-group><article-title>PROMPT: Algorithm and Tool for Automated Ontology Merging and Alignment</article-title><source>Proceedings of the Seventeenth National Conference on Artificial Intelligence and Twelfth Conference on Innovative Applications of Artificial Intelligence</source><year>2000</year><publisher-name>AAAI Press/The MIT Press</publisher-name></citation></ref><ref id="B7"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Wu</surname><given-names>CH</given-names></name><name><surname>Apweiler</surname><given-names>R</given-names></name><name><surname>Bairoch</surname><given-names>A</given-names></name><name><surname>Natale</surname><given-names>DA</given-names></name><name><surname>Barker</surname><given-names>WC</given-names></name><name><surname>Boeckmann</surname><given-names>B</given-names></name><name><surname>Ferro</surname><given-names>S</given-names></name><name><surname>Gasteiger</surname><given-names>E</given-names></name><name><surname>Huang</surname><given-names>H</given-names></name><name><surname>Lopez</surname><given-names>R</given-names></name><etal></etal></person-group><article-title>The Universal Protein Resource (UniProt): an expanding universe of protein information</article-title><source>Nucl Acids Res</source><year>2006</year><volume>34</volume><fpage>D187</fpage><lpage>191</lpage><pub-id pub-id-type="pmid">16381842</pub-id><pub-id pub-id-type="doi">10.1093/nar/gkj161</pub-id></citation></ref><ref id="B8"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Golbeck</surname><given-names>J</given-names></name><name><surname>Fragoso</surname><given-names>G</given-names></name><name><surname>Hartel</surname><given-names>F</given-names></name><name><surname>Hendler</surname><given-names>J</given-names></name><name><surname>Parsia</surname><given-names>B</given-names></name><name><surname>Oberthaler</surname><given-names>J</given-names></name></person-group><article-title>The national cancer institute's thesaurus and ontology</article-title><source>Journal of Web Semantics</source><year>2003</year><volume>1</volume><fpage>75</fpage><lpage>80</lpage></citation></ref><ref id="B9"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Sun</surname><given-names>Y</given-names></name></person-group><article-title>Methods for automated concept mapping between medical databases</article-title><source>J Biomed Inform</source><year>2004</year><volume>37</volume><fpage>162</fpage><lpage>178</lpage><pub-id pub-id-type="pmid">15196481</pub-id><pub-id pub-id-type="doi">10.1016/j.jbi.2004.03.003</pub-id></citation></ref><ref id="B10"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Rocha</surname><given-names>RA</given-names></name><name><surname>Huff</surname><given-names>SM</given-names></name></person-group><article-title>Using digrams to map controlled medical vocabularies</article-title><source>Proc Annu Symp Comput Appl Med Care</source><year>1994</year><fpage>172</fpage><lpage>176</lpage><pub-id pub-id-type="pmid">7949914</pub-id></citation></ref><ref id="B11"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Spackman</surname><given-names>KA</given-names></name><name><surname>Campbell</surname><given-names>KE</given-names></name><name><surname>Cote</surname><given-names>RA</given-names></name></person-group><article-title>SNOMED RT: a reference terminology for health care</article-title><source>Proc AMIA Annu Fall Symp</source><year>1997</year><fpage>640</fpage><lpage>644</lpage><pub-id pub-id-type="pmid">9357704</pub-id></citation></ref><ref id="B12"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Oster</surname><given-names>S</given-names></name><name><surname>Langella</surname><given-names>S</given-names></name><name><surname>Hastings</surname><given-names>S</given-names></name><name><surname>Ervin</surname><given-names>D</given-names></name><name><surname>Madduri</surname><given-names>R</given-names></name><name><surname>Phillips</surname><given-names>J</given-names></name><name><surname>Kurc</surname><given-names>T</given-names></name><name><surname>Siebenlist</surname><given-names>F</given-names></name><name><surname>Covitz</surname><given-names>P</given-names></name><name><surname>Shanbhag</surname><given-names>K</given-names></name><etal></etal></person-group><article-title>caGrid 1.0: An Enterprise Grid Infrastructure for Biomedical Research</article-title><source>J Am Med Inform Assoc</source><year>2008</year><volume>15</volume><fpage>138</fpage><lpage>149</lpage><pub-id pub-id-type="pmid">18096909</pub-id><pub-id pub-id-type="doi">10.1197/jamia.M2522</pub-id></citation></ref><ref id="B13"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Saltz</surname><given-names>J</given-names></name><name><surname>Oster</surname><given-names>S</given-names></name><name><surname>Hastings</surname><given-names>S</given-names></name><name><surname>Langella</surname><given-names>S</given-names></name><name><surname>Kurc</surname><given-names>T</given-names></name><name><surname>Sanchez</surname><given-names>W</given-names></name><name><surname>Kher</surname><given-names>M</given-names></name><name><surname>Manisundaram</surname><given-names>A</given-names></name><name><surname>Shanbhag</surname><given-names>K</given-names></name><name><surname>Covitz</surname><given-names>P</given-names></name></person-group><article-title>caGrid: design and implementation of the core architecture of the cancer biomedical informatics grid</article-title><source>Bioinformatics</source><year>2006</year><volume>22</volume><fpage>1910</fpage><lpage>1916</lpage><pub-id pub-id-type="pmid">16766552</pub-id><pub-id pub-id-type="doi">10.1093/bioinformatics/btl272</pub-id></citation></ref><ref id="B14"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Frakes</surname><given-names>WB</given-names></name><name><surname>Baeza-Yates</surname><given-names>R</given-names></name></person-group><source>Information retrieval: Data Structures &#x00026; Algorithms</source><year>1992</year><publisher-name>Englewood Cliffs: Prentice Hall</publisher-name></citation></ref><ref id="B15"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Rijsbergen</surname><given-names>CJv</given-names></name></person-group><source>Information Retrieval</source><year>1979</year><publisher-name>London: Butterworths</publisher-name></citation></ref><ref id="B16"><citation citation-type="other"><article-title>caCORE SDK</article-title><ext-link ext-link-type="uri" xlink:href="http://ncicb.nci.nih.gov/NCICB/infrastructure/cacore_overview"/></citation></ref><ref id="B17"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Sheth</surname><given-names>AaLJ</given-names></name></person-group><article-title>Federated database systems for managing distributed, heterogeneous, and autonomous databases</article-title><source>ACM Computing Surveys</source><year>1990</year><volume>22</volume><fpage>183</fpage><lpage>230</lpage><pub-id pub-id-type="doi">10.1145/96602.96604</pub-id></citation></ref><ref id="B18"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Doan</surname><given-names>A</given-names></name><name><surname>Madhavan</surname><given-names>J</given-names></name><name><surname>Domingos</surname><given-names>P</given-names></name><name><surname>Halevy</surname><given-names>A</given-names></name></person-group><person-group person-group-type="editor"><name><surname>Staab S, Studer R</surname></name></person-group><article-title>Ontology Matching: A Machine Learning Approach</article-title><source>Handbook on Ontologies</source><year>2004</year><fpage>385</fpage><lpage>403</lpage></citation></ref><ref id="B19"><citation citation-type="other"><person-group person-group-type="author"><name><surname>Fung</surname><given-names>KW</given-names></name><name><surname>Bodenreider</surname><given-names>O</given-names></name><name><surname>Aronson</surname><given-names>AR</given-names></name><name><surname>Hole</surname><given-names>WT</given-names></name><name><surname>Srinivasan</surname><given-names>S</given-names></name></person-group><article-title>Combining Lexical and Semantic Methods of Inter-terminology Mapping Using the UMLS</article-title><source>MedInfo</source><year>2007</year><fpage>605</fpage><lpage>609</lpage></citation></ref><ref id="B20"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Nachimuthu</surname><given-names>SK</given-names></name><name><surname>Lau</surname><given-names>LM</given-names></name></person-group><article-title>Applying hybrid algorithms for text matching to automated biomedical vocabulary mapping</article-title><source>AMIA Annu Symp Proc</source><year>2005</year><fpage>555</fpage><lpage>559</lpage><pub-id pub-id-type="pmid">16779101</pub-id></citation></ref><ref id="B21"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Nachimuthu</surname><given-names>SK</given-names></name><name><surname>Woolstenhulme</surname><given-names>RD</given-names></name></person-group><article-title>Generalizability of hybrid search algorithms to map multiple biomedical vocabulary domains</article-title><source>AMIA Annu Symp Proc</source><year>2006</year><fpage>1042</fpage><pub-id pub-id-type="pmid">17238661</pub-id></citation></ref></ref-list></back></article>