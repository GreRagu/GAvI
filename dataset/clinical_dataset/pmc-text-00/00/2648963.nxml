<!DOCTYPE article PUBLIC "-//NLM//DTD Journal Archiving and Interchange DTD v2.3 20070202//EN" "archivearticle.dtd"><article xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article"><?properties open_access?><front><journal-meta><journal-id journal-id-type="nlm-ta">Chem Cent J</journal-id><journal-title>Chemistry Central Journal</journal-title><issn pub-type="epub">1752-153X</issn><publisher><publisher-name>BioMed Central</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="pmid">19196483</article-id><article-id pub-id-type="pmc">2648963</article-id><article-id pub-id-type="publisher-id">1752-153X-3-4</article-id><article-id pub-id-type="doi">10.1186/1752-153X-3-4</article-id><article-categories><subj-group subj-group-type="heading"><subject>Methodology</subject></subj-group></article-categories><title-group><article-title>Automated extraction of chemical structure information from digital raster images</article-title></title-group><contrib-group><contrib id="A1" contrib-type="author"><name><surname>Park</surname><given-names>Jungkap</given-names></name><xref ref-type="aff" rid="I1">1</xref><xref ref-type="aff" rid="I2">2</xref><email>jungkap@umich.edu</email></contrib><contrib id="A2" contrib-type="author"><name><surname>Rosania</surname><given-names>Gus R</given-names></name><xref ref-type="aff" rid="I1">1</xref><xref ref-type="aff" rid="I3">3</xref><email>grosania@umich.edu</email></contrib><contrib id="A3" contrib-type="author"><name><surname>Shedden</surname><given-names>Kerby A</given-names></name><xref ref-type="aff" rid="I1">1</xref><xref ref-type="aff" rid="I4">4</xref><email>kshedden@umich.edu</email></contrib><contrib id="A4" contrib-type="author"><name><surname>Nguyen</surname><given-names>Mandee</given-names></name><xref ref-type="aff" rid="I3">3</xref><email>nguyenmm@umich.edu</email></contrib><contrib id="A5" contrib-type="author"><name><surname>Lyu</surname><given-names>Naesung</given-names></name><xref ref-type="aff" rid="I5">5</xref><email>naesunglyu@gmail.com</email></contrib><contrib id="A6" corresp="yes" contrib-type="author"><name><surname>Saitou</surname><given-names>Kazuhiro</given-names></name><xref ref-type="aff" rid="I1">1</xref><xref ref-type="aff" rid="I2">2</xref><email>kazu@umich.edu</email></contrib></contrib-group><aff id="I1"><label>1</label>Michigan Alliance for Cheminformatic Exploration</aff><aff id="I2"><label>2</label>Department of Mechanical Engineering, the University of Michigan, 2350 Hayward Street, Ann Arbor, MI 48109, USA</aff><aff id="I3"><label>3</label>Department of Pharmaceutical Sciences, the University of Michigan College of Pharmacy, 428 Church Street, Ann Arbor, MI 48109, USA</aff><aff id="I4"><label>4</label>Department of Statistics, the University of Michigan, 1085 South University, Ann Arbor, MI 48109, USA</aff><aff id="I5"><label>5</label>Ford Motor Company, 3104B, Advanced Engineering Center, 2400 Village Rd., Dearborn, MI 48121, USA</aff><pub-date pub-type="collection"><year>2009</year></pub-date><pub-date pub-type="epub"><day>5</day><month>2</month><year>2009</year></pub-date><volume>3</volume><fpage>4</fpage><lpage>4</lpage><ext-link ext-link-type="uri" xlink:href="http://journal.chemistrycentral.com/content/3/1/4"/><history><date date-type="received"><day>25</day><month>10</month><year>2008</year></date><date date-type="accepted"><day>5</day><month>2</month><year>2009</year></date></history><permissions><copyright-statement>Copyright &#x000a9; 2009 Park et al</copyright-statement><copyright-year>2009</copyright-year><copyright-holder>Park et al</copyright-holder></permissions><abstract><sec><title>Background</title><p>To search for chemical structures in research articles, diagrams or text representing molecules need to be translated to a standard chemical file format compatible with cheminformatic search engines. Nevertheless, chemical information contained in research articles is often referenced as analog diagrams of chemical structures embedded in digital raster images. To automate analog-to-digital conversion of chemical structure diagrams in scientific research articles, several software systems have been developed. But their algorithmic performance and utility in cheminformatic research have not been investigated.</p></sec><sec><title>Results</title><p>This paper aims to provide critical reviews for these systems and also report our recent development of ChemReader &#x02013; a fully automated tool for extracting chemical structure diagrams in research articles and converting them into standard, searchable chemical file formats. Basic algorithms for recognizing lines and letters representing bonds and atoms in chemical structure diagrams can be independently run in sequence from a graphical user interface-and the algorithm parameters can be readily changed-to facilitate additional development specifically tailored to a chemical database annotation scheme. Compared with existing software programs such as OSRA, Kekule, and CLiDE, our results indicate that ChemReader outperforms other software systems on several sets of sample images from diverse sources in terms of the rate of correct outputs and the accuracy on extracting molecular substructure patterns.</p></sec><sec><title>Conclusion</title><p>The availability of ChemReader as a cheminformatic tool for extracting chemical structure information from digital raster images allows research and development groups to enrich their chemical structure databases by annotating the entries with published research articles. Based on its stable performance and high accuracy, ChemReader may be sufficiently accurate for annotating the chemical database with links to scientific research articles.</p></sec></abstract></article-meta></front><body><sec><title>Background</title><p>In the scientific literature, there is a tremendous amount of information about the interaction of small molecules with specific targets, the influence of small molecules on biochemical pathways, the phenotypic effects of small molecules in different cell types, as well as the relationship of small molecules, targets, pathways and phenotypes to disease processes. However much of this information has yet to be compiled in the form that would allow using a molecule's chemical structure as an input to search for its potential relevance in a specific physiological, pathological or therapeutic area of interest. Two examples of information resources linking chemical structures with biomedical targets, pathways and phenotypes are PubMed [<xref ref-type="bibr" rid="B1">1</xref>] &#x02013; the database of the scientific literature corpus &#x02013; and PubChem [<xref ref-type="bibr" rid="B2">2</xref>] &#x02013; a publicly available database of over 19 million chemical structures, each of which can have a cross-reference link to similar structures, bio-assay data, and bio-activity descriptions. If these resources can be used to construct a universal database encompassing all known chemical structures with links to specific targets, biochemical pathways, disease states and potential therapeutic applications, a powerful new tool for both biomedical research and drug discovery would emerge.</p><p>In general, one can envision two ways to parse scientific articles for chemical information: by searching for names or structure diagrams of chemical agents. The chemical structure diagrams in scientific articles are typically drawn manually using a program such as ChemDraw [<xref ref-type="bibr" rid="B3">3</xref>], ISIS/Draw [<xref ref-type="bibr" rid="B4">4</xref>], DrawIt [<xref ref-type="bibr" rid="B5">5</xref>], and ACD/ChemSketch [<xref ref-type="bibr" rid="B6">6</xref>]. Once a structure is drawn, the structural description can be translated into a computer readable format, such as ISIS, MOLfile, SMILES, or ROSDAL formats, which describes the atoms, bond orders, and connectivity patterns of atoms in molecules. However, the diagrams of chemical molecules in scientific journals and reference books are encoded as digitized images (e.g. BMP, TIFF, PNG or GIF), which in turn are embedded within lines of text in a form that is not readily translatable into a computer readable format. Therefore, most references to chemical agents in scientific research articles cannot be easily linked to other repositories of scientific knowledge, and are thus not amenable for analysis or searching using cheminformatic software.</p><p>An effective image searching capability would require converting the digital raster images of chemical diagrams into structured representations such as SMILE strings or atom connectivity tables in standard chemical file formats. Once a reliable structure recognition and conversion system is developed it can be used to scan pages of chemical literature and construct a database, as illustrated in Figure <xref ref-type="fig" rid="F1">1</xref>. The resulting database is one that can be queried with a cheminformatic search engine into which an investigator can input a chemical structure and pull any related information of interest. Novel drug candidates or newly synthesized molecules are usually referenced by chemical structure diagrams rather than molecule names. In addition, a single molecule may have a number of synonyms such that it could be referenced by different names in different articles. Thus, the capability of exploring research articles or patents where the chemical structure or similar compounds are drawn would complement existing text-based search engines for chemical information.</p><fig position="float" id="F1"><label>Figure 1</label><caption><p><bold>Automated extraction of chemical structure information in scientific articles</bold>.</p></caption><graphic xlink:href="1752-153X-3-4-1"/></fig><p>In the 1990s, several software programs were developed that could extract chemical structure diagrams in scientific articles and convert them to structured representations [<xref ref-type="bibr" rid="B7">7</xref>-<xref ref-type="bibr" rid="B9">9</xref>]. Recently, with the active development of cheminformatic tools for processing published chemical information [<xref ref-type="bibr" rid="B10">10</xref>], two more software programs were launched and continue to be updated [<xref ref-type="bibr" rid="B11">11</xref>,<xref ref-type="bibr" rid="B12">12</xref>]. This paper examines these existing systems and also reports our recent development of ChemReader &#x02013; a comparable tool that can be specifically tailored for chemical database annotation (Table <xref ref-type="table" rid="T1">1</xref>). Basic algorithms for recognizing lines and letters representing bonds and atoms in chemical structure diagrams are presented. In its present state, test results indicate that ChemReader outperforms Kekule, CLiDE and OSRA, side-by-side.</p><table-wrap position="float" id="T1"><label>Table 1</label><caption><p>Comparison of existing machine vision system for chemical structure recognition. O and X denotes the availability of key features listed in the first column: O = Positive and X = Negative.</p></caption><table frame="hsides" rules="groups"><thead><tr><td></td><td align="center"><bold>Kekule</bold></td><td align="center"><bold>IBM OROCS</bold></td><td align="center"><bold>CLiDE</bold></td><td align="center"><bold>OSRA</bold></td><td align="center"><bold>chemOCR</bold></td><td align="center"><bold>ChemReader</bold></td></tr></thead><tbody><tr><td align="center">Written language</td><td align="center">C++</td><td align="center">C</td><td align="center">C++</td><td align="center">C++</td><td align="center">Java</td><td align="center">C++</td></tr><tr><td align="center">Running Platform</td><td align="center">MS windows</td><td align="center">IBM OS/2</td><td align="center">MS windows</td><td align="center">Linux/MS Windows/OS X</td><td align="center">Independent</td><td align="center">MS Windows</td></tr><tr><td align="center">Batch mode</td><td align="center">X</td><td align="center">X</td><td align="center">O</td><td align="center">O</td><td align="center">O</td><td align="center">O</td></tr><tr><td align="center">Bond streo</td><td align="center">O</td><td align="center">X</td><td align="center">O</td><td align="center">O</td><td align="center">O</td><td align="center">O</td></tr><tr><td align="center">Abbreviation Interpretation</td><td align="center">O</td><td align="center">X</td><td align="center">O</td><td align="center">O (limited)<sup>1</sup></td><td align="center">O</td><td align="center">O</td></tr><tr><td align="center">Chemical Knowledge</td><td align="center">O</td><td align="center">X</td><td align="center">X</td><td align="center">X</td><td align="center">O</td><td align="center">O</td></tr><tr><td align="center">Document analysis</td><td align="center">O</td><td align="center">X</td><td align="center">O</td><td align="center">X</td><td align="center">X</td><td align="center">Under development</td></tr><tr><td align="center">Automatic Extraction<sup>2</sup></td><td align="center">X</td><td align="center">O</td><td align="center">O</td><td align="center">X</td><td align="center">X</td><td align="center">Under development</td></tr><tr><td align="center">Open source</td><td align="center">X</td><td align="center">X</td><td align="center">X</td><td align="center">O</td><td align="center">X</td><td align="center">X</td></tr><tr><td align="center">Customizable extensibility</td><td align="center">X</td><td align="center">X</td><td align="center">X</td><td align="center">O</td><td align="center">O</td><td align="center">O</td></tr></tbody></table><table-wrap-foot><p><sup>1 </sup>OSRA has a hardcoded matching table to interpret only a few chemical abbreviations.</p><p><sup>2 </sup>A functionality for extracting digitized images of chemical structure diagrams from scanned pages</p></table-wrap-foot></table-wrap><sec><title>Machine Vision Approaches for Digital Image Recognition</title><p>Machine-vision is concerned with the theory and method for processing the image data and identifying relevant image features effectively [<xref ref-type="bibr" rid="B13">13</xref>]. Machines see objects in different ways than human beings. Given digitized image data or multi dimensional data, machines extract features and classify patterns by examining each digital element (pixels) of each image. In general, a machine processes an image in the following steps:</p><p>&#x02022; De-noising: Removing visual artifacts that decrease the ability to extract information from the images;</p><p>&#x02022; Segmentation: Separating objects in the image;</p><p>&#x02022; Feature extraction: Characterization of each segmented region by extracting topological features;</p><p>&#x02022; Consistency analysis: Interpreting the entire image based on extracted local features; and</p><p>&#x02022; Classification/Matching: Identifying the object in the image in relation to a reference set of objects.</p><p>Many applications of machine-vision have been developed and are used in various fields (<italic>e.g</italic>., automated diagnosis system in medicine, quality control in manufacturing industry, and security and intruder identification). There are also several applications performing tasks of extracting structural information from digital images of technical diagrams. Dori and Wenyin have developed the Machine Drawing Understanding System (MDUS), which can convert printed mechanical engineering drawings that are scanned and stored as raster digitized image files into standard file formats that can be read by Computer-Aided Design (CAD) software [<xref ref-type="bibr" rid="B14">14</xref>]. An automated conversion system of electronic circuit diagrams have been also developed [<xref ref-type="bibr" rid="B15">15</xref>].</p></sec><sec><title>Machine Vision Systems for Recognition of Chemical Structure Images</title><p>The essential components of chemical structure drawing can be categorized into bond lines and atom symbols. In all systems listed below, these two components in raw image data are first separated by a segmentation algorithm. Then bond lines in graphic segments can be processed by a line detection algorithm and atom symbols in text segments can be recognized by a character recognition algorithm. Finally, a graph representing the chemical structure is built from both results, and from this the structure information can be extracted and stored as a standard chemical file format.</p><p>To extract a chemical diagram from a document and convert it to a digital chemical file, any automated machine-vision based system would need to be able to execute all of the following tasks without manual intervention. The first step is to identify all the individual chemical diagrams in a document, and segment these diagrams into atoms and bonds connected to form an individual molecule. For this purpose, a document page containing chemical structure diagrams should be scanned to produce a digital raster image of the entire page. Before proceeding to process the scanned digital raster image, it is necessary to extract only a subarea of the page which contains a chemical structure diagram. Next, with the isolated chemical structure image, another algorithm is used to classify the graphic (bonds) and text components in those images. A conventional connected component algorithm is typically used to segment an image into sets of pixels connected with each other, and the relative size of each component gives information to distinguish a component between graphics (bond lines) and text (atom symbols).</p><p>Once lines and text have been separated from each other, the next step is to identify the length, position and direction of the lines, and the characters of the text. There are several types of bonds used in the chemical structure diagram: single, double, triple, wedged, dotted, dashed, and dashed-wedged. Since the basic graphical elements composing such bonds are lines, Hough transform [<xref ref-type="bibr" rid="B16">16</xref>] and vectorization algorithms, which are widely used in machine-vision systems, are employed for the line detection schemes. Different bond types can be distinguished by considering detected line length, width and arrangement patterns. For character recognition, text components are conveyed into a character recognition engine where they are analyzed using artificial neural networks or feature based approaches.</p><p>The last step of chemical structure extraction involves establishing the connectivity of the atoms, in terms of which atoms are linked to each other, and the number of bonds between them. Based on the result of previous steps, a graph representing the chemical structure is constructed. From the result of character recognition, the detected chemical symbols for atom types or molecular groups are assigned to nodes. The detected lines enable the construction of the entire structure of the grap. In some cases, a character string at a node could be an abbreviation (<italic>e.g.</italic>, OMe for a methyl-ester). In such cases, it is necessary to interpret the chemical meaning of the abbreviation in order to build a complete chemical standard file. A database of chemical abbreviations which frequently appear in the chemical structure diagram can be used for this purpose. By looking up the abbreviation in the database, the abbreviation can be translated directly to a digital chemical representation. If there is no matching entry, the system can flag the structure as potentially misrecognized. At the final step, the compiled chemical structure graph is translated into a chemical standard file such as Molfile, SMILE strings.</p><sec><title>Kekule</title><p>The first commercial program to read and interpret digital raster images of chemical structures was Kekule [<xref ref-type="bibr" rid="B7">7</xref>], developed by Joe R. McDaniel and Jason R. Balmuth of Fein-Marquart Associates Inc. in Baltimore, MD. The program requires at least a 150 dpi image resolution. In Kekule, the area of a page that contains a chemical structure diagram needs to be manually identified. In terms of interesting features, Kekule has a built-in algorithm to fix character recognition errors. For this purpose, a neural network is used for generating potential characters with scoring information estimating the likelihood that a specific character corresponds to a certain atom. Even when an incorrectly recognized character has a higher score than the correct candidate, Kekule can fix character-to-atom conversion errors by considering the valence and chemical neighbors of the atom. Still, manual correction at the post-processing step is often required, due to an average accuracy of 0.74 per structure diagram.</p></sec><sec><title>Optical Recognition Of Chemical graphics (OROCS)</title><p>For converting chemical structure images to computer-readable format, another program called OROCS [<xref ref-type="bibr" rid="B8">8</xref>], was developed at the IBM Almaden Research Center, San Jose, CA. The most interesting feature of the OROCS system is that is has an algorithm for automated extraction of chemical structure diagrams from scanned document images. In order to isolate chemical structure diagrams from other elements &#x02013; such as text, figures and pictures on a page-the document is segmented by a conventional connected components algorithm. If the size of a segment is larger than a threshold, it is potentially regarded as a chemical structure, and the polygonal shapes of chemical structure diagrams are used to make a final decision. The methodology implemented in OROCS was granted a U.S. patent in 1992 [<xref ref-type="bibr" rid="B17">17</xref>].</p></sec><sec><title>Chemical Literature Data Extraction (CLiDE)</title><p>Amongst the chemical structure extraction efforts to date, the Chemical-Literature Data-Extraction Project (CLiDE) [<xref ref-type="bibr" rid="B9">9</xref>] is available commercially. CLiDE not only aims at extracting chemical structures but also abstracting chemical information from text. By employing the Documental Format Description Language (DFDL) which can describe logical relationships of objects and elements in a document, CLiDE builds logical associations between chemical structures and the text segments of document [<xref ref-type="bibr" rid="B18">18</xref>]. Unlike OROCS and like Kekule, CLiDE does not have an automated process to discriminate chemical structure diagram from graphical objects, so manual separation of chemical diagrams is necessary. As well as Kekule and OROCS, CLiDE requires at least a 300 dpi resolution in scanned images at the scanning step and manual correction at the post processing step to achieve reliable output. However, the drawn chemical structure diagrams are typically embedded in Word documents as GIF or JPG formats, whose the resolution is usually 72&#x02013;96 dpi. Therefore, these software systems might be impractical tools for fully automated extraction of chemical structure information.</p></sec><sec><title>chemOCR</title><p>Recently, a new program, called chemOCR [<xref ref-type="bibr" rid="B11">11</xref>], has been developed and made available. Focusing on overcoming the most common errors generated by prior systems, chemOCR adopted a chemical rule-based expert system for the extraction of chemical structure diagrams. The most interesting features, at the post-processing stage, is that chemOCR uses a graph-matching algorithm to select the best-matching chemical structure fragment against sub-graphs of chemical structures stored in a database. With this approach, even if several errors occur during detecting lines or recognizing characters, the errors can be corrected by simply replacing unrealistic chemical fragments of a molecule with known sub-structural motifs present in the database of chemical substructures. In their own testing, chemOCR showed high correct recognition rates ranging from 67 to 97%, and thus outperformed CLiDE which could process only 25 images out of 100 successfully.</p></sec><sec><title>Optical Structure Recognition (OSRA)</title><p>OSRA [<xref ref-type="bibr" rid="B12">12</xref>], another recently released program is free and open source software written by the CADD group at the National Cancer Institute. OSRA attempts to generate three output structures by varying parameters for the de-noising stage, and then picks one as an output based on its own empirical confidence function. Since most machine vision algorithms could yield quite different interpretations of the same input with a slightly different parameter setting, this iterative processing of the same input could improve the overall ratio of correct outputs, so long as the confidence function is reliable enough.</p></sec></sec></sec><sec><title>Results</title><sec><title>ChemReader &#x02013; Overview</title><p>ChemReader is a software developer toolkit for translating digital raster images of chemical structures into standard, chemical file formats that can be searched and analyzed with other open source or commercial cheminformatic software. Its intention is to allow tailoring of each step of the extraction of chemical diagrams, to optimize annotating a database of chemical structures from references in the scientific literature, as illustrated in Figure <xref ref-type="fig" rid="F1">1</xref>. Recognizing the shortcomings of the other systems discussed in the previous section, ChemReader aims to achieve very high recognition accuracy and robust performance sufficient for fully automated processing of research articles. In addition, ChemReader possesses a graphical user interface (GUI) that allows each step of the algorithm to be tested independently.</p><p>Figure <xref ref-type="fig" rid="F2">2</xref> shows the basic recognition steps of chemical structure diagram extraction with ChemReader. The chemical structure drawing is a binary image which consists of a long sequence of bits that give pixel-by-pixel values. In the first step, the pixels are grouped into components based on pixel connectivity. Next, these connected components are classified as text or graphics. Text components are transferred to a character recognition algorithm and converted to chemical (atom) symbols. Graphical components representing bond connectivity are analyzed using the (Generalized) Hough Transformation, Corner Detection algorithm, and a few other geometric operations detailed below. Finally, from recognized chemical atom symbols and bonds, the whole of the structural information is assembled and displayed graphically for verification by the user. Figure <xref ref-type="fig" rid="F3">3</xref> shows the GUI of ChemReader. The current version of ChemReader can read most of common image formats including GIF, JPG, BMP and PNG.</p><fig position="float" id="F2"><label>Figure 2</label><caption><p><bold>Recognition of chemical structure diagram images in ChemReader</bold>. (a) input image, (b) character-line separation, (c) bond recognition, (d) character recognition, and (e) topology construction and data output.</p></caption><graphic xlink:href="1752-153X-3-4-2"/></fig><fig position="float" id="F3"><label>Figure 3</label><caption><p><bold>Graphical User Interface (GUI) of ChemReader</bold>.</p></caption><graphic xlink:href="1752-153X-3-4-3"/></fig></sec><sec><title>Pre-processing</title><p>The first step in ChemReader involves an image processing for re-sizing and de-noising. The chemical structure diagrams are drawn with different settings in the drawing software, such as default bond lengths or character font sizes. Moreover, the image size and format are subjected to variations while transferred to the final destination, for example, a journal article or a web page. Thus it is necessary to resize and de-noise the input image so that the chemical structure diagram within the input image has bond lengths and character sizes optimally adjusted to ChemReader's recognition algorithms. With the first run of line detection as explained below, the length of the single bond is estimated. If the estimated bond length is shorter or larger than a certain threshold (currently 25 pixels), the image is resized such that bonds extracted in the next stages can have ChemReader's preferred length. For this purpose, GREYCstoration [<xref ref-type="bibr" rid="B19">19</xref>], a free implementation of image regulation algorithm [<xref ref-type="bibr" rid="B20">20</xref>] is used.</p></sec><sec><title>Separation of lines and characters</title><p>The second step is disassembling connected components based on pixel connectivity. In ChemReader, the 8-connectivity algorithm was used. Subsequently, the connected components are classified into characters and graphics. To detect characters, a character detection algorithm searches for objects with similar heights and areas. The most populated area/height combination will, in general, represent text components [<xref ref-type="bibr" rid="B21">21</xref>]. Most text components can be separated from the rest of the chemical structure using this method.</p><p>If a text component is not separated from a graphic component (<italic>e.g.</italic>, because of a printer error) but is aligned with a successfully-separated text component (referred to as a "seed string"), the glued character component is separated from the graphics by extending the seed string [<xref ref-type="bibr" rid="B22">22</xref>] in the direction in which the seed string characters are aligned. In order to distinguish the small isolated lines or circles representing bonds from the text components, the relative location and horizontal/vertical run profile of each component are also checked. For example, the letter 'l' is often wrongly identified as a graphic component. However, since it always appears next to other letters, the letter 'l' can be correctly identified as a letter and not a bond by considering the relative location of each letter. If text components cannot be identified in this manner, they can often be corrected in subsequent steps.</p></sec><sec><title>Line Detection Algorithm</title><p>Most bonds in a chemical structure drawing are simple straight lines. Therefore, a robust line detection algorithm is the key software component for extracting bond features from a chemical structure diagram. In digital image processing, the Hough Transform (HT) is a standard technique used for this purpose. It detects lines by mapping the image in the Cartesian space to the polar Hough space using the normal representation of a line in x-y space (Figure <xref ref-type="fig" rid="F4">4(a)</xref> and <xref ref-type="fig" rid="F4">4(b)</xref>):</p><fig position="float" id="F4"><label>Figure 4</label><caption><p><bold>Hough Transformation for bond detection. </bold>(a) Cartesian Image Space, (b) Polar Hough Space, (c) Example of HT applied to a chemical structure image, and (d) Hough Space corresponding to (c).</p></caption><graphic xlink:href="1752-153X-3-4-4"/></fig><p><italic>x</italic><sub><italic>i </italic></sub>cos <italic>&#x003b8;</italic><sub><italic>i </italic></sub>+ <italic>y</italic><sub><italic>i </italic></sub>sin <italic>&#x003b8;</italic><sub><italic>i </italic></sub>= <italic>r</italic><sub><italic>i</italic></sub></p><p>Since a pixel corresponds to a sinusoidal curve in the Hough space, collinear pixels in the x-y space have intersecting sinusoidal lines. Therefore, all possible lines passing through every arbitrary pair of pixels in a chemical diagram image are identified by checking the intersection points of curves in the Hough space. Figure <xref ref-type="fig" rid="F4">4(c)</xref> and <xref ref-type="fig" rid="F4">4(d)</xref> shows the detected line and the corresponding Hough space. The density of a point (<italic>r</italic>*, <italic>&#x003b8; </italic>*)in Hough Space (Figure <xref ref-type="fig" rid="F4">4(d)</xref>) would represent the likelihood of finding a corresponding line in the actual chemical diagram image (Figure <xref ref-type="fig" rid="F4">4(c)</xref>).</p><p>However, the conventional HT does not use pixel-connectivity and line-width information as important features for line-extraction. So, while the human eye only recognizes a linear grouping of pixels as a line (vertical (blue) line in Figure <xref ref-type="fig" rid="F5">5(a)</xref>), the Hough transform would assign greater weight to a broken, aligned sequence of pixels (illustrated by the horizontal (red) line in Figure <xref ref-type="fig" rid="F5">5(a)</xref>). In addition, while the human eye may only be able to see dark (thick) lines that are two or more pixels in width, the Hough transform will assign a greater weight to a long, narrow sequence of single pixels that may be less visible to the human eye (red line, Figure <xref ref-type="fig" rid="F5">5(b)</xref>). To correct these problems, a modified Hough-Transform [<xref ref-type="bibr" rid="B23">23</xref>] is used for line detection. In the modified HT, each pair of pixels is assigned a weight based on the probability that the two pixels originate from a single line-segment. The weight could be defined as</p><fig position="float" id="F5"><label>Figure 5</label><caption><p><bold>Considering line thickness and connectivity in the HT</bold>. Vertical lines could have priority over horizontal lines in a modified HT due to their connectivity (a) and thickness (b).</p></caption><graphic xlink:href="1752-153X-3-4-5"/></fig><p><disp-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M1" name="1752-153X-3-4-i1" overflow="scroll"><mml:semantics><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mtable columnalign="left"><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mi>ln</mml:mi><mml:mo>&#x02061;</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>p</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:mfrac><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mi>ln</mml:mi><mml:mo>&#x02061;</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mi>i</mml:mi><mml:mi>f</mml:mi><mml:mtext>&#x000a0;</mml:mtext><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>/</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>&#x0003e;</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mn>0</mml:mn></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mi>o</mml:mi><mml:mi>t</mml:mi><mml:mi>h</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>w</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi><mml:mi>e</mml:mi></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mrow></mml:mrow></mml:semantics></mml:math></disp-formula></p><p>where <italic>n</italic><sub><italic>ij </italic></sub>is the number of pixels that have distance less than a half of the thickness of the line connecting <italic>P</italic><sub><italic>i </italic></sub>and <italic>P</italic><sub><italic>j</italic></sub>, <italic>x</italic><sub><italic>ij </italic></sub>is the number of black pixels in <italic>n</italic><sub><italic>ij </italic></sub>pixels, and <italic>p</italic><sub>0 </sub>is the total number of black pixels in the image space divided by the image size. The pixel pairs assigned by this method can be selected randomly to reduce computational time and memory usage. Since the ends of line segments can be recognized as corner pixels, those pixels which are identified by the wedge-bond detection-algorithm (described below) can also be used for general line detection. The line detection algorithm terminates when the assigned pixel pair results in a short line segment compared to the previously detected line segments.</p><p>While running the Hough Transform, it is possible that a text component can be recognized as multiple short line segments if it is not successfully separated and identified as a text component before line detection. This type of error often occurs if a text (character) component is glued to a graphic component (Figure <xref ref-type="fig" rid="F6">6(a)</xref>). Due to the complex shape of characters, the length of line segments from a character is much shorter than the length of chemical bonds (Figure <xref ref-type="fig" rid="F6">6(b)</xref>). Thus, these short line segments are examined to determine if they are in fact a graphic or a text component (Figure <xref ref-type="fig" rid="F6">6(c)</xref>).</p><fig position="float" id="F6"><label>Figure 6</label><caption><p><bold>Recovering process for characters glued to graphics</bold>. A sub image which has (a) a character component connected to a graphic component, (b) line detection result of (a), and (c) Correctly separated characters.</p></caption><graphic xlink:href="1752-153X-3-4-6"/></fig></sec><sec><title>Bond Type Identification</title><p>In low resolution (fuzzy) images, Hough Transformation often fails to distinguish a double or triple bond from a single bond. With thickness-based bond correction, a single line detected can be interpreted as a double or triple bond by considering the thickness of the bond, as well as the pattern of dark-white transitions perpendicular to the line.</p><p>Stereochemical 'wedge-bonds' are detected after separating text from graphic components. Using a corner-detection algorithm [<xref ref-type="bibr" rid="B24">24</xref>], ChemReader examines every possible combination of 3 corner points which could be a set of 3 vertices constituting a wedge bond. To verify whether it is a wedge, the following three conditions are checked (Figure <xref ref-type="fig" rid="F7">7</xref>):</p><fig position="float" id="F7"><label>Figure 7</label><caption><p><bold>Detection of streochemical wedge bond. </bold>(a) Detected corner points (Red Block) around a wedge bond, (b) a combination of 3 corner points, NB<sub>i </sub>= Number of Black Pixels in each region, and (c) wrongly detected wedge.</p></caption><graphic xlink:href="1752-153X-3-4-7"/></fig><p>&#x02022; Area of the triangle = Number of black pixels in the triangle</p><p>&#x02022; Almost isosceles triangle shape</p><p>&#x02022; NB1 &#x0003e; NB2 &#x0003e; NB3, where NB is the number of black pixels (see Figure <xref ref-type="fig" rid="F7">7</xref>)</p><p>In the case where a normal (non-stereochemical) bond is unusually thick or a double bond cannot be resolved as two separate lines, the wedge-bond detection can lead to a bond misrecognition error (Figure <xref ref-type="fig" rid="F7">7(c)</xref>). To correct this error, the width of wedge bonds (captured by the length between P1 and P2; see Figure <xref ref-type="fig" rid="F7">7</xref>) is compared to the average width of normal bonds after extracting the normal bonds.</p><p>Yet another challenging detection problem involves identifying individual dashed/dotted bonds that are drawn to indicate conjugated bonds or stereochemistry in chemical diagrams. These dashed or dotted bonds can be detected from residual pixels that are neither a part of the character component nor classified as a normal or wedged bonds (Figure <xref ref-type="fig" rid="F8">8</xref>). To detect dotted bonds, an algorithm is run to find short line segments having uniform length and interval, as well as being collinear in the direction perpendicular to the direction of the short line-segments.</p><fig position="float" id="F8"><label>Figure 8</label><caption><p><bold>Sequential steps for bond detection</bold>. (a) Original Image, (b) Detected corner points after removing character components, (c) Detected normal and wedge bonds, and (d) left pixels before dashed bond detection.</p></caption><graphic xlink:href="1752-153X-3-4-8"/></fig><p>Finally, dashed bond detection is performed on any left-over (unextracted) pixels in the original image (Figure <xref ref-type="fig" rid="F9">9</xref>). Applying each center of connected components of left pixels to a conventional Hough Transform, ChemReader can successfully detect a line which is orthogonal to a dashed line segment, and recognize that the line as a dashed bond.</p><fig position="float" id="F9"><label>Figure 9</label><caption><p><bold>Left over pixels before hatched bond detection</bold>. (a) Original Image, (b) left pixels before hatched bond detection, and (c) Most voted line from HT and line segments orthogonal to it.</p></caption><graphic xlink:href="1752-153X-3-4-9"/></fig></sec><sec><title>Ring Structure Identification</title><p>Another interesting bond recognition problem occurs in aromatic systems, where a circle is often used to represent the conjugated electron system of the benzene ring. To identify these circles, an algorithm looks for the pixels of a connected component that are distributed with almost the same distance from the center of the component (Figure <xref ref-type="fig" rid="F10">10</xref>). With this algorithm, the presence of circular features can be detected by checking whether the standard deviation of distances from the center of an object is smaller than a certain threshold.</p><fig position="float" id="F10"><label>Figure 10</label><caption><p><bold>Detection of aromatic ring bond. </bold>(a) Chemical structure of Naphthalene, (b) Connected components and distribution of distances of pixels from component's center for (c) Circle bonding and for (d) Non circle bonding.</p></caption><graphic xlink:href="1752-153X-3-4-10"/></fig><p>In low resolution images, it is often observed that a detected line have a different position, length or direction from the actual bond. This is especially the case for the bonds in a hexagonal or pentagonal ring structure because the pixels of the neighbor bonds can act as noise in the Hough Transform (HT). Accumulated errors of line detection around a ring structure would cause significant errors in constructing the topology of the chemical structure. This problem could be solved by detecting Pentagonal or Hexagonal ring structures directly using the Generalized Hough Transformation (GHT) [<xref ref-type="bibr" rid="B25">25</xref>]. With GHT, ChemReader detects ring structure as a skeleton for processing chemical structure diagrams, so the topology of molecules can be constructed more accurately and efficiently.</p></sec><sec><title>Text (Character) Recognition</title><p>All separated character components are sent to an open-source library for optical character recognition [<xref ref-type="bibr" rid="B26">26</xref>]. Employed character recognition algorithm is based on template matching of features such as holes at middle, upper, lower positions, pixel densities of sub-regions, and white-black transitions through a line. Currently the library is used without any customization, which leads to relatively high recognition error as will be discussed in the following section. Figure <xref ref-type="fig" rid="F11">11</xref> shows common character recognition errors in the chemical structure diagram.</p><fig position="float" id="F11"><label>Figure 11</label><caption><p><bold>Common character recognition errors</bold>. (a) low resolution, (b) broken character, (c) glued to a graphic component, and (d) glued characters.</p></caption><graphic xlink:href="1752-153X-3-4-11"/></fig></sec><sec><title>Chemical Spell Checker</title><p>The GOCR library outputs the recognition results of each character without any chemical interpretation. The results can contain non-existing chemical symbols or valences. To correct these errors, a chemical "spell checker," a recovery process similar to the conventional OCR error correction, is implemented in ChemReader. The characters recognized by the GOCR library are grouped by their relative adjacency and each character group is regarded as a chemical word representing either an atomic symbol or chemical abbreviation, which is subject to "spell checking" based on the chemical dictionary.</p><p>The implementation of the chemical spell checker is based on a dictionary lookup approach and chemical rules regarding valences. In addition to the GOCR library, a character recognition algorithm based on the pixel-by-pixel distance between input character segments and all potential segments in the character library is employed to produce candidate characters and the associated confidence scores. A total of ten candidate characters and their confidence scores are assigned to each input character segment. In general, chemical words in chemical structure diagrams fall into one of three types: simple molecular formulas representing a combination of nonmetal and hydrogen atoms (<italic>e.g. </italic>NH<sub>2</sub>), user defined symbols like X, Y and R, and chemical abbreviations (<italic>e.g.</italic>, three letters for amino acids or "Me" for methyl group). Given candidate characters and their confidence scores, the chemical spell checker tries to find a most-likely chemical word based on a predefined, frequently-used chemical symbol table containing 770 frequently used chemical abbreviations and fundamental chemical rules on molecular formulas containing nonmetal and hydrogen atoms. The calculation of the likelihood is based on following equation:</p><p><disp-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M2" name="1752-153X-3-4-i2" overflow="scroll"><mml:semantics><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mi>M</mml:mi><mml:mi>L</mml:mi><mml:mo>=</mml:mo><mml:mi>M</mml:mi><mml:mi>A</mml:mi><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>T</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>C</mml:mi><mml:mi>h</mml:mi><mml:mi>e</mml:mi><mml:mi>m</mml:mi><mml:mo>_</mml:mo><mml:mi>D</mml:mi><mml:mi>i</mml:mi><mml:mi>c</mml:mi><mml:mi>t</mml:mi><mml:mi>i</mml:mi><mml:mi>o</mml:mi><mml:mi>n</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>y</mml:mi></mml:mrow></mml:msub><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>S</mml:mi><mml:mo>|</mml:mo><mml:mi>T</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>T</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>S</mml:mi><mml:mo>|</mml:mo><mml:mi>T</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mstyle displaystyle="true"><mml:msubsup><mml:mo>&#x0220f;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>m</mml:mi></mml:msubsup><mml:mrow><mml:mi>S</mml:mi><mml:mi>i</mml:mi><mml:mi>m</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mstyle><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:semantics></mml:math></disp-formula></p><p>where <italic>S </italic>and <italic>T </italic>denote the extracted chemical word consisting of <italic>m </italic>character segments <italic>S</italic><sub>1</sub><italic>S</italic><sub>2</sub>...<italic>S</italic><sub><italic>m </italic></sub>and the true chemical word within the chemical dictionary or possible molecular formula string, respectively, where <italic>Sim</italic>(<italic>S</italic><sub><italic>i</italic></sub>, <italic>T</italic><sub><italic>i</italic></sub>) is the confidence score of character recognition, given as the similarity between input character segment <italic>S</italic><sub><italic>i </italic></sub>and comparing candidate character <italic>T</italic><sub><italic>i</italic></sub>. <italic>Sim</italic>(<italic>S</italic><sub><italic>i</italic></sub>, <italic>T</italic><sub><italic>i</italic></sub>) is also defined as</p><p><disp-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M3" name="1752-153X-3-4-i3" overflow="scroll"><mml:semantics><mml:mrow><mml:mi>S</mml:mi><mml:mi>i</mml:mi><mml:mi>m</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:msqrt><mml:mrow><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>&#x02211;</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>M</mml:mi></mml:munderover><mml:mrow><mml:msup><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msup><mml:mi>I</mml:mi><mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>&#x02212;</mml:mo><mml:msup><mml:mi>I</mml:mi><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:mstyle></mml:mrow></mml:msqrt></mml:mrow></mml:semantics></mml:math></disp-formula></p><p>where M denotes the number of pixels in a character segment, and <italic>I</italic><sup><italic>X</italic></sup>(<italic>j</italic>) is a normalized grayscale intensity at the j<sup><italic>th </italic></sup>pixel of the character segment X. Before the calculation of similarity, the comparing candidate character is always resized so that both input and comparing segments have the same size. Since the exact frequency of each chemical symbols in chemical structure diagram is not known priori we assume that <italic>P</italic>(<italic>T</italic>) is equi-probable for all <italic>T </italic>&#x02208; <italic>Chem</italic>_<italic>Dictionary </italic>and &#x02211;<sub><italic>T </italic>&#x02208; <italic>Chem_Dictionary </italic></sub>P(T) = 1. With this chemical spell checker, the accuracy of chemical symbol recognition increased to 87%, up from 66% without spell checking.</p></sec><sec><title>Topology Construction and Data Output</title><p>For data output, a graph representing the chemical structure is compiled based on the detected bonds and the recognized atomic or chemical symbols. Figure <xref ref-type="fig" rid="F12">12</xref> shows a procedure to construct a chemical-structure graph. First, every end point of the identified bonds and center points of the identified chemical symbols are labeled as a node (Figure <xref ref-type="fig" rid="F12">12(a)</xref> and <xref ref-type="fig" rid="F12">12(b)</xref>). Next, among these nodes, the ones located within a certain distance are merged into a single node (Figure <xref ref-type="fig" rid="F12">12(c)</xref>). Based on this graph data structure, a node-edge connectivity-table is generated, which finally can be converted into a standard chemical file format [<xref ref-type="bibr" rid="B27">27</xref>] or SMILE string [<xref ref-type="bibr" rid="B28">28</xref>].</p><fig position="float" id="F12"><label>Figure 12</label><caption><p><bold>Topology construction procedure</bold>. (a) detected bonds (lines) and symbols (rectangle), (b) created nodes (bold dots), and (c) final nodes and edges.</p></caption><graphic xlink:href="1752-153X-3-4-12"/></fig></sec><sec><title>Testing</title><p>Three sets of the images of chemical structure diagrams collected from different sources were used to test the current ChemReader and compare it to OSRA V1.01, CLiDE V2.1 Lite, and Kekule V2.0 demo (Table <xref ref-type="table" rid="T2">2</xref>). Since a new version, CLiDE Pro had been introduced [<xref ref-type="bibr" rid="B29">29</xref>], as it was not available at the time of testing, CLiDE V2.1 was used in this test (Full version has additional functionalities relating document analysis but they were not required in this test). Also, the results for chemOCR could not be obtained since we could not receive responses from SCAI to our requests for a demo version. Fifty images in Set I are obtained by querying pharmaceutically significant molecules to Google Image Search <ext-link ext-link-type="uri" xlink:href="http://images.google.com/"/> so that the images have different drawing styles, sizes, font and resolutions. Set II consists of 100 ligand images randomly selected from the GLIDA database [<xref ref-type="bibr" rid="B30">30</xref>]. Since it requires the original structure information for result analysis, only ligand molecules with links to the PubChem database are considered while collecting ligand structure images. The images in Set III are collected from 121 journal articles. They often have non-chemical structure components such as descriptive text or symbols which represent neither atom nor chemical abbreviations, and thus those images are discarded. For the analysis, we obtain the original structure information of molecules in Sets I and II from the PubChem Database. For Set III, the original connection tables for test images are obtained by drawing structures manually using the ChemDraw software. The recognition results by ChemReader, OSRA, CLiDE, and Kekule are saved as either Molfiles or SMILE strings with graphical output images for analysis.</p><table-wrap position="float" id="T2"><label>Table 2</label><caption><p>Image sets for performance test.</p></caption><table frame="hsides" rules="groups"><thead><tr><td></td><td align="center">Number of Images</td><td align="center">Image Source</td></tr></thead><tbody><tr><td align="center"><bold>Set I</bold></td><td align="center">50</td><td align="center">Google image search</td></tr><tr><td align="center"><bold>Set II</bold></td><td align="center">100</td><td align="center">Ligand images at GLIDA database</td></tr><tr><td align="center"><bold>Set III</bold></td><td align="center">212</td><td align="center">Journals at PubMed database</td></tr></tbody></table></table-wrap><p>The performances of chemical structure recognition are analyzed in two aspects: the fraction of correct outputs and the capability to recognize chemically important substructure patterns. The first measure, the fraction of correct outputs shows straightforwardly the accuracy of the software. Although an error exists in the output molecule, it wouldn't be regarded as a totally useless one if chemically significant features-of-interests are well-recognized. For example, the misassignment of atom charge or bond-stereo would not be so critical for finding molecules similar to the recognized structure in a database. Thus, we compute the statistical measures, precision and recall rates in order to evaluate the software's capability for extracting chemically significant substructure patterns. Precision is the fraction of the extracted patterns that are correct whereas recall is the fraction of the correct patterns that are extracted. Structural patterns defined in the PubChem Substructure Fingerprint [<xref ref-type="bibr" rid="B31">31</xref>] are used in this test. The identity between the original molecule and output chemical structure is determined using an exact matching function in ChemAxon's JChem toolkits [<xref ref-type="bibr" rid="B32">32</xref>]. Also, the PubChem fingerprint is computed using an open-source code provided by the NIH Chemical Genomic Center (NCGC) [<xref ref-type="bibr" rid="B33">33</xref>].</p><p>Table <xref ref-type="table" rid="T3">3</xref> shows a summary of testing results in terms of the fraction of correct outputs and the average Tanimoto similarity between the software outputs and the correct answers based on the PubChem Substructure Fingerprint. In all Sets (I, II, and III,) ChemReader performs the recognition process outstandingly compared to the other software programs (Figure <xref ref-type="fig" rid="F13">13</xref>). As the Kekule demo version does not have a batch mode, it's not tested for Set II and III. Figure <xref ref-type="fig" rid="F14">14</xref> illustrates a few input and output examples. OSRA shows the most comparable performance to ChemReader in Sets I and II, but drops its correct outputs to under 20% in Set III while ChemReader keeps those over 30%. Set III contains chemical structure images within journal articles which have usually many abbreviations representing chemical group symbols. Also, as those figures are embedded in the middle of text, the sizes and resolutions of images are degraded in general. To process such images successfully, it would be necessary to have a chemical spell checker that can interpret many chemical symbols and fix errors that occur in the machine-vision algorithms. This explains the reason why the accuracy gap between ChemReader and OSRA is larger in Set III than in Sets I and II.</p><fig position="float" id="F13"><label>Figure 13</label><caption><p><bold>Percent of correct outputs and Average Tanimoto similarity scores over total outputs</bold>.</p></caption><graphic xlink:href="1752-153X-3-4-13"/></fig><fig position="float" id="F14"><label>Figure 14</label><caption><p><bold>Output examples</bold>. (a) input images, and results by (b) ChemReader, (c) OSRA, (d) CLiDE, and (e) Kekule.</p></caption><graphic xlink:href="1752-153X-3-4-14"/></fig><table-wrap position="float" id="T3"><label>Table 3</label><caption><p>Summary of performance testing results for three sets of images.</p></caption><table frame="hsides" rules="groups"><thead><tr><td></td><td align="center" colspan="2"><bold>Set I (Total: 50)</bold></td><td align="center" colspan="2"><bold>Set II (Total: 100)</bold></td><td align="center" colspan="2"><bold>Set III (Total: 212)</bold></td></tr><tr><td></td><td colspan="6"><hr></hr></td></tr><tr><td></td><td align="center">Correct</td><td align="center">Similarity</td><td align="center">Correct</td><td align="center">Similarity</td><td align="center">Correct</td><td align="center">Similarity</td></tr></thead><tbody><tr><td align="center"><bold>ChemReader</bold></td><td align="center">25 (50%)</td><td align="center">0.860</td><td align="center">33 (33%)</td><td align="center">0.877</td><td align="center">64 (30.2%)</td><td align="center">0.740</td></tr><tr><td align="center"><bold>OSRA V1.0.1</bold></td><td align="center">20 (40%)</td><td align="center">0.798</td><td align="center">25 (25%)</td><td align="center">0.785</td><td align="center">36 (17%)</td><td align="center">0.526</td></tr><tr><td align="center"><bold>CLiDE Lite V2.1 </bold></td><td align="center">2 (4%)</td><td align="center">0.489</td><td align="center">2 (2%)</td><td align="center">0.490</td><td align="center">14 (6.6%)</td><td align="center">0.294</td></tr><tr><td align="center"><bold>Kekule demo V2.0</bold><sup>1</sup></td><td align="center">6 (12%)</td><td align="center">0.428</td><td align="center">-</td><td align="center">-</td><td align="center">-</td><td align="center">-</td></tr></tbody></table><table-wrap-foot><p><sup>1 </sup>Kekule was not tested for Set II and III due to lack of batch mode functionality in the demo version</p></table-wrap-foot></table-wrap><p>The average Tanimoto similarity scores can be seen as the extent of correctly including chemically important features in the output structure. The more missed (false negative) or misinterpreted (false positive) features the output structure has, the smaller similarity score will become. It is noted that ChemReader's outputs show a high average-similarity score ranging from 0.74 to 0.88 even though only about 30% of outputs are perfectly correct. This indicates that ChemReader can be effective in annotating chemical structure database by linking published research articles to relevant entries in the database. Since those links would likely be created based on a molecular similarity rather than perfect matching, high similarity scores would imply the high accuracy in automated chemical database annotation.</p><p>From the generated binary PubChem Substructure Fingerprint, precision and recall rates for each substructure pattern are computed for detailed analysis. Table <xref ref-type="table" rid="T4">4</xref> shows the average precision and recall rates over seven types of patterns which are already categorized in the PubChem Fingerprint specification. The first and second groups of PubChem substructures are involved in testing for the presence or count of atoms or ring systems. Items in the third and fourth groups examine the presence of several specific bonded atom pairs and atom nearest neighbor patterns, respectively, regardless of bond type. In the 5<sup>th</sup>, 6<sup>th </sup>and 7<sup>th </sup>groups of substructure patterns, bond types and aromaticity are specific such that the exact presence of described SMILE or SMART pattern is examined. The main difference between ChemReader and other software programs presented here is that ChemReader's recall rate is significantly higher than others over all types of patterns while precision rates are similar. It indicates that ChemReader has the advantage on extracting substructure features with high accuracy (precision and recall rates) over the other programs, which would be essential for an automated annotation system for a chemical database.</p><table-wrap position="float" id="T4"><label>Table 4</label><caption><p>Estimated Precision (P) and Recall (R) rates for classification of substructure patterns.</p></caption><table frame="hsides" rules="groups"><thead><tr><td></td><td align="center" colspan="2"><bold>ChemReader</bold></td><td align="center" colspan="2"><bold>OSRA</bold></td><td align="center" colspan="2"><bold>CLiDE</bold></td><td align="center" colspan="2"><bold>Kekule</bold></td></tr><tr><td></td><td align="center"><bold>P</bold></td><td align="center"><bold>R</bold></td><td align="center"><bold>P</bold></td><td align="center"><bold>R</bold></td><td align="center"><bold>P</bold></td><td align="center"><bold>R</bold></td><td align="center"><bold>P</bold></td><td align="center"><bold>R</bold></td></tr></thead><tbody><tr><td align="center">1. Hierarchic Element Counts</td><td align="center">0.95</td><td align="center">0.92</td><td align="center">0.95</td><td align="center">0.83</td><td align="center">0.95</td><td align="center">0.59</td><td align="center">0.88</td><td align="center">0.57</td></tr><tr><td align="center">2. Rings</td><td align="center">0.87</td><td align="center">0.83</td><td align="center">0.84</td><td align="center">0.73</td><td align="center">0.76</td><td align="center">0.37</td><td align="center">0.61</td><td align="center">0.51</td></tr><tr><td align="center">3. Simple atom pairs</td><td align="center">0.93</td><td align="center">0.92</td><td align="center">0.93</td><td align="center">0.83</td><td align="center">0.94</td><td align="center">0.60</td><td align="center">0.95</td><td align="center">0.56</td></tr><tr><td align="center">4. Simple atom nearest neighbors</td><td align="center">0.94</td><td align="center">0.86</td><td align="center">0.89</td><td align="center">0.73</td><td align="center">0.83</td><td align="center">0.41</td><td align="center">0.89</td><td align="center">0.43</td></tr><tr><td align="center">5. Detailed atom neighborhoods</td><td align="center">0.89</td><td align="center">0.89</td><td align="center">0.93</td><td align="center">0.71</td><td align="center">0.92</td><td align="center">0.40</td><td align="center">0.92</td><td align="center">0.052</td></tr><tr><td align="center">6. Simple SMARTS patterns</td><td align="center">0.93</td><td align="center">0.84</td><td align="center">0.92</td><td align="center">0.68</td><td align="center">0.90</td><td align="center">0.36</td><td align="center">0.93</td><td align="center">0.42</td></tr><tr><td align="center">7. Complex SMARTS patterns</td><td align="center">0.84</td><td align="center">0.75</td><td align="center">0.78</td><td align="center">0.62</td><td align="center">0.60</td><td align="center">0.27</td><td align="center">0.67</td><td align="center">0.33</td></tr></tbody></table></table-wrap></sec></sec><sec><title>Discussion</title><p>We have examined several examples of the existing software programs that can be utilized for linking the databases of small molecules with the relevant scientific research articles, by matching the chemical structure diagrams in the articles with the structures in the database. In their current states, these programs have limitations to the extent that they generally need manual feeding of images and they have significant error rates. As an alternative, we have developed ChemReader &#x02013; a machine-vision-based software program designed for the development of customized chemical diagram extraction tools in industry or academic laboratories. Compared to commercially or publicly available software, ChemReader function is transparent, in the sense that algorithm performance can be followed step-by-step. In side-by-side comparison with Kekule, CLiDE and OSRA, ChemReader makes more correct outputs and extracts chemically important substructure patterns with higher recall and precision rates.</p><p>To develop ChemReader into a fully-automated system, there are still several challenges that remain to be addressed. For automated extraction of chemical structures and relevant information from scientific articles, it would be important to rapidly distinguish between a diagram of a chemical structure and a non-chemical structure diagram, or a photograph, among the extracted images. Gkoutos <italic>et al. </italic>have reported a method to classify chemical images based on the use of the Kohonen network [<xref ref-type="bibr" rid="B18">18</xref>] with promising results. Such functionality still has to be incorporated into ChemReader. Finally, since the translation of chemical structure from a raster image to a standard chemical file format is highly error prone as seen in the test, output structures should be thoroughly inspected before utilization. Besides manual curation resulting in high cost of system operation, filtering method which can detect "unreadable" images or wrong outputs and filtered them out at the pre-processing or post-processing stages might be effective to improve the performance of machine vision systems for recognizing chemical structures. In this manner, accuracy can be increased at the expense of throughput. However, since ChemReader is already able to correctly recognize far more images than OSRA, CLiDE or Kekule, this may be a viable course of action for the future of ChemReader's development.</p><p>We postulate that, in its current state, ChemReader may be sufficiently accurate for annotating chemical-structure databases with links to scientific research articles. An error at the level of chemical-structure recognition does not necessarily lead to an error in the annotation, since incorrectly extracted molecules may not find a match in the chemical-structure databases. Furthermore, a useful database annotation scheme does not necessarily require perfect matches between database entries and scientific articles. In fact, the ability to link to similar but not identical structures may be important when the intent is to synthesize drug leads that are not identical to the molecule in question, and to identify related compounds in the scientific literature. Since not every chemical database entry may be represented as chemical-structure diagrams in published research articles, the ability to link to similar but not identical molecules may also be useful to increase the number of links between database entries and research articles.</p></sec><sec><title>Conclusion</title><p>The availability of ChemReader as a cheminformatic tool would allow research and development groups to enrich their knowledge bank of molecules and chemical structures. We are planning that ChemReader becomes commercially available in the near future, with removal of open source parts such as GOCR and Greycstoration. Like ChemReader, other image-based search engines are being developed in other academic disciplines. In mechanical engineering, for example, search engines are being developed for searching catalogues of three dimensional components for mechanical products. Compared to other image-based search engines, image-based cheminformatic search engines are simpler because chemical structures are two dimensional objects with well-defined connectivity patterns (grammars) determined by the atoms and their valences. Indeed, chemical-structure recognition algorithms may be most akin to character- and text-recognition algorithms. Like words in a dictionary, a chemical-structure database can serve as a training set of molecules that can be used to identify the most common chemical substructures present in all known chemical compounds. Based on the frequency of different substructures and using neighboring substructure information, computational techniques borrowed from statistical linguistics may be incorporated to generalize the chemical spellchecker to check structural "spelling", which will further optimize ChemReader's performance.</p></sec><sec><title>Competing interests</title><p>The authors declare that they have no competing interests.</p></sec><sec><title>Authors' contributions</title><p>JP developed most recent versions of ChemReader software, conducted comparison tests, and drafted the manuscript. GRR conceived of the study, has provided and evaluated the key requirements of ChemReader, and revised the draft manuscript. KAS conceived of the study, and has provided and evaluated the key requirements of ChemReader. MN collected and labeled the sample images for the comparison tests and participated in the key development of ChemReader. NL wrote the initial version of ChemReader and conducted the preliminary testing. KS conceived of the study, has participated in the algorithmic development of ChemReader, and revised the draft manuscript. All authors read and approved the final manuscript.</p></sec></body><back><ack><sec><title>Acknowledgements</title><p>This work was supported by NIH grants P20-HG003890 to Kerby Shedden and Gus R. Rosania.</p></sec></ack><ref-list><ref id="B1"><citation citation-type="other"><article-title>PubMed</article-title><ext-link ext-link-type="uri" xlink:href="http://www.ncbi.nlm.nih.gov/entrez/query/static/overview.html#Introduction"/></citation></ref><ref id="B2"><citation citation-type="other"><article-title>PubChem</article-title><ext-link ext-link-type="uri" xlink:href="http://pubchem.ncbi.nlm.nih.gov/help.html#PubChem_Overview"/></citation></ref><ref id="B3"><citation citation-type="other"><article-title>ChemDraw</article-title><ext-link ext-link-type="uri" xlink:href="http://www.cambridgesoft.com/software/ChemDraw/"/></citation></ref><ref id="B4"><citation citation-type="other"><article-title>ISIS/Draw</article-title><ext-link ext-link-type="uri" xlink:href="http://www.symyx.com/products/software/decision-support/isis-draw/index.jsp"/></citation></ref><ref id="B5"><citation citation-type="other"><article-title>DrawIt</article-title><ext-link ext-link-type="uri" xlink:href="http://www.chemwindow.com"/></citation></ref><ref id="B6"><citation citation-type="other"><article-title>ACD/ChemSketch</article-title><ext-link ext-link-type="uri" xlink:href="http://www.acdlabs.com/products/chem_dsn_lab/chemsketch/"/></citation></ref><ref id="B7"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>McDaniel</surname><given-names>JR</given-names></name><name><surname>Balmuth</surname><given-names>JR</given-names></name></person-group><article-title>Kekule: OCR &#x02013; Optical Chemical (Structure) Recognition</article-title><source>J Chem Inf Comput Sci</source><year>1992</year><volume>32</volume><fpage>373</fpage><lpage>378</lpage></citation></ref><ref id="B8"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Casey</surname><given-names>R</given-names></name><name><surname>Boyer</surname><given-names>S</given-names></name><name><surname>Healey</surname><given-names>P</given-names></name><name><surname>Miller</surname><given-names>A</given-names></name><name><surname>Oudot</surname><given-names>B</given-names></name><name><surname>Zilles</surname><given-names>K</given-names></name></person-group><article-title>Optical Recognition of Chemical Graphics</article-title><source>Proceedings of the Second International Conference on Document Analysis and Recognition: 20&#x02013;22 October 1993</source><year>1993</year><publisher-name>Tsukuba, Japan</publisher-name><fpage>627</fpage><lpage>632</lpage></citation></ref><ref id="B9"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Ibison</surname><given-names>P</given-names></name><name><surname>Jacquot</surname><given-names>M</given-names></name><name><surname>Kam</surname><given-names>F</given-names></name><name><surname>Neville</surname><given-names>AG</given-names></name><name><surname>Simpson</surname><given-names>RW</given-names></name><name><surname>Tonnelier</surname><given-names>C</given-names></name><name><surname>Venczel</surname><given-names>T</given-names></name><name><surname>Johnson</surname><given-names>AP</given-names></name></person-group><article-title>Chemical Literature Data Extraction: The CLiDE Project</article-title><source>J Chem Inf Comput Sci</source><year>1993</year><volume>33</volume><fpage>338</fpage><lpage>334</lpage></citation></ref><ref id="B10"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Rosania</surname><given-names>GR</given-names></name><name><surname>Crippen</surname><given-names>G</given-names></name><name><surname>Woolf</surname><given-names>P</given-names></name><name><surname>States</surname><given-names>D</given-names></name><name><surname>Shedden</surname><given-names>K</given-names></name></person-group><article-title>A Cheminformatic Toolkit for Mining Biomedical Knowledge</article-title><source>Pharmaceutical Research</source><year>2007</year><volume>24</volume><fpage>1791</fpage><lpage>1802</lpage><pub-id pub-id-type="pmid">17385012</pub-id></citation></ref><ref id="B11"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Algorri</surname><given-names>ME</given-names></name><name><surname>Zimmermann</surname><given-names>M</given-names></name><name><surname>Friedrich</surname><given-names>CM</given-names></name><name><surname>Akle</surname><given-names>S</given-names></name><name><surname>Hofmann-Apititus</surname><given-names>M</given-names></name></person-group><article-title>Reconstruction of Chemical Molecules from Images</article-title><source>Proceedings of the 29th Annual International Conference of the IEEE Engineering in Medicine and Biology Society (EMBS): 23&#x02013;26 August 2007</source><year>2007</year><publisher-name>Lyon, France</publisher-name><fpage>4609</fpage><lpage>4612</lpage></citation></ref><ref id="B12"><citation citation-type="other"><article-title>OSRA: Optical Structure Recognition</article-title><ext-link ext-link-type="uri" xlink:href="http://cactus.nci.nih.gov/osra/"/></citation></ref><ref id="B13"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Snyder</surname><given-names>WE</given-names></name><name><surname>Qi</surname><given-names>H</given-names></name></person-group><source>Machine Vision</source><year>2004</year><publisher-name>New York: Cambridge University Press</publisher-name></citation></ref><ref id="B14"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Dori</surname><given-names>D</given-names></name><name><surname>Wenyin</surname><given-names>L</given-names></name></person-group><article-title>Automated CAD Conversion with the Machine Drawing Understanding System: Concepts, Algorithms, and Performance</article-title><source>IEEE Transactions on Systems, Man and Cybernetics</source><year>1999</year><volume>29</volume><fpage>411</fpage><lpage>416</lpage></citation></ref><ref id="B15"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Fahn</surname><given-names>CS</given-names></name><name><surname>Wang</surname><given-names>JF</given-names></name><name><surname>Lee</surname><given-names>JY</given-names></name></person-group><article-title>A Topology-Based Component Extractor for Understanding Electronic Circuit Diagrmas</article-title><source>Computer Vision, Graphics, Image Process</source><year>1988</year><volume>44</volume><fpage>119</fpage><lpage>138</lpage></citation></ref><ref id="B16"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Richard</surname><given-names>OD</given-names></name><name><surname>Peter</surname><given-names>EH</given-names></name></person-group><article-title>Use of the Hough transformation to detect lines and curves in pictures</article-title><source>Communications of the ACM</source><year>1972</year><volume>15</volume><fpage>11</fpage><lpage>15</lpage></citation></ref><ref id="B17"><citation citation-type="other"><person-group person-group-type="author"><name><surname>Boyer</surname><given-names>SK</given-names></name><name><surname>Casey</surname><given-names>RG</given-names></name><name><surname>Miller</surname><given-names>AM</given-names></name><name><surname>Oudot</surname><given-names>B</given-names></name><name><surname>Zilles</surname><given-names>KS</given-names></name></person-group><article-title>Apparatus and method for optical recognition of chemical graphics</article-title><source>US Patent No 5,157,736</source><year>1992</year></citation></ref><ref id="B18"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Gkoutos</surname><given-names>GV</given-names></name><name><surname>Rzepa</surname><given-names>H</given-names></name><name><surname>Clark</surname><given-names>RM</given-names></name><name><surname>Adjei</surname><given-names>O</given-names></name><name><surname>Johal</surname><given-names>H</given-names></name></person-group><article-title>Chemical Machine Vision: Automated Extraction of Chemical Metadata from Raster Image</article-title><source>J Chem Inf Comput Sci</source><year>2003</year><volume>43</volume><fpage>1342</fpage><lpage>1355</lpage><pub-id pub-id-type="pmid">14502466</pub-id></citation></ref><ref id="B19"><citation citation-type="other"><article-title>GREYCstoration: open source algorithms for image denoising and interpolation</article-title><ext-link ext-link-type="uri" xlink:href="http://cimg.sourceforge.net/greycstoration/"/></citation></ref><ref id="B20"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Tschumperle</surname><given-names>D</given-names></name></person-group><article-title>Fast Anisotropic Smoothing of Multi-Valued Images using Curvature-Preserving PDE's, International Journal of Computer Vision</article-title><source>International Journal of Computer Vision</source><year>2006</year><volume>68</volume><fpage>65</fpage><lpage>82</lpage></citation></ref><ref id="B21"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Fletcher</surname><given-names>LA</given-names></name><name><surname>Kasturi</surname><given-names>R</given-names></name></person-group><article-title>A Robust Algorithm for Text String Separation from Mixed Text/Graphics Images</article-title><source>IEEE Trans on Pattern Analysis and Machine Intelligence</source><year>1998</year><volume>10</volume><fpage>910</fpage><lpage>918</lpage></citation></ref><ref id="B22"><citation citation-type="other"><person-group person-group-type="author"><name><surname>Tombre</surname><given-names>K</given-names></name><name><surname>Tabbone</surname><given-names>S</given-names></name><name><surname>Pelissier</surname><given-names>L</given-names></name><name><surname>Lamiroy</surname><given-names>B</given-names></name><name><surname>Dosch</surname><given-names>P</given-names></name></person-group><article-title>Text/Graphics Separation Revisited</article-title><source>Proceedings of 5th International Workshop on Document Analysis Systems: 19&#x02013;21 August 2002; Princeton</source><year>2002</year><fpage>200</fpage><lpage>211</lpage></citation></ref><ref id="B23"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>MCK</surname><given-names>Yang</given-names></name><name><surname>Lee</surname><given-names>JS</given-names></name><name><surname>Lien</surname><given-names>CC</given-names></name><name><surname>Huang</surname><given-names>CL</given-names></name></person-group><article-title>Hough Transform Modified by Line Connectivity and Line Thickness</article-title><source>IEEE Transactions on Pattern Analysis and Machine Intelligence</source><year>1997</year><volume>19</volume><fpage>905</fpage><lpage>910</lpage></citation></ref><ref id="B24"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Sojka</surname><given-names>E</given-names></name></person-group><article-title>A New Algorithm for Detecting Corners in Digital Images</article-title><source>Proceedings of the 18th Spring Conference on Computer Graphics: 24&#x02013;27 April 2002; Budmerice, Slovakia</source><year>2002</year><publisher-name>Alan Chalmers: ACM</publisher-name><fpage>55</fpage><lpage>62</lpage></citation></ref><ref id="B25"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Ballard</surname><given-names>DH</given-names></name></person-group><article-title>Generalizing the Hough transform to detect arbitrary shapes</article-title><source>Pattern Recognition</source><year>1981</year><volume>13</volume><fpage>111</fpage><lpage>122</lpage></citation></ref><ref id="B26"><citation citation-type="other"><person-group person-group-type="author"><collab>GOCR</collab></person-group><article-title>Open source character recognition</article-title><ext-link ext-link-type="uri" xlink:href="http://jocr.sourceforge.net/"/></citation></ref><ref id="B27"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Dalby</surname><given-names>A</given-names></name><name><surname>Nourse</surname><given-names>JG</given-names></name><name><surname>Hounshell</surname><given-names>D</given-names></name><name><surname>Gushurst</surname><given-names>AKI</given-names></name><name><surname>Grier</surname><given-names>DL</given-names></name><name><surname>Leland</surname><given-names>BA</given-names></name><name><surname>Laufer</surname><given-names>J</given-names></name></person-group><article-title>Description of Several Chemical Structure File Formats Used by Computer Programs Developed at Molecuar Design Limited</article-title><source>J Chem Inf Comput Sci</source><year>1992</year><volume>32</volume><fpage>244</fpage><lpage>255</lpage></citation></ref><ref id="B28"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Weininger</surname><given-names>D</given-names></name></person-group><article-title>SMILES, a Chemical Language and Information System. 1. Introduction to Methodology and Encoding Rules</article-title><source>J Chem Inf Comput Sci</source><year>1988</year><volume>28</volume><fpage>31</fpage><lpage>36</lpage></citation></ref><ref id="B29"><citation citation-type="other"><article-title>Introducing CliDE Pro, Fall 2008 ACS National Meeting &#x00026; Exposition, August 17th&#x02013;21th, Philadelphia, USA</article-title><ext-link ext-link-type="uri" xlink:href="http://www.simbiosys.ca/science/presentations/2008-acs-08/ACS_CLiDEPro.ppt"/></citation></ref><ref id="B30"><citation citation-type="other"><article-title>GLIDA: GPCR-Ligand Database</article-title><ext-link ext-link-type="uri" xlink:href="http://pharminfo.pharm.kyoto-u.ac.jp/services/glida/"/></citation></ref><ref id="B31"><citation citation-type="other"><article-title>PubChem Substructure fingerprint</article-title><ext-link ext-link-type="uri" xlink:href="ftp://ftp.ncbi.nlm.nih.gov/pubchem/specifications/pubchem_fingerprints.txt"/></citation></ref><ref id="B32"><citation citation-type="other"><article-title>JChem, ChemAxon Ltd</article-title><ext-link ext-link-type="uri" xlink:href="http://www.chemaxon.com/"/></citation></ref><ref id="B33"><citation citation-type="other"><article-title>PubChem Fingerprint for JChem, NIH Chemical Genomics Center</article-title><ext-link ext-link-type="uri" xlink:href="http://www.ncgc.nih.gov/pub/openhts/"/></citation></ref></ref-list></back></article>